{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/shivaniku/Documents/SHIVANI/node collection/EcommerceProject/mypage/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport * as i2 from '@angular/common';\nimport { isPlatformBrowser, isPlatformServer, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Directive, InjectionToken, PLATFORM_ID, Injectable, Inject, EventEmitter, TemplateRef, Component, ContentChild, ViewChild, Input, Output, Optional, NgModule } from '@angular/core';\nimport { filter, first, map, switchMap } from 'rxjs/operators';\nimport { BehaviorSubject, from } from 'rxjs';\nconst _c0 = [\"stripeElementRef\"];\n\nfunction StripeCardComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, 3);\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.loadingTemplate);\n  }\n}\n\nfunction StripeCardNumberComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, 3);\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.loadingTemplate);\n  }\n}\n\nfunction StripeCardExpiryComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, 3);\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.loadingTemplate);\n  }\n}\n\nfunction StripeCardCvcComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, 3);\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.loadingTemplate);\n  }\n}\n\nfunction StripeFpxBankComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, 3);\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.loadingTemplate);\n  }\n}\n\nfunction StripeIdealBankComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, 3);\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.loadingTemplate);\n  }\n}\n\nfunction StripeIbanComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, 3);\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.loadingTemplate);\n  }\n}\n\nfunction StripeAuBankAccountComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, 3);\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.loadingTemplate);\n  }\n}\n\nclass NgxStripeElementLoadingTemplateDirective {\n  constructor(templateRef) {\n    this.templateRef = templateRef;\n  }\n\n}\n\nNgxStripeElementLoadingTemplateDirective.ɵfac = function NgxStripeElementLoadingTemplateDirective_Factory(t) {\n  return new (t || NgxStripeElementLoadingTemplateDirective)(i0.ɵɵdirectiveInject(i0.TemplateRef));\n};\n\nNgxStripeElementLoadingTemplateDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: NgxStripeElementLoadingTemplateDirective,\n  selectors: [[\"\", \"ngxStripeLoadingTemplate\", \"\"]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxStripeElementLoadingTemplateDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[ngxStripeLoadingTemplate]'\n    }]\n  }], function () {\n    return [{\n      type: i0.TemplateRef\n    }];\n  }, null);\n})();\n\nconst STRIPE_PUBLISHABLE_KEY = new InjectionToken('Stripe Publishable Key');\nconst STRIPE_OPTIONS = new InjectionToken('Stripe Options');\nconst NGX_STRIPE_VERSION = new InjectionToken('NGX_STRIPE_VERSION');\n\nclass StripeInstance {\n  constructor(version, loader, window, key, options) {\n    this.version = version;\n    this.loader = loader;\n    this.window = window;\n    this.key = key;\n    this.options = options;\n    this.stripe$ = new BehaviorSubject(undefined);\n    this.stripe = this.stripe$.asObservable().pipe(filter(stripe => Boolean(stripe)));\n    this.loader.asStream().pipe(filter(status => status.loaded === true), first(), map(() => this.window.getNativeWindow().Stripe)).subscribe(stripeInstance => {\n      const stripe = this.options ? stripeInstance(this.key, this.options) : stripeInstance(this.key);\n      stripe.registerAppInfo(this.getNgxStripeAppInfo(this.version));\n      this.stripe$.next(stripe);\n    });\n  }\n\n  getInstance() {\n    return this.stripe$.getValue();\n  }\n\n  elements(options) {\n    return this.stripe$.asObservable().pipe(filter(stripe => Boolean(stripe)), map(stripe => stripe.elements(options)), first());\n  }\n\n  redirectToCheckout(options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.redirectToCheckout(options))), first());\n  }\n\n  confirmPayment(options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmPayment(options))), first());\n  }\n\n  confirmAcssDebitPayment(clientSecret, data, options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmAcssDebitPayment(clientSecret, data, options))), first());\n  }\n\n  confirmAlipayPayment(clientSecret, data, options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmAlipayPayment(clientSecret, data, options))), first());\n  }\n\n  confirmAuBecsDebitPayment(clientSecret, data) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmAuBecsDebitPayment(clientSecret, data))), first());\n  }\n\n  confirmBancontactPayment(clientSecret, data, options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmBancontactPayment(clientSecret, data, options))), first());\n  }\n\n  confirmBoletoPayment(clientSecret, data, options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmBoletoPayment(clientSecret, data, options))), first());\n  }\n\n  confirmCardPayment(clientSecret, data, options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmCardPayment(clientSecret, data, options))), first());\n  }\n\n  confirmCustomerBalancePayment(clientSecret, data, options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmCustomerBalancePayment(clientSecret, data, options))), first());\n  }\n\n  confirmEpsPayment(clientSecret, data, options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmEpsPayment(clientSecret, data, options))), first());\n  }\n\n  confirmFpxPayment(clientSecret, data, options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmFpxPayment(clientSecret, data, options))), first());\n  }\n\n  confirmGiropayPayment(clientSecret, data, options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmGiropayPayment(clientSecret, data, options))), first());\n  }\n\n  confirmGrabPayPayment(clientSecret, data, options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmGrabPayPayment(clientSecret, data, options))), first());\n  }\n\n  confirmIdealPayment(clientSecret, data, options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmIdealPayment(clientSecret, data, options))), first());\n  }\n\n  confirmKlarnaPayment(clientSecret, data, options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmKlarnaPayment(clientSecret, data, options))), first());\n  }\n\n  confirmOxxoPayment(clientSecret, data, options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmOxxoPayment(clientSecret, data, options))), first());\n  }\n\n  confirmP24Payment(clientSecret, data, options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmP24Payment(clientSecret, data, options))), first());\n  }\n\n  confirmPayNowPayment(clientSecret, data, options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmPayNowPayment(clientSecret, data, options))), first());\n  }\n\n  confirmPayPalPayment(clientSecret, data) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmPayPalPayment(clientSecret, data))), first());\n  }\n\n  confirmPromptPayPayment(clientSecret, data, options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmPromptPayPayment(clientSecret, data, options))), first());\n  }\n\n  confirmSepaDebitPayment(clientSecret, data) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmSepaDebitPayment(clientSecret, data))), first());\n  }\n\n  confirmSofortPayment(clientSecret, data) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmSofortPayment(clientSecret, data))), first());\n  }\n\n  confirmWechatPayPayment(clientSecret, data, options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmWechatPayPayment(clientSecret, data, options))), first());\n  }\n\n  handleCardAction(clientSecret) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.handleCardAction(clientSecret))), first());\n  }\n\n  verifyMicrodepositsForPayment(clientSecret, data) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.verifyMicrodepositsForPayment(clientSecret, data))), first());\n  }\n\n  createPaymentMethod(paymentMethodData) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.createPaymentMethod(paymentMethodData))), first());\n  }\n\n  retrievePaymentIntent(clientSecret) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.retrievePaymentIntent(clientSecret))), first());\n  }\n\n  confirmSetup(options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmSetup(options))), first());\n  }\n\n  confirmAcssDebitSetup(clientSecret, data, options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmAcssDebitSetup(clientSecret, data, options))), first());\n  }\n\n  confirmAuBecsDebitSetup(clientSecret, data) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmAuBecsDebitSetup(clientSecret, data))), first());\n  }\n\n  confirmBacsDebitSetup(clientSecret, data) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmBacsDebitSetup(clientSecret, data))), first());\n  }\n\n  confirmBancontactSetup(clientSecret, data) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmBancontactSetup(clientSecret, data))), first());\n  }\n\n  confirmCardSetup(clientSecret, data, options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmCardSetup(clientSecret, data, options))), first());\n  }\n\n  confirmIdealSetup(clientSecret, data) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmIdealSetup(clientSecret, data))), first());\n  }\n\n  confirmPayPalSetup(clientSecret, data) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmPayPalSetup(clientSecret, data))), first());\n  }\n\n  confirmSepaDebitSetup(clientSecret, data) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmSepaDebitSetup(clientSecret, data))), first());\n  }\n\n  confirmSofortSetup(clientSecret, data) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmSofortSetup(clientSecret, data))), first());\n  }\n\n  confirmAffirmPayment(clientSecret, data, options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmAffirmPayment(clientSecret, data, options))), first());\n  }\n\n  confirmAfterpayClearpayPayment(clientSecret, data, options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmAfterpayClearpayPayment(clientSecret, data, options))), first());\n  }\n\n  verifyMicrodepositsForSetup(clientSecret, data) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.verifyMicrodepositsForSetup(clientSecret, data))), first());\n  }\n\n  retrieveSetupIntent(clientSecret) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.retrieveSetupIntent(clientSecret))), first());\n  }\n\n  paymentRequest(options) {\n    const stripe = this.getInstance();\n    return stripe ? stripe.paymentRequest(options) : undefined;\n  }\n\n  createToken(tokenType, data) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.createToken(tokenType, data))), first());\n  }\n\n  createSource(a, b) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.createSource(a, b))), first());\n  }\n\n  retrieveSource(source) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.retrieveSource(source))), first());\n  }\n\n  verifyIdentity(clientSecret) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.verifyIdentity(clientSecret))), first());\n  }\n  /**\n   * @deprecated\n   */\n\n\n  handleCardPayment(clientSecret, element, data) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.handleCardPayment(clientSecret, element, data))), first());\n  }\n  /**\n   * @deprecated\n   */\n\n\n  confirmPaymentIntent(clientSecret, element, data) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmPaymentIntent(clientSecret, element, data))), first());\n  }\n  /**\n   * @deprecated\n   */\n\n\n  handleCardSetup(clientSecret, element, data) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.handleCardSetup(clientSecret, element, data))), first());\n  }\n  /**\n   * @deprecated\n   */\n\n\n  confirmSetupIntent(clientSecret, element, data) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmSetupIntent(clientSecret, element, data))), first());\n  }\n  /**\n   * @deprecated\n   */\n\n\n  handleFpxPayment(clientSecret, element, data) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.handleFpxPayment(clientSecret, element, data))), first());\n  }\n\n  getNgxStripeAppInfo(version) {\n    return {\n      name: 'ngx-stripe',\n      url: 'https://ngx-stripe.dev',\n      partner_id: 'pp_partner_JR4l1rmvUoPP4V',\n      version\n    };\n  }\n\n}\n\nclass WindowRef {\n  constructor(platformId) {\n    this.platformId = platformId;\n  }\n\n  getNativeWindow() {\n    if (isPlatformBrowser(this.platformId)) {\n      return window;\n    }\n\n    return {};\n  }\n\n}\n\nWindowRef.ɵfac = function WindowRef_Factory(t) {\n  return new (t || WindowRef)(i0.ɵɵinject(PLATFORM_ID));\n};\n\nWindowRef.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: WindowRef,\n  factory: WindowRef.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(WindowRef, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, null);\n})();\n\nclass DocumentRef {\n  constructor(platformId) {\n    this.platformId = platformId;\n  }\n\n  getNativeDocument() {\n    if (isPlatformBrowser(this.platformId)) {\n      return document;\n    }\n\n    return {};\n  }\n\n}\n\nDocumentRef.ɵfac = function DocumentRef_Factory(t) {\n  return new (t || DocumentRef)(i0.ɵɵinject(PLATFORM_ID));\n};\n\nDocumentRef.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: DocumentRef,\n  factory: DocumentRef.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DocumentRef, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, null);\n})();\n\nclass LazyStripeAPILoader {\n  constructor(platformId, window, document) {\n    this.platformId = platformId;\n    this.window = window;\n    this.document = document;\n    this.status = new BehaviorSubject({\n      error: false,\n      loaded: false,\n      loading: false\n    });\n  }\n\n  asStream() {\n    this.load();\n    return this.status.asObservable();\n  }\n\n  isReady() {\n    return this.status.getValue().loaded;\n  }\n\n  load() {\n    if (isPlatformServer(this.platformId)) {\n      return;\n    }\n\n    const status = this.status.getValue();\n\n    if (this.window.getNativeWindow().hasOwnProperty('Stripe')) {\n      this.status.next({\n        error: false,\n        loaded: true,\n        loading: false\n      });\n    } else if (!status.loaded && !status.loading) {\n      this.status.next({ ...status,\n        loading: true\n      });\n      const script = this.document.getNativeDocument().createElement('script');\n      script.type = 'text/javascript';\n      script.async = true;\n      script.defer = true;\n      script.src = 'https://js.stripe.com/v3/';\n\n      script.onload = () => {\n        this.status.next({\n          error: false,\n          loaded: true,\n          loading: false\n        });\n      };\n\n      script.onerror = () => {\n        this.status.next({\n          error: true,\n          loaded: false,\n          loading: false\n        });\n      };\n\n      this.document.getNativeDocument().body.appendChild(script);\n    }\n  }\n\n}\n\nLazyStripeAPILoader.ɵfac = function LazyStripeAPILoader_Factory(t) {\n  return new (t || LazyStripeAPILoader)(i0.ɵɵinject(PLATFORM_ID), i0.ɵɵinject(WindowRef), i0.ɵɵinject(DocumentRef));\n};\n\nLazyStripeAPILoader.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: LazyStripeAPILoader,\n  factory: LazyStripeAPILoader.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LazyStripeAPILoader, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }, {\n      type: WindowRef\n    }, {\n      type: DocumentRef\n    }];\n  }, null);\n})();\n\nclass StripeService {\n  constructor(version, key, options, loader, window) {\n    this.version = version;\n    this.key = key;\n    this.options = options;\n    this.loader = loader;\n    this.window = window;\n\n    if (key) {\n      this.stripe = new StripeInstance(this.version, this.loader, this.window, key, options);\n    }\n  }\n\n  getStripeReference() {\n    return this.loader.asStream().pipe(filter(status => status.loaded === true), map(() => this.window.getNativeWindow().Stripe));\n  }\n\n  getInstance() {\n    return this.stripe.getInstance();\n  }\n\n  setKey(key, options) {\n    return this.changeKey(key, options);\n  }\n\n  changeKey(key, options) {\n    this.stripe = new StripeInstance(this.version, this.loader, this.window, key, options);\n    return this.stripe;\n  }\n\n  elements(options) {\n    return this.stripe.elements(options);\n  }\n\n  redirectToCheckout(options) {\n    return this.stripe.redirectToCheckout(options);\n  }\n\n  confirmPayment(options) {\n    return this.stripe.confirmPayment(options);\n  }\n\n  confirmAcssDebitPayment(clientSecret, data, options) {\n    return this.stripe.confirmAcssDebitPayment(clientSecret, data, options);\n  }\n\n  confirmAlipayPayment(clientSecret, data, options) {\n    return this.stripe.confirmAlipayPayment(clientSecret, data, options);\n  }\n\n  confirmAuBecsDebitPayment(clientSecret, data) {\n    return this.stripe.confirmAuBecsDebitPayment(clientSecret, data);\n  }\n\n  confirmBancontactPayment(clientSecret, data, options) {\n    return this.stripe.confirmBancontactPayment(clientSecret, data, options);\n  }\n\n  confirmBoletoPayment(clientSecret, data, options) {\n    return this.stripe.confirmBoletoPayment(clientSecret, data, options);\n  }\n\n  confirmCardPayment(clientSecret, data, options) {\n    return this.stripe.confirmCardPayment(clientSecret, data, options);\n  }\n\n  confirmCustomerBalancePayment(clientSecret, data, options) {\n    return this.stripe.confirmCustomerBalancePayment(clientSecret, data, options);\n  }\n\n  confirmEpsPayment(clientSecret, data, options) {\n    return this.stripe.confirmEpsPayment(clientSecret, data, options);\n  }\n\n  confirmFpxPayment(clientSecret, data, options) {\n    return this.stripe.confirmFpxPayment(clientSecret, data, options);\n  }\n\n  confirmGiropayPayment(clientSecret, data, options) {\n    return this.stripe.confirmGiropayPayment(clientSecret, data, options);\n  }\n\n  confirmGrabPayPayment(clientSecret, data, options) {\n    return this.stripe.confirmGrabPayPayment(clientSecret, data, options);\n  }\n\n  confirmIdealPayment(clientSecret, data, options) {\n    return this.stripe.confirmIdealPayment(clientSecret, data, options);\n  }\n\n  confirmKlarnaPayment(clientSecret, data, options) {\n    return this.stripe.confirmKlarnaPayment(clientSecret, data, options);\n  }\n\n  confirmOxxoPayment(clientSecret, data, options) {\n    return this.stripe.confirmOxxoPayment(clientSecret, data, options);\n  }\n\n  confirmP24Payment(clientSecret, data, options) {\n    return this.stripe.confirmP24Payment(clientSecret, data, options);\n  }\n\n  confirmPayNowPayment(clientSecret, data, options) {\n    return this.stripe.confirmPayNowPayment(clientSecret, data, options);\n  }\n\n  confirmPayPalPayment(clientSecret, data) {\n    return this.stripe.confirmPayPalPayment(clientSecret, data);\n  }\n\n  confirmPromptPayPayment(clientSecret, data, options) {\n    return this.stripe.confirmPromptPayPayment(clientSecret, data, options);\n  }\n\n  confirmSepaDebitPayment(clientSecret, data) {\n    return this.stripe.confirmSepaDebitPayment(clientSecret, data);\n  }\n\n  confirmSofortPayment(clientSecret, data) {\n    return this.stripe.confirmSofortPayment(clientSecret, data);\n  }\n\n  confirmWechatPayPayment(clientSecret, data, options) {\n    return this.stripe.confirmWechatPayPayment(clientSecret, data, options);\n  }\n\n  handleCardAction(clientSecret) {\n    return this.stripe.handleCardAction(clientSecret);\n  }\n\n  verifyMicrodepositsForPayment(clientSecret, data) {\n    return this.stripe.verifyMicrodepositsForPayment(clientSecret, data);\n  }\n\n  createPaymentMethod(paymentMethodData) {\n    return this.stripe.createPaymentMethod(paymentMethodData);\n  }\n\n  retrievePaymentIntent(clientSecret) {\n    return this.stripe.retrievePaymentIntent(clientSecret);\n  }\n\n  confirmSetup(options) {\n    return this.stripe.confirmSetup(options);\n  }\n\n  confirmAcssDebitSetup(clientSecret, data, options) {\n    return this.stripe.confirmAcssDebitSetup(clientSecret, data, options);\n  }\n\n  confirmAuBecsDebitSetup(clientSecret, data) {\n    return this.stripe.confirmAuBecsDebitSetup(clientSecret, data);\n  }\n\n  confirmBacsDebitSetup(clientSecret, data) {\n    return this.stripe.confirmBacsDebitSetup(clientSecret, data);\n  }\n\n  confirmBancontactSetup(clientSecret, data) {\n    return this.stripe.confirmBancontactSetup(clientSecret, data);\n  }\n\n  confirmCardSetup(clientSecret, data, options) {\n    return this.stripe.confirmCardSetup(clientSecret, data, options);\n  }\n\n  confirmIdealSetup(clientSecret, data) {\n    return this.stripe.confirmIdealSetup(clientSecret, data);\n  }\n\n  confirmPayPalSetup(clientSecret, data) {\n    return this.stripe.confirmPayPalSetup(clientSecret, data);\n  }\n\n  confirmSepaDebitSetup(clientSecret, data) {\n    return this.stripe.confirmSepaDebitSetup(clientSecret, data);\n  }\n\n  confirmSofortSetup(clientSecret, data) {\n    return this.stripe.confirmSofortSetup(clientSecret, data);\n  }\n\n  confirmAffirmPayment(clientSecret, data, options) {\n    return this.stripe.confirmAffirmPayment(clientSecret, data, options);\n  }\n\n  confirmAfterpayClearpayPayment(clientSecret, data, options) {\n    return this.stripe.confirmAfterpayClearpayPayment(clientSecret, data, options);\n  }\n\n  verifyMicrodepositsForSetup(clientSecret, data) {\n    return this.stripe.verifyMicrodepositsForSetup(clientSecret, data);\n  }\n\n  retrieveSetupIntent(clientSecret) {\n    return this.stripe.retrieveSetupIntent(clientSecret);\n  }\n\n  paymentRequest(options) {\n    return this.stripe.paymentRequest(options);\n  }\n\n  createToken(tokenType, data) {\n    return this.stripe.createToken(tokenType, data);\n  }\n\n  createSource(a, b) {\n    return this.stripe.createSource(a, b);\n  }\n\n  retrieveSource(source) {\n    return this.stripe.retrieveSource(source);\n  }\n\n  verifyIdentity(clientSecret) {\n    return this.stripe.verifyIdentity(clientSecret);\n  }\n  /**\n   * @deprecated\n   */\n\n\n  handleCardPayment(clientSecret, element, data) {\n    return this.stripe.handleCardPayment(clientSecret, element, data);\n  }\n  /**\n   * @deprecated\n   */\n\n\n  confirmPaymentIntent(clientSecret, element, data) {\n    return this.stripe.confirmPaymentIntent(clientSecret, element, data);\n  }\n  /**\n   * @deprecated\n   */\n\n\n  handleCardSetup(clientSecret, element, data) {\n    return this.stripe.handleCardSetup(clientSecret, element, data);\n  }\n  /**\n   * @deprecated\n   */\n\n\n  confirmSetupIntent(clientSecret, element, data) {\n    return this.stripe.confirmSetupIntent(clientSecret, element, data);\n  }\n  /**\n   * @deprecated\n   */\n\n\n  handleFpxPayment(clientSecret, element, data) {\n    return this.stripe.handleFpxPayment(clientSecret, element, data);\n  }\n\n}\n\nStripeService.ɵfac = function StripeService_Factory(t) {\n  return new (t || StripeService)(i0.ɵɵinject(NGX_STRIPE_VERSION), i0.ɵɵinject(STRIPE_PUBLISHABLE_KEY), i0.ɵɵinject(STRIPE_OPTIONS), i0.ɵɵinject(LazyStripeAPILoader), i0.ɵɵinject(WindowRef));\n};\n\nStripeService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: StripeService,\n  factory: StripeService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StripeService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [NGX_STRIPE_VERSION]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [STRIPE_PUBLISHABLE_KEY]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [STRIPE_OPTIONS]\n      }]\n    }, {\n      type: LazyStripeAPILoader\n    }, {\n      type: WindowRef\n    }];\n  }, null);\n})();\n\nclass StripeElementsService {\n  constructor(stripeService) {\n    this.stripeService = stripeService;\n  }\n\n  elements(stripe, options = {}) {\n    if (stripe) {\n      if (Object.keys(options).length > 0) {\n        return stripe.elements(options);\n      }\n\n      return stripe.elements();\n    } else {\n      if (Object.keys(options).length > 0) {\n        return this.stripeService.elements(options);\n      }\n\n      return this.stripeService.elements();\n    }\n  }\n\n  paymentRequest(stripe, options) {\n    return stripe ? stripe.paymentRequest(options) : this.stripeService.paymentRequest(options);\n  }\n\n  mergeOptions(options, containerClass) {\n    if (!containerClass || options && options.classes) {\n      return options || {};\n    }\n\n    if (!options || !options.classes) {\n      return { ...(options || {}),\n        classes: {\n          base: containerClass,\n          complete: `${containerClass}--complete`,\n          empty: `${containerClass}--empty`,\n          focus: `${containerClass}--focus`,\n          invalid: `${containerClass}--invalid`,\n          webkitAutoFill: `${containerClass}--webkit-autoFill`\n        }\n      };\n    }\n\n    return options || {};\n  }\n\n}\n\nStripeElementsService.ɵfac = function StripeElementsService_Factory(t) {\n  return new (t || StripeElementsService)(i0.ɵɵinject(StripeService));\n};\n\nStripeElementsService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: StripeElementsService,\n  factory: StripeElementsService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StripeElementsService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: StripeService\n    }];\n  }, null);\n})();\n\nclass StripeCardComponent {\n  constructor(stripeElementsService) {\n    this.stripeElementsService = stripeElementsService;\n    this.load = new EventEmitter();\n    this.blur = new EventEmitter();\n    this.change = new EventEmitter();\n    this.focus = new EventEmitter();\n    this.ready = new EventEmitter();\n    this.escape = new EventEmitter();\n    this.state = 'notready';\n  }\n\n  ngOnChanges(changes) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.state = 'starting';\n\n      const options = _this.stripeElementsService.mergeOptions(_this.options, _this.containerClass);\n\n      let updateElements = false;\n\n      if (changes.elementsOptions || changes.stripe || !_this.elements) {\n        _this.elements = yield _this.stripeElementsService.elements(_this.stripe, _this.elementsOptions).toPromise();\n        updateElements = true;\n      }\n\n      if (changes.options || changes.containerClass || !_this.element || updateElements) {\n        if (_this.element && !updateElements) {\n          _this.update(options);\n        } else if (_this.elements && updateElements) {\n          _this.createElement(options);\n        }\n      }\n\n      _this.state = 'ready';\n    })();\n  }\n\n  ngOnInit() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      if (_this2.state === 'notready') {\n        _this2.state = 'starting';\n        _this2.elements = yield _this2.stripeElementsService.elements(_this2.stripe).toPromise();\n\n        _this2.createElement();\n\n        _this2.state = 'ready';\n      }\n    })();\n  }\n\n  ngOnDestroy() {\n    if (this.element) {\n      this.element.destroy();\n    }\n  }\n\n  update(options) {\n    this.element.update(options);\n  }\n  /**\n   * @deprecated\n   */\n\n\n  getCard() {\n    return this.element;\n  }\n\n  createElement(options = {}) {\n    this.element = this.elements.create('card', options);\n    this.element.on('change', ev => this.change.emit(ev));\n    this.element.on('blur', () => this.blur.emit());\n    this.element.on('focus', () => this.focus.emit());\n    this.element.on('ready', () => this.ready.emit());\n    this.element.on('escape', () => this.escape.emit());\n    this.element.mount(this.stripeElementRef.nativeElement);\n    this.load.emit(this.element);\n  }\n\n}\n\nStripeCardComponent.ɵfac = function StripeCardComponent_Factory(t) {\n  return new (t || StripeCardComponent)(i0.ɵɵdirectiveInject(StripeElementsService));\n};\n\nStripeCardComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: StripeCardComponent,\n  selectors: [[\"ngx-stripe-card\"]],\n  contentQueries: function StripeCardComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, NgxStripeElementLoadingTemplateDirective, 5, TemplateRef);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.loadingTemplate = _t.first);\n    }\n  },\n  viewQuery: function StripeCardComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.stripeElementRef = _t.first);\n    }\n  },\n  inputs: {\n    containerClass: \"containerClass\",\n    options: \"options\",\n    elementsOptions: \"elementsOptions\",\n    stripe: \"stripe\"\n  },\n  outputs: {\n    load: \"load\",\n    blur: \"blur\",\n    change: \"change\",\n    focus: \"focus\",\n    ready: \"ready\",\n    escape: \"escape\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 3,\n  vars: 1,\n  consts: [[1, \"field\"], [\"stripeElementRef\", \"\"], [3, \"ngTemplateOutlet\", 4, \"ngIf\"], [3, \"ngTemplateOutlet\"]],\n  template: function StripeCardComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0, 1);\n      i0.ɵɵtemplate(2, StripeCardComponent_ng_container_2_Template, 1, 1, \"ng-container\", 2);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.state !== \"ready\" && ctx.loadingTemplate);\n    }\n  },\n  directives: [i2.NgIf, i2.NgTemplateOutlet],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StripeCardComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-stripe-card',\n      template: `\n    <div class=\"field\" #stripeElementRef>\n      <ng-container *ngIf=\"state !== 'ready' && loadingTemplate\" [ngTemplateOutlet]=\"loadingTemplate\"></ng-container>\n    </div>\n  `\n    }]\n  }], function () {\n    return [{\n      type: StripeElementsService\n    }];\n  }, {\n    loadingTemplate: [{\n      type: ContentChild,\n      args: [NgxStripeElementLoadingTemplateDirective, {\n        read: TemplateRef\n      }]\n    }],\n    stripeElementRef: [{\n      type: ViewChild,\n      args: ['stripeElementRef']\n    }],\n    containerClass: [{\n      type: Input\n    }],\n    options: [{\n      type: Input\n    }],\n    elementsOptions: [{\n      type: Input\n    }],\n    stripe: [{\n      type: Input\n    }],\n    load: [{\n      type: Output\n    }],\n    blur: [{\n      type: Output\n    }],\n    change: [{\n      type: Output\n    }],\n    focus: [{\n      type: Output\n    }],\n    ready: [{\n      type: Output\n    }],\n    escape: [{\n      type: Output\n    }]\n  });\n})();\n\nclass StripeCardGroupDirective {\n  constructor(stripeElementsService) {\n    this.stripeElementsService = stripeElementsService;\n    this.elements = new EventEmitter();\n    this.state = 'notready';\n  }\n\n  ngOnChanges(changes) {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      _this3.state = 'starting';\n      const elementsOptions = _this3.elementsOptions;\n      const stripe = _this3.stripe;\n\n      if (changes.elementsOptions || changes.stripe || !_this3._elements) {\n        _this3._elements = yield _this3.stripeElementsService.elements(stripe, elementsOptions).toPromise();\n\n        _this3.elements.emit(_this3._elements);\n      }\n\n      _this3.state = 'ready';\n    })();\n  }\n\n  ngOnInit() {\n    var _this4 = this;\n\n    return _asyncToGenerator(function* () {\n      if (_this4.state === 'notready') {\n        _this4.state = 'starting';\n        _this4._elements = yield _this4.stripeElementsService.elements(_this4.stripe).toPromise();\n\n        _this4.elements.emit(_this4._elements);\n\n        _this4.state = 'ready';\n      }\n    })();\n  }\n\n}\n\nStripeCardGroupDirective.ɵfac = function StripeCardGroupDirective_Factory(t) {\n  return new (t || StripeCardGroupDirective)(i0.ɵɵdirectiveInject(StripeElementsService));\n};\n\nStripeCardGroupDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: StripeCardGroupDirective,\n  selectors: [[\"ngx-stripe-card-group\"], [\"\", \"ngxStripeCardGroup\", \"\"]],\n  inputs: {\n    elementsOptions: \"elementsOptions\",\n    stripe: \"stripe\"\n  },\n  outputs: {\n    elements: \"elements\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StripeCardGroupDirective, [{\n    type: Directive,\n    args: [{\n      selector: 'ngx-stripe-card-group,[ngxStripeCardGroup]'\n    }]\n  }], function () {\n    return [{\n      type: StripeElementsService\n    }];\n  }, {\n    elementsOptions: [{\n      type: Input\n    }],\n    stripe: [{\n      type: Input\n    }],\n    elements: [{\n      type: Output\n    }]\n  });\n})();\n\nclass StripeCardNumberComponent {\n  constructor(stripeElementsService, cardGroup) {\n    this.stripeElementsService = stripeElementsService;\n    this.cardGroup = cardGroup;\n    this.load = new EventEmitter();\n    this.blur = new EventEmitter();\n    this.change = new EventEmitter();\n    this.focus = new EventEmitter();\n    this.ready = new EventEmitter();\n    this.escape = new EventEmitter();\n  }\n\n  ngOnChanges(changes) {\n    var _this5 = this;\n\n    return _asyncToGenerator(function* () {\n      if (changes.options || changes.containerClass) {\n        _this5.setupElement('options');\n      }\n    })();\n  }\n\n  ngOnInit() {\n    if (this.cardGroup) {\n      this.cardGroupSubscription = this.cardGroup.elements.subscribe(elements => {\n        this.elements = elements;\n        this.setupElement('elements');\n      });\n    } else {\n      throw new Error('StripeCardNumberComponent must have StripeCardGroupDirective parent');\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.element) {\n      this.element.destroy();\n    }\n\n    if (this.cardGroupSubscription) {\n      this.cardGroupSubscription.unsubscribe();\n    }\n  }\n\n  update(options) {\n    this.element.update(options);\n  }\n  /**\n   * @deprecated\n   */\n\n\n  getCardNumber() {\n    return this.element;\n  }\n\n  setupElement(source) {\n    const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n\n    if (this.element && source === 'options') {\n      this.update(options);\n    } else if (this.elements && source === 'elements') {\n      this.element = this.elements.create('cardNumber', options);\n      this.element.on('change', ev => this.change.emit(ev));\n      this.element.on('blur', () => this.blur.emit());\n      this.element.on('focus', () => this.focus.emit());\n      this.element.on('ready', () => this.ready.emit());\n      this.element.on('escape', () => this.escape.emit());\n      this.element.mount(this.stripeElementRef.nativeElement);\n      this.load.emit(this.element);\n    }\n  }\n\n}\n\nStripeCardNumberComponent.ɵfac = function StripeCardNumberComponent_Factory(t) {\n  return new (t || StripeCardNumberComponent)(i0.ɵɵdirectiveInject(StripeElementsService), i0.ɵɵdirectiveInject(StripeCardGroupDirective, 8));\n};\n\nStripeCardNumberComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: StripeCardNumberComponent,\n  selectors: [[\"ngx-stripe-card-number\"]],\n  contentQueries: function StripeCardNumberComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, NgxStripeElementLoadingTemplateDirective, 5, TemplateRef);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.loadingTemplate = _t.first);\n    }\n  },\n  viewQuery: function StripeCardNumberComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.stripeElementRef = _t.first);\n    }\n  },\n  inputs: {\n    containerClass: \"containerClass\",\n    options: \"options\"\n  },\n  outputs: {\n    load: \"load\",\n    blur: \"blur\",\n    change: \"change\",\n    focus: \"focus\",\n    ready: \"ready\",\n    escape: \"escape\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 3,\n  vars: 1,\n  consts: [[1, \"field\"], [\"stripeElementRef\", \"\"], [3, \"ngTemplateOutlet\", 4, \"ngIf\"], [3, \"ngTemplateOutlet\"]],\n  template: function StripeCardNumberComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0, 1);\n      i0.ɵɵtemplate(2, StripeCardNumberComponent_ng_container_2_Template, 1, 1, \"ng-container\", 2);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.cardGroup && ctx.cardGroup.state !== \"ready\" && ctx.loadingTemplate);\n    }\n  },\n  directives: [i2.NgIf, i2.NgTemplateOutlet],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StripeCardNumberComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-stripe-card-number',\n      template: `\n    <div class=\"field\" #stripeElementRef>\n      <ng-container *ngIf=\"cardGroup && cardGroup.state !== 'ready' && loadingTemplate\" [ngTemplateOutlet]=\"loadingTemplate\"></ng-container>\n    </div>\n  `\n    }]\n  }], function () {\n    return [{\n      type: StripeElementsService\n    }, {\n      type: StripeCardGroupDirective,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, {\n    loadingTemplate: [{\n      type: ContentChild,\n      args: [NgxStripeElementLoadingTemplateDirective, {\n        read: TemplateRef\n      }]\n    }],\n    stripeElementRef: [{\n      type: ViewChild,\n      args: ['stripeElementRef']\n    }],\n    containerClass: [{\n      type: Input\n    }],\n    options: [{\n      type: Input\n    }],\n    load: [{\n      type: Output\n    }],\n    blur: [{\n      type: Output\n    }],\n    change: [{\n      type: Output\n    }],\n    focus: [{\n      type: Output\n    }],\n    ready: [{\n      type: Output\n    }],\n    escape: [{\n      type: Output\n    }]\n  });\n})();\n\nclass StripeCardExpiryComponent {\n  constructor(stripeElementsService, cardGroup) {\n    this.stripeElementsService = stripeElementsService;\n    this.cardGroup = cardGroup;\n    this.load = new EventEmitter();\n    this.blur = new EventEmitter();\n    this.change = new EventEmitter();\n    this.focus = new EventEmitter();\n    this.ready = new EventEmitter();\n    this.escape = new EventEmitter();\n  }\n\n  ngOnChanges(changes) {\n    var _this6 = this;\n\n    return _asyncToGenerator(function* () {\n      if (changes.options || changes.containerClass) {\n        _this6.setupElement('options');\n      }\n    })();\n  }\n\n  ngOnInit() {\n    if (this.cardGroup) {\n      this.cardGroupSubscription = this.cardGroup.elements.subscribe(elements => {\n        this.elements = elements;\n        this.setupElement('elements');\n      });\n    } else {\n      throw new Error('StripeCardExpiryComponent must have StripeCardGroupDirective parent');\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.element) {\n      this.element.destroy();\n    }\n\n    if (this.cardGroupSubscription) {\n      this.cardGroupSubscription.unsubscribe();\n    }\n  }\n\n  update(options) {\n    this.element.update(options);\n  }\n  /**\n   * @deprecated\n   */\n\n\n  getCardExpiry() {\n    return this.element;\n  }\n\n  setupElement(source) {\n    const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n\n    if (this.element && source === 'options') {\n      this.update(options);\n    } else if (this.elements && source === 'elements') {\n      this.element = this.elements.create('cardExpiry', options);\n      this.element.on('change', ev => this.change.emit(ev));\n      this.element.on('blur', () => this.blur.emit());\n      this.element.on('focus', () => this.focus.emit());\n      this.element.on('ready', () => this.ready.emit());\n      this.element.on('escape', () => this.escape.emit());\n      this.element.mount(this.stripeElementRef.nativeElement);\n      this.load.emit(this.element);\n    }\n  }\n\n}\n\nStripeCardExpiryComponent.ɵfac = function StripeCardExpiryComponent_Factory(t) {\n  return new (t || StripeCardExpiryComponent)(i0.ɵɵdirectiveInject(StripeElementsService), i0.ɵɵdirectiveInject(StripeCardGroupDirective, 8));\n};\n\nStripeCardExpiryComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: StripeCardExpiryComponent,\n  selectors: [[\"ngx-stripe-card-expiry\"]],\n  contentQueries: function StripeCardExpiryComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, NgxStripeElementLoadingTemplateDirective, 5, TemplateRef);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.loadingTemplate = _t.first);\n    }\n  },\n  viewQuery: function StripeCardExpiryComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.stripeElementRef = _t.first);\n    }\n  },\n  inputs: {\n    containerClass: \"containerClass\",\n    options: \"options\"\n  },\n  outputs: {\n    load: \"load\",\n    blur: \"blur\",\n    change: \"change\",\n    focus: \"focus\",\n    ready: \"ready\",\n    escape: \"escape\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 3,\n  vars: 1,\n  consts: [[1, \"field\"], [\"stripeElementRef\", \"\"], [3, \"ngTemplateOutlet\", 4, \"ngIf\"], [3, \"ngTemplateOutlet\"]],\n  template: function StripeCardExpiryComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0, 1);\n      i0.ɵɵtemplate(2, StripeCardExpiryComponent_ng_container_2_Template, 1, 1, \"ng-container\", 2);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.cardGroup && ctx.cardGroup.state !== \"ready\" && ctx.loadingTemplate);\n    }\n  },\n  directives: [i2.NgIf, i2.NgTemplateOutlet],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StripeCardExpiryComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-stripe-card-expiry',\n      template: `\n    <div class=\"field\" #stripeElementRef>\n      <ng-container *ngIf=\"cardGroup && cardGroup.state !== 'ready' && loadingTemplate\" [ngTemplateOutlet]=\"loadingTemplate\"></ng-container>\n    </div>\n  `\n    }]\n  }], function () {\n    return [{\n      type: StripeElementsService\n    }, {\n      type: StripeCardGroupDirective,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, {\n    loadingTemplate: [{\n      type: ContentChild,\n      args: [NgxStripeElementLoadingTemplateDirective, {\n        read: TemplateRef\n      }]\n    }],\n    stripeElementRef: [{\n      type: ViewChild,\n      args: ['stripeElementRef']\n    }],\n    containerClass: [{\n      type: Input\n    }],\n    options: [{\n      type: Input\n    }],\n    load: [{\n      type: Output\n    }],\n    blur: [{\n      type: Output\n    }],\n    change: [{\n      type: Output\n    }],\n    focus: [{\n      type: Output\n    }],\n    ready: [{\n      type: Output\n    }],\n    escape: [{\n      type: Output\n    }]\n  });\n})();\n\nclass StripeCardCvcComponent {\n  constructor(stripeElementsService, cardGroup) {\n    this.stripeElementsService = stripeElementsService;\n    this.cardGroup = cardGroup;\n    this.load = new EventEmitter();\n    this.blur = new EventEmitter();\n    this.change = new EventEmitter();\n    this.focus = new EventEmitter();\n    this.ready = new EventEmitter();\n    this.escape = new EventEmitter();\n  }\n\n  ngOnChanges(changes) {\n    var _this7 = this;\n\n    return _asyncToGenerator(function* () {\n      if (changes.options || changes.containerClass) {\n        _this7.setupElement('options');\n      }\n    })();\n  }\n\n  ngOnInit() {\n    if (this.cardGroup) {\n      this.cardGroupSubscription = this.cardGroup.elements.subscribe(elements => {\n        this.elements = elements;\n        this.setupElement('elements');\n      });\n    } else {\n      throw new Error('StripeCardCvcComponent must have StripeCardGroupDirective parent');\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.element) {\n      this.element.destroy();\n    }\n\n    if (this.cardGroupSubscription) {\n      this.cardGroupSubscription.unsubscribe();\n    }\n  }\n\n  update(options) {\n    this.element.update(options);\n  }\n  /**\n   * @deprecated\n   */\n\n\n  getCardCvc() {\n    return this.element;\n  }\n\n  setupElement(source) {\n    const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n\n    if (this.element && source === 'options') {\n      this.update(options);\n    } else if (this.elements && source === 'elements') {\n      this.element = this.elements.create('cardCvc', options);\n      this.element.on('change', ev => this.change.emit(ev));\n      this.element.on('blur', () => this.blur.emit());\n      this.element.on('focus', () => this.focus.emit());\n      this.element.on('ready', () => this.ready.emit());\n      this.element.on('escape', () => this.escape.emit());\n      this.element.mount(this.stripeElementRef.nativeElement);\n      this.load.emit(this.element);\n    }\n  }\n\n}\n\nStripeCardCvcComponent.ɵfac = function StripeCardCvcComponent_Factory(t) {\n  return new (t || StripeCardCvcComponent)(i0.ɵɵdirectiveInject(StripeElementsService), i0.ɵɵdirectiveInject(StripeCardGroupDirective, 8));\n};\n\nStripeCardCvcComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: StripeCardCvcComponent,\n  selectors: [[\"ngx-stripe-card-cvc\"]],\n  contentQueries: function StripeCardCvcComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, NgxStripeElementLoadingTemplateDirective, 5, TemplateRef);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.loadingTemplate = _t.first);\n    }\n  },\n  viewQuery: function StripeCardCvcComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.stripeElementRef = _t.first);\n    }\n  },\n  inputs: {\n    containerClass: \"containerClass\",\n    options: \"options\"\n  },\n  outputs: {\n    load: \"load\",\n    blur: \"blur\",\n    change: \"change\",\n    focus: \"focus\",\n    ready: \"ready\",\n    escape: \"escape\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 3,\n  vars: 1,\n  consts: [[1, \"field\"], [\"stripeElementRef\", \"\"], [3, \"ngTemplateOutlet\", 4, \"ngIf\"], [3, \"ngTemplateOutlet\"]],\n  template: function StripeCardCvcComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0, 1);\n      i0.ɵɵtemplate(2, StripeCardCvcComponent_ng_container_2_Template, 1, 1, \"ng-container\", 2);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.cardGroup && ctx.cardGroup.state !== \"ready\" && ctx.loadingTemplate);\n    }\n  },\n  directives: [i2.NgIf, i2.NgTemplateOutlet],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StripeCardCvcComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-stripe-card-cvc',\n      template: `\n    <div class=\"field\" #stripeElementRef>\n      <ng-container *ngIf=\"cardGroup && cardGroup.state !== 'ready' && loadingTemplate\" [ngTemplateOutlet]=\"loadingTemplate\"></ng-container>\n    </div>\n  `\n    }]\n  }], function () {\n    return [{\n      type: StripeElementsService\n    }, {\n      type: StripeCardGroupDirective,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, {\n    loadingTemplate: [{\n      type: ContentChild,\n      args: [NgxStripeElementLoadingTemplateDirective, {\n        read: TemplateRef\n      }]\n    }],\n    stripeElementRef: [{\n      type: ViewChild,\n      args: ['stripeElementRef']\n    }],\n    containerClass: [{\n      type: Input\n    }],\n    options: [{\n      type: Input\n    }],\n    load: [{\n      type: Output\n    }],\n    blur: [{\n      type: Output\n    }],\n    change: [{\n      type: Output\n    }],\n    focus: [{\n      type: Output\n    }],\n    ready: [{\n      type: Output\n    }],\n    escape: [{\n      type: Output\n    }]\n  });\n})();\n\nclass StripeFpxBankComponent {\n  constructor(stripeElementsService) {\n    this.stripeElementsService = stripeElementsService;\n    this.load = new EventEmitter();\n    this.blur = new EventEmitter();\n    this.change = new EventEmitter();\n    this.focus = new EventEmitter();\n    this.ready = new EventEmitter();\n    this.escape = new EventEmitter();\n    this.state = 'notready';\n  }\n\n  ngOnChanges(changes) {\n    var _this8 = this;\n\n    return _asyncToGenerator(function* () {\n      _this8.state = 'starting';\n\n      const options = _this8.stripeElementsService.mergeOptions(_this8.options, _this8.containerClass);\n\n      let updateElements = false;\n\n      if (changes.elementsOptions || changes.stripe || !_this8.elements) {\n        _this8.elements = yield _this8.stripeElementsService.elements(_this8.stripe, _this8.elementsOptions).toPromise();\n        updateElements = true;\n      }\n\n      if (changes.options || changes.containerClass || !_this8.element || updateElements) {\n        if (_this8.element && !updateElements) {\n          _this8.update(options);\n        } else if (_this8.elements && updateElements) {\n          _this8.createElement(options);\n        }\n      }\n\n      _this8.state = 'ready';\n    })();\n  }\n\n  ngOnInit() {\n    var _this9 = this;\n\n    return _asyncToGenerator(function* () {\n      if (_this9.state === 'notready') {\n        _this9.state = 'starting';\n        _this9.elements = yield _this9.stripeElementsService.elements(_this9.stripe).toPromise();\n\n        _this9.createElement();\n\n        _this9.state = 'ready';\n      }\n    })();\n  }\n\n  ngOnDestroy() {\n    if (this.element) {\n      this.element.destroy();\n    }\n  }\n\n  update(options) {\n    this.element.update(options);\n  }\n  /**\n   * @deprecated\n   */\n\n\n  getFpxBank() {\n    return this.element;\n  }\n\n  createElement(options = {\n    accountHolderType: 'individual'\n  }) {\n    this.element = this.elements.create('fpxBank', options);\n    this.element.on('change', ev => this.change.emit(ev));\n    this.element.on('blur', () => this.blur.emit());\n    this.element.on('focus', () => this.focus.emit());\n    this.element.on('ready', () => this.ready.emit());\n    this.element.on('escape', () => this.escape.emit());\n    this.element.mount(this.stripeElementRef.nativeElement);\n    this.load.emit(this.element);\n  }\n\n}\n\nStripeFpxBankComponent.ɵfac = function StripeFpxBankComponent_Factory(t) {\n  return new (t || StripeFpxBankComponent)(i0.ɵɵdirectiveInject(StripeElementsService));\n};\n\nStripeFpxBankComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: StripeFpxBankComponent,\n  selectors: [[\"ngx-stripe-fpx-bank\"]],\n  contentQueries: function StripeFpxBankComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, NgxStripeElementLoadingTemplateDirective, 5, TemplateRef);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.loadingTemplate = _t.first);\n    }\n  },\n  viewQuery: function StripeFpxBankComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.stripeElementRef = _t.first);\n    }\n  },\n  inputs: {\n    containerClass: \"containerClass\",\n    options: \"options\",\n    elementsOptions: \"elementsOptions\",\n    stripe: \"stripe\"\n  },\n  outputs: {\n    load: \"load\",\n    blur: \"blur\",\n    change: \"change\",\n    focus: \"focus\",\n    ready: \"ready\",\n    escape: \"escape\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 3,\n  vars: 1,\n  consts: [[1, \"field\"], [\"stripeElementRef\", \"\"], [3, \"ngTemplateOutlet\", 4, \"ngIf\"], [3, \"ngTemplateOutlet\"]],\n  template: function StripeFpxBankComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0, 1);\n      i0.ɵɵtemplate(2, StripeFpxBankComponent_ng_container_2_Template, 1, 1, \"ng-container\", 2);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.state !== \"ready\" && ctx.loadingTemplate);\n    }\n  },\n  directives: [i2.NgIf, i2.NgTemplateOutlet],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StripeFpxBankComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-stripe-fpx-bank',\n      template: `\n    <div class=\"field\" #stripeElementRef>\n      <ng-container *ngIf=\"state !== 'ready' && loadingTemplate\" [ngTemplateOutlet]=\"loadingTemplate\"></ng-container>\n    </div>\n  `\n    }]\n  }], function () {\n    return [{\n      type: StripeElementsService\n    }];\n  }, {\n    loadingTemplate: [{\n      type: ContentChild,\n      args: [NgxStripeElementLoadingTemplateDirective, {\n        read: TemplateRef\n      }]\n    }],\n    stripeElementRef: [{\n      type: ViewChild,\n      args: ['stripeElementRef']\n    }],\n    containerClass: [{\n      type: Input\n    }],\n    options: [{\n      type: Input\n    }],\n    elementsOptions: [{\n      type: Input\n    }],\n    stripe: [{\n      type: Input\n    }],\n    load: [{\n      type: Output\n    }],\n    blur: [{\n      type: Output\n    }],\n    change: [{\n      type: Output\n    }],\n    focus: [{\n      type: Output\n    }],\n    ready: [{\n      type: Output\n    }],\n    escape: [{\n      type: Output\n    }]\n  });\n})();\n\nclass StripeIdealBankComponent {\n  constructor(stripeElementsService) {\n    this.stripeElementsService = stripeElementsService;\n    this.load = new EventEmitter();\n    this.blur = new EventEmitter();\n    this.change = new EventEmitter();\n    this.focus = new EventEmitter();\n    this.ready = new EventEmitter();\n    this.escape = new EventEmitter();\n    this.state = 'notready';\n  }\n\n  ngOnChanges(changes) {\n    var _this10 = this;\n\n    return _asyncToGenerator(function* () {\n      _this10.state = 'starting';\n\n      const options = _this10.stripeElementsService.mergeOptions(_this10.options, _this10.containerClass);\n\n      let updateElements = false;\n\n      if (changes.elementsOptions || changes.stripe || !_this10.elements) {\n        _this10.elements = yield _this10.stripeElementsService.elements(_this10.stripe, _this10.elementsOptions).toPromise();\n        updateElements = true;\n      }\n\n      if (changes.options || changes.containerClass || !_this10.element || updateElements) {\n        if (_this10.element && !updateElements) {\n          _this10.update(options);\n        } else if (_this10.elements && updateElements) {\n          _this10.createElement(options);\n        }\n      }\n\n      _this10.state = 'ready';\n    })();\n  }\n\n  ngOnInit() {\n    var _this11 = this;\n\n    return _asyncToGenerator(function* () {\n      if (_this11.state === 'notready') {\n        _this11.state = 'starting';\n        _this11.elements = yield _this11.stripeElementsService.elements(_this11.stripe).toPromise();\n\n        _this11.createElement();\n\n        _this11.state = 'ready';\n      }\n    })();\n  }\n\n  ngOnDestroy() {\n    if (this.element) {\n      this.element.destroy();\n    }\n  }\n\n  update(options) {\n    this.element.update(options);\n  }\n  /**\n   * @deprecated\n   */\n\n\n  getIdealBank() {\n    return this.element;\n  }\n\n  createElement(options = {}) {\n    this.element = this.elements.create('idealBank', options);\n    this.element.on('change', ev => this.change.emit(ev));\n    this.element.on('blur', () => this.blur.emit());\n    this.element.on('focus', () => this.focus.emit());\n    this.element.on('ready', () => this.ready.emit());\n    this.element.on('escape', () => this.escape.emit());\n    this.element.mount(this.stripeElementRef.nativeElement);\n    this.load.emit(this.element);\n  }\n\n}\n\nStripeIdealBankComponent.ɵfac = function StripeIdealBankComponent_Factory(t) {\n  return new (t || StripeIdealBankComponent)(i0.ɵɵdirectiveInject(StripeElementsService));\n};\n\nStripeIdealBankComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: StripeIdealBankComponent,\n  selectors: [[\"ngx-stripe-ideal-bank\"]],\n  contentQueries: function StripeIdealBankComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, NgxStripeElementLoadingTemplateDirective, 5, TemplateRef);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.loadingTemplate = _t.first);\n    }\n  },\n  viewQuery: function StripeIdealBankComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.stripeElementRef = _t.first);\n    }\n  },\n  inputs: {\n    containerClass: \"containerClass\",\n    options: \"options\",\n    elementsOptions: \"elementsOptions\",\n    stripe: \"stripe\"\n  },\n  outputs: {\n    load: \"load\",\n    blur: \"blur\",\n    change: \"change\",\n    focus: \"focus\",\n    ready: \"ready\",\n    escape: \"escape\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 3,\n  vars: 1,\n  consts: [[1, \"field\"], [\"stripeElementRef\", \"\"], [3, \"ngTemplateOutlet\", 4, \"ngIf\"], [3, \"ngTemplateOutlet\"]],\n  template: function StripeIdealBankComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0, 1);\n      i0.ɵɵtemplate(2, StripeIdealBankComponent_ng_container_2_Template, 1, 1, \"ng-container\", 2);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.state !== \"ready\" && ctx.loadingTemplate);\n    }\n  },\n  directives: [i2.NgIf, i2.NgTemplateOutlet],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StripeIdealBankComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-stripe-ideal-bank',\n      template: `\n    <div class=\"field\" #stripeElementRef>\n      <ng-container *ngIf=\"state !== 'ready' && loadingTemplate\" [ngTemplateOutlet]=\"loadingTemplate\"></ng-container>\n    </div>\n  `\n    }]\n  }], function () {\n    return [{\n      type: StripeElementsService\n    }];\n  }, {\n    loadingTemplate: [{\n      type: ContentChild,\n      args: [NgxStripeElementLoadingTemplateDirective, {\n        read: TemplateRef\n      }]\n    }],\n    stripeElementRef: [{\n      type: ViewChild,\n      args: ['stripeElementRef']\n    }],\n    containerClass: [{\n      type: Input\n    }],\n    options: [{\n      type: Input\n    }],\n    elementsOptions: [{\n      type: Input\n    }],\n    stripe: [{\n      type: Input\n    }],\n    load: [{\n      type: Output\n    }],\n    blur: [{\n      type: Output\n    }],\n    change: [{\n      type: Output\n    }],\n    focus: [{\n      type: Output\n    }],\n    ready: [{\n      type: Output\n    }],\n    escape: [{\n      type: Output\n    }]\n  });\n})();\n\nclass StripeIbanComponent {\n  constructor(stripeElementsService) {\n    this.stripeElementsService = stripeElementsService;\n    this.load = new EventEmitter();\n    this.blur = new EventEmitter();\n    this.change = new EventEmitter();\n    this.focus = new EventEmitter();\n    this.ready = new EventEmitter();\n    this.escape = new EventEmitter();\n    this.state = 'notready';\n  }\n\n  ngOnChanges(changes) {\n    var _this12 = this;\n\n    return _asyncToGenerator(function* () {\n      _this12.state = 'starting';\n\n      const options = _this12.stripeElementsService.mergeOptions(_this12.options, _this12.containerClass);\n\n      let updateElements = false;\n\n      if (changes.elementsOptions || changes.stripe || !_this12.elements) {\n        _this12.elements = yield _this12.stripeElementsService.elements(_this12.stripe, _this12.elementsOptions).toPromise();\n        updateElements = true;\n      }\n\n      if (changes.options || changes.containerClass || !_this12.element || updateElements) {\n        if (_this12.element && !updateElements) {\n          _this12.update(options);\n        } else if (_this12.elements && updateElements) {\n          _this12.createElement(options);\n        }\n      }\n\n      _this12.state = 'ready';\n    })();\n  }\n\n  ngOnInit() {\n    var _this13 = this;\n\n    return _asyncToGenerator(function* () {\n      if (_this13.state === 'notready') {\n        _this13.state = 'starting';\n        _this13.elements = yield _this13.stripeElementsService.elements(_this13.stripe).toPromise();\n\n        _this13.createElement();\n\n        _this13.state = 'ready';\n      }\n    })();\n  }\n\n  ngOnDestroy() {\n    if (this.element) {\n      this.element.destroy();\n    }\n  }\n\n  update(options) {\n    this.element.update(options);\n  }\n  /**\n   * @deprecated\n   */\n\n\n  getIban() {\n    return this.element;\n  }\n\n  createElement(options = {}) {\n    this.element = this.elements.create('iban', options);\n    this.element.on('change', ev => this.change.emit(ev));\n    this.element.on('blur', () => this.blur.emit());\n    this.element.on('focus', () => this.focus.emit());\n    this.element.on('ready', () => this.ready.emit());\n    this.element.on('escape', () => this.escape.emit());\n    this.element.mount(this.stripeElementRef.nativeElement);\n    this.load.emit(this.element);\n  }\n\n}\n\nStripeIbanComponent.ɵfac = function StripeIbanComponent_Factory(t) {\n  return new (t || StripeIbanComponent)(i0.ɵɵdirectiveInject(StripeElementsService));\n};\n\nStripeIbanComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: StripeIbanComponent,\n  selectors: [[\"ngx-stripe-iban\"]],\n  contentQueries: function StripeIbanComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, NgxStripeElementLoadingTemplateDirective, 5, TemplateRef);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.loadingTemplate = _t.first);\n    }\n  },\n  viewQuery: function StripeIbanComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.stripeElementRef = _t.first);\n    }\n  },\n  inputs: {\n    containerClass: \"containerClass\",\n    options: \"options\",\n    elementsOptions: \"elementsOptions\",\n    stripe: \"stripe\"\n  },\n  outputs: {\n    load: \"load\",\n    blur: \"blur\",\n    change: \"change\",\n    focus: \"focus\",\n    ready: \"ready\",\n    escape: \"escape\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 3,\n  vars: 1,\n  consts: [[1, \"field\"], [\"stripeElementRef\", \"\"], [3, \"ngTemplateOutlet\", 4, \"ngIf\"], [3, \"ngTemplateOutlet\"]],\n  template: function StripeIbanComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0, 1);\n      i0.ɵɵtemplate(2, StripeIbanComponent_ng_container_2_Template, 1, 1, \"ng-container\", 2);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.state !== \"ready\" && ctx.loadingTemplate);\n    }\n  },\n  directives: [i2.NgIf, i2.NgTemplateOutlet],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StripeIbanComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-stripe-iban',\n      template: `\n    <div class=\"field\" #stripeElementRef>\n      <ng-container *ngIf=\"state !== 'ready' && loadingTemplate\" [ngTemplateOutlet]=\"loadingTemplate\"></ng-container>\n    </div>\n  `\n    }]\n  }], function () {\n    return [{\n      type: StripeElementsService\n    }];\n  }, {\n    loadingTemplate: [{\n      type: ContentChild,\n      args: [NgxStripeElementLoadingTemplateDirective, {\n        read: TemplateRef\n      }]\n    }],\n    stripeElementRef: [{\n      type: ViewChild,\n      args: ['stripeElementRef']\n    }],\n    containerClass: [{\n      type: Input\n    }],\n    options: [{\n      type: Input\n    }],\n    elementsOptions: [{\n      type: Input\n    }],\n    stripe: [{\n      type: Input\n    }],\n    load: [{\n      type: Output\n    }],\n    blur: [{\n      type: Output\n    }],\n    change: [{\n      type: Output\n    }],\n    focus: [{\n      type: Output\n    }],\n    ready: [{\n      type: Output\n    }],\n    escape: [{\n      type: Output\n    }]\n  });\n})();\n\nclass StripeAuBankAccountComponent {\n  constructor(stripeElementsService) {\n    this.stripeElementsService = stripeElementsService;\n    this.load = new EventEmitter();\n    this.blur = new EventEmitter();\n    this.change = new EventEmitter();\n    this.focus = new EventEmitter();\n    this.ready = new EventEmitter();\n    this.escape = new EventEmitter();\n    this.state = 'notready';\n  }\n\n  ngOnChanges(changes) {\n    var _this14 = this;\n\n    return _asyncToGenerator(function* () {\n      _this14.state = 'starting';\n\n      const options = _this14.stripeElementsService.mergeOptions(_this14.options, _this14.containerClass);\n\n      let updateElements = false;\n\n      if (changes.elementsOptions || changes.stripe || !_this14.elements) {\n        _this14.elements = yield _this14.stripeElementsService.elements(_this14.stripe, _this14.elementsOptions).toPromise();\n        updateElements = true;\n      }\n\n      if (changes.options || changes.containerClass || !_this14.element || updateElements) {\n        if (_this14.element && !updateElements) {\n          _this14.update(options);\n        } else if (_this14.elements && updateElements) {\n          _this14.createElement(options);\n        }\n      }\n\n      _this14.state = 'ready';\n    })();\n  }\n\n  ngOnInit() {\n    var _this15 = this;\n\n    return _asyncToGenerator(function* () {\n      if (_this15.state === 'notready') {\n        _this15.state = 'starting';\n        _this15.elements = yield _this15.stripeElementsService.elements(_this15.stripe).toPromise();\n\n        _this15.createElement();\n\n        _this15.state = 'ready';\n      }\n    })();\n  }\n\n  ngOnDestroy() {\n    if (this.element) {\n      this.element.destroy();\n    }\n  }\n\n  update(options) {\n    this.element.update(options);\n  }\n  /**\n   * @deprecated\n   */\n\n\n  getAuBankAccount() {\n    return this.element;\n  }\n\n  createElement(options = {}) {\n    this.element = this.elements.create('auBankAccount', options);\n    this.element.on('change', ev => this.change.emit(ev));\n    this.element.on('blur', () => this.blur.emit());\n    this.element.on('focus', () => this.focus.emit());\n    this.element.on('ready', () => this.ready.emit());\n    this.element.on('escape', () => this.escape.emit());\n    this.element.mount(this.stripeElementRef.nativeElement);\n    this.load.emit(this.element);\n  }\n\n}\n\nStripeAuBankAccountComponent.ɵfac = function StripeAuBankAccountComponent_Factory(t) {\n  return new (t || StripeAuBankAccountComponent)(i0.ɵɵdirectiveInject(StripeElementsService));\n};\n\nStripeAuBankAccountComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: StripeAuBankAccountComponent,\n  selectors: [[\"ngx-stripe-au-bank-account\"]],\n  contentQueries: function StripeAuBankAccountComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, NgxStripeElementLoadingTemplateDirective, 5, TemplateRef);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.loadingTemplate = _t.first);\n    }\n  },\n  viewQuery: function StripeAuBankAccountComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.stripeElementRef = _t.first);\n    }\n  },\n  inputs: {\n    containerClass: \"containerClass\",\n    options: \"options\",\n    elementsOptions: \"elementsOptions\",\n    stripe: \"stripe\"\n  },\n  outputs: {\n    load: \"load\",\n    blur: \"blur\",\n    change: \"change\",\n    focus: \"focus\",\n    ready: \"ready\",\n    escape: \"escape\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 3,\n  vars: 1,\n  consts: [[1, \"field\"], [\"stripeElementRef\", \"\"], [3, \"ngTemplateOutlet\", 4, \"ngIf\"], [3, \"ngTemplateOutlet\"]],\n  template: function StripeAuBankAccountComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0, 1);\n      i0.ɵɵtemplate(2, StripeAuBankAccountComponent_ng_container_2_Template, 1, 1, \"ng-container\", 2);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.state !== \"ready\" && ctx.loadingTemplate);\n    }\n  },\n  directives: [i2.NgIf, i2.NgTemplateOutlet],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StripeAuBankAccountComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-stripe-au-bank-account',\n      template: `\n    <div class=\"field\" #stripeElementRef>\n      <ng-container *ngIf=\"state !== 'ready' && loadingTemplate\" [ngTemplateOutlet]=\"loadingTemplate\"></ng-container>\n    </div>\n  `\n    }]\n  }], function () {\n    return [{\n      type: StripeElementsService\n    }];\n  }, {\n    loadingTemplate: [{\n      type: ContentChild,\n      args: [NgxStripeElementLoadingTemplateDirective, {\n        read: TemplateRef\n      }]\n    }],\n    stripeElementRef: [{\n      type: ViewChild,\n      args: ['stripeElementRef']\n    }],\n    containerClass: [{\n      type: Input\n    }],\n    options: [{\n      type: Input\n    }],\n    elementsOptions: [{\n      type: Input\n    }],\n    stripe: [{\n      type: Input\n    }],\n    load: [{\n      type: Output\n    }],\n    blur: [{\n      type: Output\n    }],\n    change: [{\n      type: Output\n    }],\n    focus: [{\n      type: Output\n    }],\n    ready: [{\n      type: Output\n    }],\n    escape: [{\n      type: Output\n    }]\n  });\n})();\n\nclass StripePaymentElementComponent {\n  constructor(stripeElementsService) {\n    this.stripeElementsService = stripeElementsService;\n    this.doNotCreateUntilClientSecretIsSet = false;\n    this.load = new EventEmitter();\n    this.blur = new EventEmitter();\n    this.change = new EventEmitter();\n    this.focus = new EventEmitter();\n    this.ready = new EventEmitter();\n    this.escape = new EventEmitter();\n    this.state = 'notready';\n  }\n\n  ngOnChanges(changes) {\n    var _this16 = this;\n\n    return _asyncToGenerator(function* () {\n      _this16.state = 'starting';\n\n      const options = _this16.stripeElementsService.mergeOptions(_this16.options, _this16.containerClass);\n\n      let updateElements = false;\n\n      if (changes.elementsOptions || changes.stripe || changes.clientSecret || changes.appearance || !_this16.elements) {\n        _this16.elements = yield _this16.stripeElementsService.elements(_this16.stripe, { ...(_this16.elementsOptions || {}),\n          ...(_this16.appearance ? {\n            appearance: _this16.appearance\n          } : {}),\n          ...(_this16.clientSecret ? {\n            clientSecret: _this16.clientSecret\n          } : {})\n        }).toPromise();\n        updateElements = true;\n      }\n\n      if (changes.options || changes.containerClass || !_this16.element || updateElements) {\n        if (_this16.element && !updateElements) {\n          _this16.update(options);\n        } else if (_this16.elements && updateElements) {\n          _this16.createElement(options);\n        }\n      }\n\n      _this16.state = 'ready';\n    })();\n  }\n\n  ngOnDestroy() {\n    if (this.element) {\n      this.element.destroy();\n    }\n  }\n\n  update(options) {\n    return this.element.update(options);\n  }\n\n  collapse() {\n    return this.element.collapse();\n  }\n\n  createElement(options = {}) {\n    try {\n      this.element = this.elements.create('payment', options);\n    } catch (err) {\n      this.elements = null;\n      throw err;\n    }\n\n    this.element.on('change', ev => this.change.emit(ev));\n    this.element.on('blur', () => this.blur.emit());\n    this.element.on('focus', () => this.focus.emit());\n    this.element.on('ready', () => this.ready.emit());\n    this.element.on('escape', () => this.escape.emit());\n    this.element.mount(this.stripeElementRef.nativeElement);\n    this.load.emit(this.element);\n  }\n\n}\n\nStripePaymentElementComponent.ɵfac = function StripePaymentElementComponent_Factory(t) {\n  return new (t || StripePaymentElementComponent)(i0.ɵɵdirectiveInject(StripeElementsService));\n};\n\nStripePaymentElementComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: StripePaymentElementComponent,\n  selectors: [[\"ngx-stripe-payment\"]],\n  viewQuery: function StripePaymentElementComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.stripeElementRef = _t.first);\n    }\n  },\n  inputs: {\n    containerClass: \"containerClass\",\n    options: \"options\",\n    elementsOptions: \"elementsOptions\",\n    stripe: \"stripe\",\n    appearance: \"appearance\",\n    clientSecret: \"clientSecret\",\n    doNotCreateUntilClientSecretIsSet: \"doNotCreateUntilClientSecretIsSet\"\n  },\n  outputs: {\n    load: \"load\",\n    blur: \"blur\",\n    change: \"change\",\n    focus: \"focus\",\n    ready: \"ready\",\n    escape: \"escape\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 2,\n  vars: 0,\n  consts: [[1, \"field\"], [\"stripeElementRef\", \"\"]],\n  template: function StripePaymentElementComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"div\", 0, 1);\n    }\n  },\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StripePaymentElementComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-stripe-payment',\n      template: `<div class=\"field\" #stripeElementRef></div>`\n    }]\n  }], function () {\n    return [{\n      type: StripeElementsService\n    }];\n  }, {\n    stripeElementRef: [{\n      type: ViewChild,\n      args: ['stripeElementRef']\n    }],\n    containerClass: [{\n      type: Input\n    }],\n    options: [{\n      type: Input\n    }],\n    elementsOptions: [{\n      type: Input\n    }],\n    stripe: [{\n      type: Input\n    }],\n    appearance: [{\n      type: Input\n    }],\n    clientSecret: [{\n      type: Input\n    }],\n    doNotCreateUntilClientSecretIsSet: [{\n      type: Input\n    }],\n    load: [{\n      type: Output\n    }],\n    blur: [{\n      type: Output\n    }],\n    change: [{\n      type: Output\n    }],\n    focus: [{\n      type: Output\n    }],\n    ready: [{\n      type: Output\n    }],\n    escape: [{\n      type: Output\n    }]\n  });\n})();\n\nclass StripePaymentRequestButtonComponent {\n  constructor(stripeElementsService) {\n    this.stripeElementsService = stripeElementsService;\n    this.load = new EventEmitter();\n    this.change = new EventEmitter();\n    this.blur = new EventEmitter();\n    this.focus = new EventEmitter();\n    this.ready = new EventEmitter();\n    this.token = new EventEmitter();\n    this.paymentMethod = new EventEmitter();\n    this.source = new EventEmitter();\n    this.cancel = new EventEmitter();\n    this.shippingaddresschange = new EventEmitter();\n    this.shippingoptionchange = new EventEmitter();\n    this.notavailable = new EventEmitter();\n  }\n\n  ngOnChanges(changes) {\n    var _this17 = this;\n\n    return _asyncToGenerator(function* () {\n      const options = _this17.stripeElementsService.mergeOptions(_this17.options, _this17.containerClass);\n\n      const elementsOptions = _this17.elementsOptions;\n      const stripe = _this17.stripe;\n      let updateElements = false;\n\n      if (changes.elementsOptions || changes.stripe || !_this17.elements) {\n        const elements = yield _this17.stripeElementsService.elements(stripe, elementsOptions).toPromise();\n        _this17.elements = elements;\n        updateElements = true;\n      }\n\n      if (changes.paymentOptions && _this17.paymentRequest) {\n        _this17.updateRequest(_this17.paymentOptions);\n      }\n\n      if (changes.options || changes.containerClass || !_this17.element || updateElements) {\n        if (_this17.element && !updateElements) {\n          _this17.update(options);\n        } else if (_this17.elements && updateElements) {\n          _this17.paymentRequest = _this17.stripeElementsService.paymentRequest(stripe, _this17.paymentOptions);\n\n          _this17.paymentRequest.on('token', ev => _this17.token.emit(ev));\n\n          _this17.paymentRequest.on('paymentmethod', ev => _this17.paymentMethod.emit(ev));\n\n          _this17.paymentRequest.on('source', ev => _this17.source.emit(ev));\n\n          _this17.paymentRequest.on('cancel', () => _this17.cancel.emit());\n\n          _this17.paymentRequest.on('shippingaddresschange', ev => _this17.shippingaddresschange.emit(ev));\n\n          _this17.paymentRequest.on('shippingoptionchange', ev => _this17.shippingoptionchange.emit(ev));\n\n          _this17.element = _this17.elements.create('paymentRequestButton', {\n            paymentRequest: _this17.paymentRequest,\n            ...options\n          });\n\n          _this17.canMakePayment().subscribe(result => {\n            if (result) {\n              _this17.element.on('click', ev => _this17.change.emit(ev));\n\n              _this17.element.on('blur', () => _this17.blur.emit());\n\n              _this17.element.on('focus', () => _this17.focus.emit());\n\n              _this17.element.on('ready', () => _this17.ready.emit());\n\n              _this17.element.mount(_this17.stripeElementRef.nativeElement);\n\n              _this17.load.emit({\n                paymentRequestButton: _this17.element,\n                paymentRequest: _this17.paymentRequest\n              });\n            } else {\n              _this17.notavailable.emit();\n            }\n          });\n        }\n      }\n    })();\n  }\n\n  canMakePayment() {\n    return from(this.paymentRequest.canMakePayment());\n  }\n\n  update(options) {\n    this.element.update(options);\n  }\n\n  updateRequest(options) {\n    const {\n      currency,\n      total,\n      displayItems,\n      shippingOptions\n    } = options;\n    this.paymentRequest.update({\n      currency,\n      total,\n      displayItems,\n      shippingOptions\n    });\n  }\n\n  show() {\n    this.paymentRequest.show();\n  }\n  /**\n   * @deprecated\n   */\n\n\n  getButton() {\n    return this.element;\n  }\n\n}\n\nStripePaymentRequestButtonComponent.ɵfac = function StripePaymentRequestButtonComponent_Factory(t) {\n  return new (t || StripePaymentRequestButtonComponent)(i0.ɵɵdirectiveInject(StripeElementsService));\n};\n\nStripePaymentRequestButtonComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: StripePaymentRequestButtonComponent,\n  selectors: [[\"ngx-stripe-payment-request-button\"]],\n  viewQuery: function StripePaymentRequestButtonComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.stripeElementRef = _t.first);\n    }\n  },\n  inputs: {\n    containerClass: \"containerClass\",\n    paymentOptions: \"paymentOptions\",\n    options: \"options\",\n    elementsOptions: \"elementsOptions\",\n    stripe: \"stripe\"\n  },\n  outputs: {\n    load: \"load\",\n    change: \"change\",\n    blur: \"blur\",\n    focus: \"focus\",\n    ready: \"ready\",\n    token: \"token\",\n    paymentMethod: \"paymentMethod\",\n    source: \"source\",\n    cancel: \"cancel\",\n    shippingaddresschange: \"shippingaddresschange\",\n    shippingoptionchange: \"shippingoptionchange\",\n    notavailable: \"notavailable\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 2,\n  vars: 0,\n  consts: [[1, \"field\"], [\"stripeElementRef\", \"\"]],\n  template: function StripePaymentRequestButtonComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"div\", 0, 1);\n    }\n  },\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StripePaymentRequestButtonComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-stripe-payment-request-button',\n      template: `<div class=\"field\" #stripeElementRef></div>`\n    }]\n  }], function () {\n    return [{\n      type: StripeElementsService\n    }];\n  }, {\n    stripeElementRef: [{\n      type: ViewChild,\n      args: ['stripeElementRef']\n    }],\n    containerClass: [{\n      type: Input\n    }],\n    paymentOptions: [{\n      type: Input\n    }],\n    options: [{\n      type: Input\n    }],\n    elementsOptions: [{\n      type: Input\n    }],\n    stripe: [{\n      type: Input\n    }],\n    load: [{\n      type: Output\n    }],\n    change: [{\n      type: Output\n    }],\n    blur: [{\n      type: Output\n    }],\n    focus: [{\n      type: Output\n    }],\n    ready: [{\n      type: Output\n    }],\n    token: [{\n      type: Output\n    }],\n    paymentMethod: [{\n      type: Output\n    }],\n    source: [{\n      type: Output\n    }],\n    cancel: [{\n      type: Output\n    }],\n    shippingaddresschange: [{\n      type: Output\n    }],\n    shippingoptionchange: [{\n      type: Output\n    }],\n    notavailable: [{\n      type: Output\n    }]\n  });\n})();\n\nclass StripeFactoryService {\n  constructor(version, baseKey, baseOptions, loader, window) {\n    this.version = version;\n    this.baseKey = baseKey;\n    this.baseOptions = baseOptions;\n    this.loader = loader;\n    this.window = window;\n  }\n\n  create(key, options) {\n    if (!key && !this.baseKey) {\n      return null;\n    }\n\n    return new StripeInstance(this.version, this.loader, this.window, key || this.baseKey, options || this.baseOptions);\n  }\n\n}\n\nStripeFactoryService.ɵfac = function StripeFactoryService_Factory(t) {\n  return new (t || StripeFactoryService)(i0.ɵɵinject(NGX_STRIPE_VERSION), i0.ɵɵinject(STRIPE_PUBLISHABLE_KEY), i0.ɵɵinject(STRIPE_OPTIONS), i0.ɵɵinject(LazyStripeAPILoader), i0.ɵɵinject(WindowRef));\n};\n\nStripeFactoryService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: StripeFactoryService,\n  factory: StripeFactoryService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StripeFactoryService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [NGX_STRIPE_VERSION]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [STRIPE_PUBLISHABLE_KEY]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [STRIPE_OPTIONS]\n      }]\n    }, {\n      type: LazyStripeAPILoader\n    }, {\n      type: WindowRef\n    }];\n  }, null);\n})();\n\nconst components = [StripeCardComponent, StripeCardNumberComponent, StripeCardExpiryComponent, StripeCardCvcComponent, StripeFpxBankComponent, StripeIdealBankComponent, StripeIbanComponent, StripeAuBankAccountComponent, StripePaymentElementComponent, StripePaymentRequestButtonComponent];\nconst directives = [StripeCardGroupDirective, NgxStripeElementLoadingTemplateDirective];\nconst currentVersion = '13.0.0';\n\nclass NgxStripeModule {\n  static forRoot(publishableKey, options) {\n    return {\n      ngModule: NgxStripeModule,\n      providers: [LazyStripeAPILoader, StripeService, StripeFactoryService, StripeElementsService, WindowRef, DocumentRef, {\n        provide: STRIPE_PUBLISHABLE_KEY,\n        useValue: publishableKey\n      }, {\n        provide: STRIPE_OPTIONS,\n        useValue: options\n      }, {\n        provide: NGX_STRIPE_VERSION,\n        useValue: currentVersion\n      }]\n    };\n  }\n\n  static forChild(publishableKey, options) {\n    return {\n      ngModule: NgxStripeModule,\n      providers: [LazyStripeAPILoader, StripeService, StripeFactoryService, StripeElementsService, WindowRef, DocumentRef, {\n        provide: STRIPE_PUBLISHABLE_KEY,\n        useValue: publishableKey\n      }, {\n        provide: STRIPE_OPTIONS,\n        useValue: options\n      }, {\n        provide: NGX_STRIPE_VERSION,\n        useValue: currentVersion\n      }]\n    };\n  }\n\n}\n\nNgxStripeModule.ɵfac = function NgxStripeModule_Factory(t) {\n  return new (t || NgxStripeModule)();\n};\n\nNgxStripeModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: NgxStripeModule\n});\nNgxStripeModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxStripeModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [...components, ...directives],\n      exports: [...components, ...directives],\n      imports: [CommonModule]\n    }]\n  }], null, null);\n})();\n/*\n * Public API Surface of ngx-stripe\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { DocumentRef, LazyStripeAPILoader, NgxStripeElementLoadingTemplateDirective, NgxStripeModule, STRIPE_OPTIONS, STRIPE_PUBLISHABLE_KEY, StripeAuBankAccountComponent, StripeCardComponent, StripeCardCvcComponent, StripeCardExpiryComponent, StripeCardGroupDirective, StripeCardNumberComponent, StripeElementsService, StripeFactoryService, StripeFpxBankComponent, StripeIbanComponent, StripeIdealBankComponent, StripeInstance, StripePaymentElementComponent, StripePaymentRequestButtonComponent, StripeService, WindowRef }; //# sourceMappingURL=ngx-stripe.mjs.map","map":{"version":3,"sources":["C:/Users/shivaniku/Documents/SHIVANI/node collection/EcommerceProject/mypage/node_modules/ngx-stripe/fesm2020/ngx-stripe.mjs"],"names":["i2","isPlatformBrowser","isPlatformServer","CommonModule","i0","Directive","InjectionToken","PLATFORM_ID","Injectable","Inject","EventEmitter","TemplateRef","Component","ContentChild","ViewChild","Input","Output","Optional","NgModule","filter","first","map","switchMap","BehaviorSubject","from","NgxStripeElementLoadingTemplateDirective","constructor","templateRef","ɵfac","ɵdir","type","args","selector","STRIPE_PUBLISHABLE_KEY","STRIPE_OPTIONS","NGX_STRIPE_VERSION","StripeInstance","version","loader","window","key","options","stripe$","undefined","stripe","asObservable","pipe","Boolean","asStream","status","loaded","getNativeWindow","Stripe","subscribe","stripeInstance","registerAppInfo","getNgxStripeAppInfo","next","getInstance","getValue","elements","redirectToCheckout","confirmPayment","confirmAcssDebitPayment","clientSecret","data","confirmAlipayPayment","confirmAuBecsDebitPayment","confirmBancontactPayment","confirmBoletoPayment","confirmCardPayment","confirmCustomerBalancePayment","confirmEpsPayment","confirmFpxPayment","confirmGiropayPayment","confirmGrabPayPayment","confirmIdealPayment","confirmKlarnaPayment","confirmOxxoPayment","confirmP24Payment","confirmPayNowPayment","confirmPayPalPayment","confirmPromptPayPayment","confirmSepaDebitPayment","confirmSofortPayment","confirmWechatPayPayment","handleCardAction","verifyMicrodepositsForPayment","createPaymentMethod","paymentMethodData","retrievePaymentIntent","confirmSetup","confirmAcssDebitSetup","confirmAuBecsDebitSetup","confirmBacsDebitSetup","confirmBancontactSetup","confirmCardSetup","confirmIdealSetup","confirmPayPalSetup","confirmSepaDebitSetup","confirmSofortSetup","confirmAffirmPayment","confirmAfterpayClearpayPayment","verifyMicrodepositsForSetup","retrieveSetupIntent","paymentRequest","createToken","tokenType","createSource","a","b","retrieveSource","source","verifyIdentity","handleCardPayment","element","confirmPaymentIntent","handleCardSetup","confirmSetupIntent","handleFpxPayment","name","url","partner_id","WindowRef","platformId","ɵprov","decorators","DocumentRef","getNativeDocument","document","LazyStripeAPILoader","error","loading","load","isReady","hasOwnProperty","script","createElement","async","defer","src","onload","onerror","body","appendChild","StripeService","getStripeReference","setKey","changeKey","StripeElementsService","stripeService","Object","keys","length","mergeOptions","containerClass","classes","base","complete","empty","focus","invalid","webkitAutoFill","StripeCardComponent","stripeElementsService","blur","change","ready","escape","state","ngOnChanges","changes","updateElements","elementsOptions","toPromise","update","ngOnInit","ngOnDestroy","destroy","getCard","create","on","ev","emit","mount","stripeElementRef","nativeElement","ɵcmp","NgIf","NgTemplateOutlet","template","loadingTemplate","read","StripeCardGroupDirective","_elements","StripeCardNumberComponent","cardGroup","setupElement","cardGroupSubscription","Error","unsubscribe","getCardNumber","StripeCardExpiryComponent","getCardExpiry","StripeCardCvcComponent","getCardCvc","StripeFpxBankComponent","getFpxBank","accountHolderType","StripeIdealBankComponent","getIdealBank","StripeIbanComponent","getIban","StripeAuBankAccountComponent","getAuBankAccount","StripePaymentElementComponent","doNotCreateUntilClientSecretIsSet","appearance","collapse","err","StripePaymentRequestButtonComponent","token","paymentMethod","cancel","shippingaddresschange","shippingoptionchange","notavailable","paymentOptions","updateRequest","canMakePayment","result","paymentRequestButton","currency","total","displayItems","shippingOptions","show","getButton","StripeFactoryService","baseKey","baseOptions","components","directives","currentVersion","NgxStripeModule","forRoot","publishableKey","ngModule","providers","provide","useValue","forChild","ɵmod","ɵinj","declarations","exports","imports"],"mappings":"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","sourcesContent":["import * as i2 from '@angular/common';\nimport { isPlatformBrowser, isPlatformServer, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Directive, InjectionToken, PLATFORM_ID, Injectable, Inject, EventEmitter, TemplateRef, Component, ContentChild, ViewChild, Input, Output, Optional, NgModule } from '@angular/core';\nimport { filter, first, map, switchMap } from 'rxjs/operators';\nimport { BehaviorSubject, from } from 'rxjs';\n\nclass NgxStripeElementLoadingTemplateDirective {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nNgxStripeElementLoadingTemplateDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: NgxStripeElementLoadingTemplateDirective, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nNgxStripeElementLoadingTemplateDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.0\", type: NgxStripeElementLoadingTemplateDirective, selector: \"[ngxStripeLoadingTemplate]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: NgxStripeElementLoadingTemplateDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[ngxStripeLoadingTemplate]'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n\nconst STRIPE_PUBLISHABLE_KEY = new InjectionToken('Stripe Publishable Key');\nconst STRIPE_OPTIONS = new InjectionToken('Stripe Options');\nconst NGX_STRIPE_VERSION = new InjectionToken('NGX_STRIPE_VERSION');\n\nclass StripeInstance {\n    constructor(version, loader, window, key, options) {\n        this.version = version;\n        this.loader = loader;\n        this.window = window;\n        this.key = key;\n        this.options = options;\n        this.stripe$ = new BehaviorSubject(undefined);\n        this.stripe = this.stripe$\n            .asObservable()\n            .pipe(filter((stripe) => Boolean(stripe)));\n        this.loader\n            .asStream()\n            .pipe(filter((status) => status.loaded === true), first(), map(() => this.window.getNativeWindow().Stripe))\n            .subscribe((stripeInstance) => {\n            const stripe = this.options\n                ? stripeInstance(this.key, this.options)\n                : stripeInstance(this.key);\n            stripe.registerAppInfo(this.getNgxStripeAppInfo(this.version));\n            this.stripe$.next(stripe);\n        });\n    }\n    getInstance() {\n        return this.stripe$.getValue();\n    }\n    elements(options) {\n        return this.stripe$.asObservable().pipe(filter((stripe) => Boolean(stripe)), map((stripe) => stripe.elements(options)), first());\n    }\n    redirectToCheckout(options) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.redirectToCheckout(options))), first());\n    }\n    confirmPayment(options) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmPayment(options))), first());\n    }\n    confirmAcssDebitPayment(clientSecret, data, options) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmAcssDebitPayment(clientSecret, data, options))), first());\n    }\n    confirmAlipayPayment(clientSecret, data, options) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmAlipayPayment(clientSecret, data, options))), first());\n    }\n    confirmAuBecsDebitPayment(clientSecret, data) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmAuBecsDebitPayment(clientSecret, data))), first());\n    }\n    confirmBancontactPayment(clientSecret, data, options) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmBancontactPayment(clientSecret, data, options))), first());\n    }\n    confirmBoletoPayment(clientSecret, data, options) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmBoletoPayment(clientSecret, data, options))), first());\n    }\n    confirmCardPayment(clientSecret, data, options) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmCardPayment(clientSecret, data, options))), first());\n    }\n    confirmCustomerBalancePayment(clientSecret, data, options) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmCustomerBalancePayment(clientSecret, data, options))), first());\n    }\n    confirmEpsPayment(clientSecret, data, options) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmEpsPayment(clientSecret, data, options))), first());\n    }\n    confirmFpxPayment(clientSecret, data, options) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmFpxPayment(clientSecret, data, options))), first());\n    }\n    confirmGiropayPayment(clientSecret, data, options) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmGiropayPayment(clientSecret, data, options))), first());\n    }\n    confirmGrabPayPayment(clientSecret, data, options) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmGrabPayPayment(clientSecret, data, options))), first());\n    }\n    confirmIdealPayment(clientSecret, data, options) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmIdealPayment(clientSecret, data, options))), first());\n    }\n    confirmKlarnaPayment(clientSecret, data, options) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmKlarnaPayment(clientSecret, data, options))), first());\n    }\n    confirmOxxoPayment(clientSecret, data, options) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmOxxoPayment(clientSecret, data, options))), first());\n    }\n    confirmP24Payment(clientSecret, data, options) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmP24Payment(clientSecret, data, options))), first());\n    }\n    confirmPayNowPayment(clientSecret, data, options) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmPayNowPayment(clientSecret, data, options))), first());\n    }\n    confirmPayPalPayment(clientSecret, data) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmPayPalPayment(clientSecret, data))), first());\n    }\n    confirmPromptPayPayment(clientSecret, data, options) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmPromptPayPayment(clientSecret, data, options))), first());\n    }\n    confirmSepaDebitPayment(clientSecret, data) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmSepaDebitPayment(clientSecret, data))), first());\n    }\n    confirmSofortPayment(clientSecret, data) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmSofortPayment(clientSecret, data))), first());\n    }\n    confirmWechatPayPayment(clientSecret, data, options) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmWechatPayPayment(clientSecret, data, options))), first());\n    }\n    handleCardAction(clientSecret) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.handleCardAction(clientSecret))), first());\n    }\n    verifyMicrodepositsForPayment(clientSecret, data) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.verifyMicrodepositsForPayment(clientSecret, data))), first());\n    }\n    createPaymentMethod(paymentMethodData) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.createPaymentMethod(paymentMethodData))), first());\n    }\n    retrievePaymentIntent(clientSecret) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.retrievePaymentIntent(clientSecret))), first());\n    }\n    confirmSetup(options) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmSetup(options))), first());\n    }\n    confirmAcssDebitSetup(clientSecret, data, options) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmAcssDebitSetup(clientSecret, data, options))), first());\n    }\n    confirmAuBecsDebitSetup(clientSecret, data) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmAuBecsDebitSetup(clientSecret, data))), first());\n    }\n    confirmBacsDebitSetup(clientSecret, data) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmBacsDebitSetup(clientSecret, data))), first());\n    }\n    confirmBancontactSetup(clientSecret, data) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmBancontactSetup(clientSecret, data))), first());\n    }\n    confirmCardSetup(clientSecret, data, options) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmCardSetup(clientSecret, data, options))), first());\n    }\n    confirmIdealSetup(clientSecret, data) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmIdealSetup(clientSecret, data))), first());\n    }\n    confirmPayPalSetup(clientSecret, data) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmPayPalSetup(clientSecret, data))), first());\n    }\n    confirmSepaDebitSetup(clientSecret, data) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmSepaDebitSetup(clientSecret, data))), first());\n    }\n    confirmSofortSetup(clientSecret, data) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmSofortSetup(clientSecret, data))), first());\n    }\n    confirmAffirmPayment(clientSecret, data, options) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmAffirmPayment(clientSecret, data, options))), first());\n    }\n    confirmAfterpayClearpayPayment(clientSecret, data, options) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmAfterpayClearpayPayment(clientSecret, data, options))), first());\n    }\n    verifyMicrodepositsForSetup(clientSecret, data) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.verifyMicrodepositsForSetup(clientSecret, data))), first());\n    }\n    retrieveSetupIntent(clientSecret) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.retrieveSetupIntent(clientSecret))), first());\n    }\n    paymentRequest(options) {\n        const stripe = this.getInstance();\n        return stripe ? stripe.paymentRequest(options) : undefined;\n    }\n    createToken(tokenType, data) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.createToken(tokenType, data))), first());\n    }\n    createSource(a, b) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.createSource(a, b))), first());\n    }\n    retrieveSource(source) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.retrieveSource(source))), first());\n    }\n    verifyIdentity(clientSecret) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.verifyIdentity(clientSecret))), first());\n    }\n    /**\n     * @deprecated\n     */\n    handleCardPayment(clientSecret, element, data) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.handleCardPayment(clientSecret, element, data))), first());\n    }\n    /**\n     * @deprecated\n     */\n    confirmPaymentIntent(clientSecret, element, data) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmPaymentIntent(clientSecret, element, data))), first());\n    }\n    /**\n     * @deprecated\n     */\n    handleCardSetup(clientSecret, element, data) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.handleCardSetup(clientSecret, element, data))), first());\n    }\n    /**\n     * @deprecated\n     */\n    confirmSetupIntent(clientSecret, element, data) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmSetupIntent(clientSecret, element, data))), first());\n    }\n    /**\n     * @deprecated\n     */\n    handleFpxPayment(clientSecret, element, data) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.handleFpxPayment(clientSecret, element, data))), first());\n    }\n    getNgxStripeAppInfo(version) {\n        return {\n            name: 'ngx-stripe',\n            url: 'https://ngx-stripe.dev',\n            partner_id: 'pp_partner_JR4l1rmvUoPP4V',\n            version\n        };\n    }\n}\n\nclass WindowRef {\n    constructor(platformId) {\n        this.platformId = platformId;\n    }\n    getNativeWindow() {\n        if (isPlatformBrowser(this.platformId)) {\n            return window;\n        }\n        return {};\n    }\n}\nWindowRef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: WindowRef, deps: [{ token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Injectable });\nWindowRef.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: WindowRef });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: WindowRef, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }]; } });\n\nclass DocumentRef {\n    constructor(platformId) {\n        this.platformId = platformId;\n    }\n    getNativeDocument() {\n        if (isPlatformBrowser(this.platformId)) {\n            return document;\n        }\n        return {};\n    }\n}\nDocumentRef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: DocumentRef, deps: [{ token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Injectable });\nDocumentRef.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: DocumentRef });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: DocumentRef, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }]; } });\n\nclass LazyStripeAPILoader {\n    constructor(platformId, window, document) {\n        this.platformId = platformId;\n        this.window = window;\n        this.document = document;\n        this.status = new BehaviorSubject({\n            error: false,\n            loaded: false,\n            loading: false\n        });\n    }\n    asStream() {\n        this.load();\n        return this.status.asObservable();\n    }\n    isReady() {\n        return this.status.getValue().loaded;\n    }\n    load() {\n        if (isPlatformServer(this.platformId)) {\n            return;\n        }\n        const status = this.status.getValue();\n        if (this.window.getNativeWindow().hasOwnProperty('Stripe')) {\n            this.status.next({\n                error: false,\n                loaded: true,\n                loading: false\n            });\n        }\n        else if (!status.loaded && !status.loading) {\n            this.status.next({\n                ...status,\n                loading: true\n            });\n            const script = this.document.getNativeDocument().createElement('script');\n            script.type = 'text/javascript';\n            script.async = true;\n            script.defer = true;\n            script.src = 'https://js.stripe.com/v3/';\n            script.onload = () => {\n                this.status.next({\n                    error: false,\n                    loaded: true,\n                    loading: false\n                });\n            };\n            script.onerror = () => {\n                this.status.next({\n                    error: true,\n                    loaded: false,\n                    loading: false\n                });\n            };\n            this.document.getNativeDocument().body.appendChild(script);\n        }\n    }\n}\nLazyStripeAPILoader.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: LazyStripeAPILoader, deps: [{ token: PLATFORM_ID }, { token: WindowRef }, { token: DocumentRef }], target: i0.ɵɵFactoryTarget.Injectable });\nLazyStripeAPILoader.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: LazyStripeAPILoader });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: LazyStripeAPILoader, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }, { type: WindowRef }, { type: DocumentRef }]; } });\n\nclass StripeService {\n    constructor(version, key, options, loader, window) {\n        this.version = version;\n        this.key = key;\n        this.options = options;\n        this.loader = loader;\n        this.window = window;\n        if (key) {\n            this.stripe = new StripeInstance(this.version, this.loader, this.window, key, options);\n        }\n    }\n    getStripeReference() {\n        return this.loader.asStream().pipe(filter((status) => status.loaded === true), map(() => this.window.getNativeWindow().Stripe));\n    }\n    getInstance() {\n        return this.stripe.getInstance();\n    }\n    setKey(key, options) {\n        return this.changeKey(key, options);\n    }\n    changeKey(key, options) {\n        this.stripe = new StripeInstance(this.version, this.loader, this.window, key, options);\n        return this.stripe;\n    }\n    elements(options) {\n        return this.stripe.elements(options);\n    }\n    redirectToCheckout(options) {\n        return this.stripe.redirectToCheckout(options);\n    }\n    confirmPayment(options) {\n        return this.stripe.confirmPayment(options);\n    }\n    confirmAcssDebitPayment(clientSecret, data, options) {\n        return this.stripe.confirmAcssDebitPayment(clientSecret, data, options);\n    }\n    confirmAlipayPayment(clientSecret, data, options) {\n        return this.stripe.confirmAlipayPayment(clientSecret, data, options);\n    }\n    confirmAuBecsDebitPayment(clientSecret, data) {\n        return this.stripe.confirmAuBecsDebitPayment(clientSecret, data);\n    }\n    confirmBancontactPayment(clientSecret, data, options) {\n        return this.stripe.confirmBancontactPayment(clientSecret, data, options);\n    }\n    confirmBoletoPayment(clientSecret, data, options) {\n        return this.stripe.confirmBoletoPayment(clientSecret, data, options);\n    }\n    confirmCardPayment(clientSecret, data, options) {\n        return this.stripe.confirmCardPayment(clientSecret, data, options);\n    }\n    confirmCustomerBalancePayment(clientSecret, data, options) {\n        return this.stripe.confirmCustomerBalancePayment(clientSecret, data, options);\n    }\n    confirmEpsPayment(clientSecret, data, options) {\n        return this.stripe.confirmEpsPayment(clientSecret, data, options);\n    }\n    confirmFpxPayment(clientSecret, data, options) {\n        return this.stripe.confirmFpxPayment(clientSecret, data, options);\n    }\n    confirmGiropayPayment(clientSecret, data, options) {\n        return this.stripe.confirmGiropayPayment(clientSecret, data, options);\n    }\n    confirmGrabPayPayment(clientSecret, data, options) {\n        return this.stripe.confirmGrabPayPayment(clientSecret, data, options);\n    }\n    confirmIdealPayment(clientSecret, data, options) {\n        return this.stripe.confirmIdealPayment(clientSecret, data, options);\n    }\n    confirmKlarnaPayment(clientSecret, data, options) {\n        return this.stripe.confirmKlarnaPayment(clientSecret, data, options);\n    }\n    confirmOxxoPayment(clientSecret, data, options) {\n        return this.stripe.confirmOxxoPayment(clientSecret, data, options);\n    }\n    confirmP24Payment(clientSecret, data, options) {\n        return this.stripe.confirmP24Payment(clientSecret, data, options);\n    }\n    confirmPayNowPayment(clientSecret, data, options) {\n        return this.stripe.confirmPayNowPayment(clientSecret, data, options);\n    }\n    confirmPayPalPayment(clientSecret, data) {\n        return this.stripe.confirmPayPalPayment(clientSecret, data);\n    }\n    confirmPromptPayPayment(clientSecret, data, options) {\n        return this.stripe.confirmPromptPayPayment(clientSecret, data, options);\n    }\n    confirmSepaDebitPayment(clientSecret, data) {\n        return this.stripe.confirmSepaDebitPayment(clientSecret, data);\n    }\n    confirmSofortPayment(clientSecret, data) {\n        return this.stripe.confirmSofortPayment(clientSecret, data);\n    }\n    confirmWechatPayPayment(clientSecret, data, options) {\n        return this.stripe.confirmWechatPayPayment(clientSecret, data, options);\n    }\n    handleCardAction(clientSecret) {\n        return this.stripe.handleCardAction(clientSecret);\n    }\n    verifyMicrodepositsForPayment(clientSecret, data) {\n        return this.stripe.verifyMicrodepositsForPayment(clientSecret, data);\n    }\n    createPaymentMethod(paymentMethodData) {\n        return this.stripe.createPaymentMethod(paymentMethodData);\n    }\n    retrievePaymentIntent(clientSecret) {\n        return this.stripe.retrievePaymentIntent(clientSecret);\n    }\n    confirmSetup(options) {\n        return this.stripe.confirmSetup(options);\n    }\n    confirmAcssDebitSetup(clientSecret, data, options) {\n        return this.stripe.confirmAcssDebitSetup(clientSecret, data, options);\n    }\n    confirmAuBecsDebitSetup(clientSecret, data) {\n        return this.stripe.confirmAuBecsDebitSetup(clientSecret, data);\n    }\n    confirmBacsDebitSetup(clientSecret, data) {\n        return this.stripe.confirmBacsDebitSetup(clientSecret, data);\n    }\n    confirmBancontactSetup(clientSecret, data) {\n        return this.stripe.confirmBancontactSetup(clientSecret, data);\n    }\n    confirmCardSetup(clientSecret, data, options) {\n        return this.stripe.confirmCardSetup(clientSecret, data, options);\n    }\n    confirmIdealSetup(clientSecret, data) {\n        return this.stripe.confirmIdealSetup(clientSecret, data);\n    }\n    confirmPayPalSetup(clientSecret, data) {\n        return this.stripe.confirmPayPalSetup(clientSecret, data);\n    }\n    confirmSepaDebitSetup(clientSecret, data) {\n        return this.stripe.confirmSepaDebitSetup(clientSecret, data);\n    }\n    confirmSofortSetup(clientSecret, data) {\n        return this.stripe.confirmSofortSetup(clientSecret, data);\n    }\n    confirmAffirmPayment(clientSecret, data, options) {\n        return this.stripe.confirmAffirmPayment(clientSecret, data, options);\n    }\n    confirmAfterpayClearpayPayment(clientSecret, data, options) {\n        return this.stripe.confirmAfterpayClearpayPayment(clientSecret, data, options);\n    }\n    verifyMicrodepositsForSetup(clientSecret, data) {\n        return this.stripe.verifyMicrodepositsForSetup(clientSecret, data);\n    }\n    retrieveSetupIntent(clientSecret) {\n        return this.stripe.retrieveSetupIntent(clientSecret);\n    }\n    paymentRequest(options) {\n        return this.stripe.paymentRequest(options);\n    }\n    createToken(tokenType, data) {\n        return this.stripe.createToken(tokenType, data);\n    }\n    createSource(a, b) {\n        return this.stripe.createSource(a, b);\n    }\n    retrieveSource(source) {\n        return this.stripe.retrieveSource(source);\n    }\n    verifyIdentity(clientSecret) {\n        return this.stripe.verifyIdentity(clientSecret);\n    }\n    /**\n     * @deprecated\n     */\n    handleCardPayment(clientSecret, element, data) {\n        return this.stripe.handleCardPayment(clientSecret, element, data);\n    }\n    /**\n     * @deprecated\n     */\n    confirmPaymentIntent(clientSecret, element, data) {\n        return this.stripe.confirmPaymentIntent(clientSecret, element, data);\n    }\n    /**\n     * @deprecated\n     */\n    handleCardSetup(clientSecret, element, data) {\n        return this.stripe.handleCardSetup(clientSecret, element, data);\n    }\n    /**\n     * @deprecated\n     */\n    confirmSetupIntent(clientSecret, element, data) {\n        return this.stripe.confirmSetupIntent(clientSecret, element, data);\n    }\n    /**\n     * @deprecated\n     */\n    handleFpxPayment(clientSecret, element, data) {\n        return this.stripe.handleFpxPayment(clientSecret, element, data);\n    }\n}\nStripeService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: StripeService, deps: [{ token: NGX_STRIPE_VERSION }, { token: STRIPE_PUBLISHABLE_KEY }, { token: STRIPE_OPTIONS }, { token: LazyStripeAPILoader }, { token: WindowRef }], target: i0.ɵɵFactoryTarget.Injectable });\nStripeService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: StripeService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: StripeService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [NGX_STRIPE_VERSION]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [STRIPE_PUBLISHABLE_KEY]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [STRIPE_OPTIONS]\n                }] }, { type: LazyStripeAPILoader }, { type: WindowRef }]; } });\n\nclass StripeElementsService {\n    constructor(stripeService) {\n        this.stripeService = stripeService;\n    }\n    elements(stripe, options = {}) {\n        if (stripe) {\n            if (Object.keys(options).length > 0) {\n                return stripe.elements(options);\n            }\n            return stripe.elements();\n        }\n        else {\n            if (Object.keys(options).length > 0) {\n                return this.stripeService.elements(options);\n            }\n            return this.stripeService.elements();\n        }\n    }\n    paymentRequest(stripe, options) {\n        return stripe\n            ? stripe.paymentRequest(options)\n            : this.stripeService.paymentRequest(options);\n    }\n    mergeOptions(options, containerClass) {\n        if (!containerClass || (options && options.classes)) {\n            return options || {};\n        }\n        if (!options || !options.classes) {\n            return {\n                ...(options || {}),\n                classes: {\n                    base: containerClass,\n                    complete: `${containerClass}--complete`,\n                    empty: `${containerClass}--empty`,\n                    focus: `${containerClass}--focus`,\n                    invalid: `${containerClass}--invalid`,\n                    webkitAutoFill: `${containerClass}--webkit-autoFill`\n                }\n            };\n        }\n        return options || {};\n    }\n}\nStripeElementsService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: StripeElementsService, deps: [{ token: StripeService }], target: i0.ɵɵFactoryTarget.Injectable });\nStripeElementsService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: StripeElementsService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: StripeElementsService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: StripeService }]; } });\n\nclass StripeCardComponent {\n    constructor(stripeElementsService) {\n        this.stripeElementsService = stripeElementsService;\n        this.load = new EventEmitter();\n        this.blur = new EventEmitter();\n        this.change = new EventEmitter();\n        this.focus = new EventEmitter();\n        this.ready = new EventEmitter();\n        this.escape = new EventEmitter();\n        this.state = 'notready';\n    }\n    async ngOnChanges(changes) {\n        this.state = 'starting';\n        const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n        let updateElements = false;\n        if (changes.elementsOptions || changes.stripe || !this.elements) {\n            this.elements = await this.stripeElementsService\n                .elements(this.stripe, this.elementsOptions)\n                .toPromise();\n            updateElements = true;\n        }\n        if (changes.options ||\n            changes.containerClass ||\n            !this.element ||\n            updateElements) {\n            if (this.element && !updateElements) {\n                this.update(options);\n            }\n            else if (this.elements && updateElements) {\n                this.createElement(options);\n            }\n        }\n        this.state = 'ready';\n    }\n    async ngOnInit() {\n        if (this.state === 'notready') {\n            this.state = 'starting';\n            this.elements = await this.stripeElementsService\n                .elements(this.stripe)\n                .toPromise();\n            this.createElement();\n            this.state = 'ready';\n        }\n    }\n    ngOnDestroy() {\n        if (this.element) {\n            this.element.destroy();\n        }\n    }\n    update(options) {\n        this.element.update(options);\n    }\n    /**\n     * @deprecated\n     */\n    getCard() {\n        return this.element;\n    }\n    createElement(options = {}) {\n        this.element = this.elements.create('card', options);\n        this.element.on('change', (ev) => this.change.emit(ev));\n        this.element.on('blur', () => this.blur.emit());\n        this.element.on('focus', () => this.focus.emit());\n        this.element.on('ready', () => this.ready.emit());\n        this.element.on('escape', () => this.escape.emit());\n        this.element.mount(this.stripeElementRef.nativeElement);\n        this.load.emit(this.element);\n    }\n}\nStripeCardComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: StripeCardComponent, deps: [{ token: StripeElementsService }], target: i0.ɵɵFactoryTarget.Component });\nStripeCardComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.0\", type: StripeCardComponent, selector: \"ngx-stripe-card\", inputs: { containerClass: \"containerClass\", options: \"options\", elementsOptions: \"elementsOptions\", stripe: \"stripe\" }, outputs: { load: \"load\", blur: \"blur\", change: \"change\", focus: \"focus\", ready: \"ready\", escape: \"escape\" }, queries: [{ propertyName: \"loadingTemplate\", first: true, predicate: NgxStripeElementLoadingTemplateDirective, descendants: true, read: TemplateRef }], viewQueries: [{ propertyName: \"stripeElementRef\", first: true, predicate: [\"stripeElementRef\"], descendants: true }], usesOnChanges: true, ngImport: i0, template: `\n    <div class=\"field\" #stripeElementRef>\n      <ng-container *ngIf=\"state !== 'ready' && loadingTemplate\" [ngTemplateOutlet]=\"loadingTemplate\"></ng-container>\n    </div>\n  `, isInline: true, directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: StripeCardComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ngx-stripe-card',\n                    template: `\n    <div class=\"field\" #stripeElementRef>\n      <ng-container *ngIf=\"state !== 'ready' && loadingTemplate\" [ngTemplateOutlet]=\"loadingTemplate\"></ng-container>\n    </div>\n  `\n                }]\n        }], ctorParameters: function () { return [{ type: StripeElementsService }]; }, propDecorators: { loadingTemplate: [{\n                type: ContentChild,\n                args: [NgxStripeElementLoadingTemplateDirective, { read: TemplateRef }]\n            }], stripeElementRef: [{\n                type: ViewChild,\n                args: ['stripeElementRef']\n            }], containerClass: [{\n                type: Input\n            }], options: [{\n                type: Input\n            }], elementsOptions: [{\n                type: Input\n            }], stripe: [{\n                type: Input\n            }], load: [{\n                type: Output\n            }], blur: [{\n                type: Output\n            }], change: [{\n                type: Output\n            }], focus: [{\n                type: Output\n            }], ready: [{\n                type: Output\n            }], escape: [{\n                type: Output\n            }] } });\n\nclass StripeCardGroupDirective {\n    constructor(stripeElementsService) {\n        this.stripeElementsService = stripeElementsService;\n        this.elements = new EventEmitter();\n        this.state = 'notready';\n    }\n    async ngOnChanges(changes) {\n        this.state = 'starting';\n        const elementsOptions = this.elementsOptions;\n        const stripe = this.stripe;\n        if (changes.elementsOptions || changes.stripe || !this._elements) {\n            this._elements = await this.stripeElementsService\n                .elements(stripe, elementsOptions)\n                .toPromise();\n            this.elements.emit(this._elements);\n        }\n        this.state = 'ready';\n    }\n    async ngOnInit() {\n        if (this.state === 'notready') {\n            this.state = 'starting';\n            this._elements = await this.stripeElementsService\n                .elements(this.stripe)\n                .toPromise();\n            this.elements.emit(this._elements);\n            this.state = 'ready';\n        }\n    }\n}\nStripeCardGroupDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: StripeCardGroupDirective, deps: [{ token: StripeElementsService }], target: i0.ɵɵFactoryTarget.Directive });\nStripeCardGroupDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.0\", type: StripeCardGroupDirective, selector: \"ngx-stripe-card-group,[ngxStripeCardGroup]\", inputs: { elementsOptions: \"elementsOptions\", stripe: \"stripe\" }, outputs: { elements: \"elements\" }, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: StripeCardGroupDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'ngx-stripe-card-group,[ngxStripeCardGroup]'\n                }]\n        }], ctorParameters: function () { return [{ type: StripeElementsService }]; }, propDecorators: { elementsOptions: [{\n                type: Input\n            }], stripe: [{\n                type: Input\n            }], elements: [{\n                type: Output\n            }] } });\n\nclass StripeCardNumberComponent {\n    constructor(stripeElementsService, cardGroup) {\n        this.stripeElementsService = stripeElementsService;\n        this.cardGroup = cardGroup;\n        this.load = new EventEmitter();\n        this.blur = new EventEmitter();\n        this.change = new EventEmitter();\n        this.focus = new EventEmitter();\n        this.ready = new EventEmitter();\n        this.escape = new EventEmitter();\n    }\n    async ngOnChanges(changes) {\n        if (changes.options || changes.containerClass) {\n            this.setupElement('options');\n        }\n    }\n    ngOnInit() {\n        if (this.cardGroup) {\n            this.cardGroupSubscription = this.cardGroup.elements.subscribe((elements) => {\n                this.elements = elements;\n                this.setupElement('elements');\n            });\n        }\n        else {\n            throw new Error('StripeCardNumberComponent must have StripeCardGroupDirective parent');\n        }\n    }\n    ngOnDestroy() {\n        if (this.element) {\n            this.element.destroy();\n        }\n        if (this.cardGroupSubscription) {\n            this.cardGroupSubscription.unsubscribe();\n        }\n    }\n    update(options) {\n        this.element.update(options);\n    }\n    /**\n     * @deprecated\n     */\n    getCardNumber() {\n        return this.element;\n    }\n    setupElement(source) {\n        const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n        if (this.element && source === 'options') {\n            this.update(options);\n        }\n        else if (this.elements && source === 'elements') {\n            this.element = this.elements.create('cardNumber', options);\n            this.element.on('change', (ev) => this.change.emit(ev));\n            this.element.on('blur', () => this.blur.emit());\n            this.element.on('focus', () => this.focus.emit());\n            this.element.on('ready', () => this.ready.emit());\n            this.element.on('escape', () => this.escape.emit());\n            this.element.mount(this.stripeElementRef.nativeElement);\n            this.load.emit(this.element);\n        }\n    }\n}\nStripeCardNumberComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: StripeCardNumberComponent, deps: [{ token: StripeElementsService }, { token: StripeCardGroupDirective, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nStripeCardNumberComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.0\", type: StripeCardNumberComponent, selector: \"ngx-stripe-card-number\", inputs: { containerClass: \"containerClass\", options: \"options\" }, outputs: { load: \"load\", blur: \"blur\", change: \"change\", focus: \"focus\", ready: \"ready\", escape: \"escape\" }, queries: [{ propertyName: \"loadingTemplate\", first: true, predicate: NgxStripeElementLoadingTemplateDirective, descendants: true, read: TemplateRef }], viewQueries: [{ propertyName: \"stripeElementRef\", first: true, predicate: [\"stripeElementRef\"], descendants: true }], usesOnChanges: true, ngImport: i0, template: `\n    <div class=\"field\" #stripeElementRef>\n      <ng-container *ngIf=\"cardGroup && cardGroup.state !== 'ready' && loadingTemplate\" [ngTemplateOutlet]=\"loadingTemplate\"></ng-container>\n    </div>\n  `, isInline: true, directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: StripeCardNumberComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ngx-stripe-card-number',\n                    template: `\n    <div class=\"field\" #stripeElementRef>\n      <ng-container *ngIf=\"cardGroup && cardGroup.state !== 'ready' && loadingTemplate\" [ngTemplateOutlet]=\"loadingTemplate\"></ng-container>\n    </div>\n  `\n                }]\n        }], ctorParameters: function () { return [{ type: StripeElementsService }, { type: StripeCardGroupDirective, decorators: [{\n                    type: Optional\n                }] }]; }, propDecorators: { loadingTemplate: [{\n                type: ContentChild,\n                args: [NgxStripeElementLoadingTemplateDirective, { read: TemplateRef }]\n            }], stripeElementRef: [{\n                type: ViewChild,\n                args: ['stripeElementRef']\n            }], containerClass: [{\n                type: Input\n            }], options: [{\n                type: Input\n            }], load: [{\n                type: Output\n            }], blur: [{\n                type: Output\n            }], change: [{\n                type: Output\n            }], focus: [{\n                type: Output\n            }], ready: [{\n                type: Output\n            }], escape: [{\n                type: Output\n            }] } });\n\nclass StripeCardExpiryComponent {\n    constructor(stripeElementsService, cardGroup) {\n        this.stripeElementsService = stripeElementsService;\n        this.cardGroup = cardGroup;\n        this.load = new EventEmitter();\n        this.blur = new EventEmitter();\n        this.change = new EventEmitter();\n        this.focus = new EventEmitter();\n        this.ready = new EventEmitter();\n        this.escape = new EventEmitter();\n    }\n    async ngOnChanges(changes) {\n        if (changes.options || changes.containerClass) {\n            this.setupElement('options');\n        }\n    }\n    ngOnInit() {\n        if (this.cardGroup) {\n            this.cardGroupSubscription = this.cardGroup.elements.subscribe((elements) => {\n                this.elements = elements;\n                this.setupElement('elements');\n            });\n        }\n        else {\n            throw new Error('StripeCardExpiryComponent must have StripeCardGroupDirective parent');\n        }\n    }\n    ngOnDestroy() {\n        if (this.element) {\n            this.element.destroy();\n        }\n        if (this.cardGroupSubscription) {\n            this.cardGroupSubscription.unsubscribe();\n        }\n    }\n    update(options) {\n        this.element.update(options);\n    }\n    /**\n     * @deprecated\n     */\n    getCardExpiry() {\n        return this.element;\n    }\n    setupElement(source) {\n        const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n        if (this.element && source === 'options') {\n            this.update(options);\n        }\n        else if (this.elements && source === 'elements') {\n            this.element = this.elements.create('cardExpiry', options);\n            this.element.on('change', (ev) => this.change.emit(ev));\n            this.element.on('blur', () => this.blur.emit());\n            this.element.on('focus', () => this.focus.emit());\n            this.element.on('ready', () => this.ready.emit());\n            this.element.on('escape', () => this.escape.emit());\n            this.element.mount(this.stripeElementRef.nativeElement);\n            this.load.emit(this.element);\n        }\n    }\n}\nStripeCardExpiryComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: StripeCardExpiryComponent, deps: [{ token: StripeElementsService }, { token: StripeCardGroupDirective, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nStripeCardExpiryComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.0\", type: StripeCardExpiryComponent, selector: \"ngx-stripe-card-expiry\", inputs: { containerClass: \"containerClass\", options: \"options\" }, outputs: { load: \"load\", blur: \"blur\", change: \"change\", focus: \"focus\", ready: \"ready\", escape: \"escape\" }, queries: [{ propertyName: \"loadingTemplate\", first: true, predicate: NgxStripeElementLoadingTemplateDirective, descendants: true, read: TemplateRef }], viewQueries: [{ propertyName: \"stripeElementRef\", first: true, predicate: [\"stripeElementRef\"], descendants: true }], usesOnChanges: true, ngImport: i0, template: `\n    <div class=\"field\" #stripeElementRef>\n      <ng-container *ngIf=\"cardGroup && cardGroup.state !== 'ready' && loadingTemplate\" [ngTemplateOutlet]=\"loadingTemplate\"></ng-container>\n    </div>\n  `, isInline: true, directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: StripeCardExpiryComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ngx-stripe-card-expiry',\n                    template: `\n    <div class=\"field\" #stripeElementRef>\n      <ng-container *ngIf=\"cardGroup && cardGroup.state !== 'ready' && loadingTemplate\" [ngTemplateOutlet]=\"loadingTemplate\"></ng-container>\n    </div>\n  `\n                }]\n        }], ctorParameters: function () { return [{ type: StripeElementsService }, { type: StripeCardGroupDirective, decorators: [{\n                    type: Optional\n                }] }]; }, propDecorators: { loadingTemplate: [{\n                type: ContentChild,\n                args: [NgxStripeElementLoadingTemplateDirective, { read: TemplateRef }]\n            }], stripeElementRef: [{\n                type: ViewChild,\n                args: ['stripeElementRef']\n            }], containerClass: [{\n                type: Input\n            }], options: [{\n                type: Input\n            }], load: [{\n                type: Output\n            }], blur: [{\n                type: Output\n            }], change: [{\n                type: Output\n            }], focus: [{\n                type: Output\n            }], ready: [{\n                type: Output\n            }], escape: [{\n                type: Output\n            }] } });\n\nclass StripeCardCvcComponent {\n    constructor(stripeElementsService, cardGroup) {\n        this.stripeElementsService = stripeElementsService;\n        this.cardGroup = cardGroup;\n        this.load = new EventEmitter();\n        this.blur = new EventEmitter();\n        this.change = new EventEmitter();\n        this.focus = new EventEmitter();\n        this.ready = new EventEmitter();\n        this.escape = new EventEmitter();\n    }\n    async ngOnChanges(changes) {\n        if (changes.options || changes.containerClass) {\n            this.setupElement('options');\n        }\n    }\n    ngOnInit() {\n        if (this.cardGroup) {\n            this.cardGroupSubscription = this.cardGroup.elements.subscribe((elements) => {\n                this.elements = elements;\n                this.setupElement('elements');\n            });\n        }\n        else {\n            throw new Error('StripeCardCvcComponent must have StripeCardGroupDirective parent');\n        }\n    }\n    ngOnDestroy() {\n        if (this.element) {\n            this.element.destroy();\n        }\n        if (this.cardGroupSubscription) {\n            this.cardGroupSubscription.unsubscribe();\n        }\n    }\n    update(options) {\n        this.element.update(options);\n    }\n    /**\n     * @deprecated\n     */\n    getCardCvc() {\n        return this.element;\n    }\n    setupElement(source) {\n        const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n        if (this.element && source === 'options') {\n            this.update(options);\n        }\n        else if (this.elements && source === 'elements') {\n            this.element = this.elements.create('cardCvc', options);\n            this.element.on('change', (ev) => this.change.emit(ev));\n            this.element.on('blur', () => this.blur.emit());\n            this.element.on('focus', () => this.focus.emit());\n            this.element.on('ready', () => this.ready.emit());\n            this.element.on('escape', () => this.escape.emit());\n            this.element.mount(this.stripeElementRef.nativeElement);\n            this.load.emit(this.element);\n        }\n    }\n}\nStripeCardCvcComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: StripeCardCvcComponent, deps: [{ token: StripeElementsService }, { token: StripeCardGroupDirective, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nStripeCardCvcComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.0\", type: StripeCardCvcComponent, selector: \"ngx-stripe-card-cvc\", inputs: { containerClass: \"containerClass\", options: \"options\" }, outputs: { load: \"load\", blur: \"blur\", change: \"change\", focus: \"focus\", ready: \"ready\", escape: \"escape\" }, queries: [{ propertyName: \"loadingTemplate\", first: true, predicate: NgxStripeElementLoadingTemplateDirective, descendants: true, read: TemplateRef }], viewQueries: [{ propertyName: \"stripeElementRef\", first: true, predicate: [\"stripeElementRef\"], descendants: true }], usesOnChanges: true, ngImport: i0, template: `\n    <div class=\"field\" #stripeElementRef>\n      <ng-container *ngIf=\"cardGroup && cardGroup.state !== 'ready' && loadingTemplate\" [ngTemplateOutlet]=\"loadingTemplate\"></ng-container>\n    </div>\n  `, isInline: true, directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: StripeCardCvcComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ngx-stripe-card-cvc',\n                    template: `\n    <div class=\"field\" #stripeElementRef>\n      <ng-container *ngIf=\"cardGroup && cardGroup.state !== 'ready' && loadingTemplate\" [ngTemplateOutlet]=\"loadingTemplate\"></ng-container>\n    </div>\n  `\n                }]\n        }], ctorParameters: function () { return [{ type: StripeElementsService }, { type: StripeCardGroupDirective, decorators: [{\n                    type: Optional\n                }] }]; }, propDecorators: { loadingTemplate: [{\n                type: ContentChild,\n                args: [NgxStripeElementLoadingTemplateDirective, { read: TemplateRef }]\n            }], stripeElementRef: [{\n                type: ViewChild,\n                args: ['stripeElementRef']\n            }], containerClass: [{\n                type: Input\n            }], options: [{\n                type: Input\n            }], load: [{\n                type: Output\n            }], blur: [{\n                type: Output\n            }], change: [{\n                type: Output\n            }], focus: [{\n                type: Output\n            }], ready: [{\n                type: Output\n            }], escape: [{\n                type: Output\n            }] } });\n\nclass StripeFpxBankComponent {\n    constructor(stripeElementsService) {\n        this.stripeElementsService = stripeElementsService;\n        this.load = new EventEmitter();\n        this.blur = new EventEmitter();\n        this.change = new EventEmitter();\n        this.focus = new EventEmitter();\n        this.ready = new EventEmitter();\n        this.escape = new EventEmitter();\n        this.state = 'notready';\n    }\n    async ngOnChanges(changes) {\n        this.state = 'starting';\n        const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n        let updateElements = false;\n        if (changes.elementsOptions || changes.stripe || !this.elements) {\n            this.elements = await this.stripeElementsService\n                .elements(this.stripe, this.elementsOptions)\n                .toPromise();\n            updateElements = true;\n        }\n        if (changes.options ||\n            changes.containerClass ||\n            !this.element ||\n            updateElements) {\n            if (this.element && !updateElements) {\n                this.update(options);\n            }\n            else if (this.elements && updateElements) {\n                this.createElement(options);\n            }\n        }\n        this.state = 'ready';\n    }\n    async ngOnInit() {\n        if (this.state === 'notready') {\n            this.state = 'starting';\n            this.elements = await this.stripeElementsService\n                .elements(this.stripe)\n                .toPromise();\n            this.createElement();\n            this.state = 'ready';\n        }\n    }\n    ngOnDestroy() {\n        if (this.element) {\n            this.element.destroy();\n        }\n    }\n    update(options) {\n        this.element.update(options);\n    }\n    /**\n     * @deprecated\n     */\n    getFpxBank() {\n        return this.element;\n    }\n    createElement(options = { accountHolderType: 'individual' }) {\n        this.element = this.elements.create('fpxBank', options);\n        this.element.on('change', (ev) => this.change.emit(ev));\n        this.element.on('blur', () => this.blur.emit());\n        this.element.on('focus', () => this.focus.emit());\n        this.element.on('ready', () => this.ready.emit());\n        this.element.on('escape', () => this.escape.emit());\n        this.element.mount(this.stripeElementRef.nativeElement);\n        this.load.emit(this.element);\n    }\n}\nStripeFpxBankComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: StripeFpxBankComponent, deps: [{ token: StripeElementsService }], target: i0.ɵɵFactoryTarget.Component });\nStripeFpxBankComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.0\", type: StripeFpxBankComponent, selector: \"ngx-stripe-fpx-bank\", inputs: { containerClass: \"containerClass\", options: \"options\", elementsOptions: \"elementsOptions\", stripe: \"stripe\" }, outputs: { load: \"load\", blur: \"blur\", change: \"change\", focus: \"focus\", ready: \"ready\", escape: \"escape\" }, queries: [{ propertyName: \"loadingTemplate\", first: true, predicate: NgxStripeElementLoadingTemplateDirective, descendants: true, read: TemplateRef }], viewQueries: [{ propertyName: \"stripeElementRef\", first: true, predicate: [\"stripeElementRef\"], descendants: true }], usesOnChanges: true, ngImport: i0, template: `\n    <div class=\"field\" #stripeElementRef>\n      <ng-container *ngIf=\"state !== 'ready' && loadingTemplate\" [ngTemplateOutlet]=\"loadingTemplate\"></ng-container>\n    </div>\n  `, isInline: true, directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: StripeFpxBankComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ngx-stripe-fpx-bank',\n                    template: `\n    <div class=\"field\" #stripeElementRef>\n      <ng-container *ngIf=\"state !== 'ready' && loadingTemplate\" [ngTemplateOutlet]=\"loadingTemplate\"></ng-container>\n    </div>\n  `\n                }]\n        }], ctorParameters: function () { return [{ type: StripeElementsService }]; }, propDecorators: { loadingTemplate: [{\n                type: ContentChild,\n                args: [NgxStripeElementLoadingTemplateDirective, { read: TemplateRef }]\n            }], stripeElementRef: [{\n                type: ViewChild,\n                args: ['stripeElementRef']\n            }], containerClass: [{\n                type: Input\n            }], options: [{\n                type: Input\n            }], elementsOptions: [{\n                type: Input\n            }], stripe: [{\n                type: Input\n            }], load: [{\n                type: Output\n            }], blur: [{\n                type: Output\n            }], change: [{\n                type: Output\n            }], focus: [{\n                type: Output\n            }], ready: [{\n                type: Output\n            }], escape: [{\n                type: Output\n            }] } });\n\nclass StripeIdealBankComponent {\n    constructor(stripeElementsService) {\n        this.stripeElementsService = stripeElementsService;\n        this.load = new EventEmitter();\n        this.blur = new EventEmitter();\n        this.change = new EventEmitter();\n        this.focus = new EventEmitter();\n        this.ready = new EventEmitter();\n        this.escape = new EventEmitter();\n        this.state = 'notready';\n    }\n    async ngOnChanges(changes) {\n        this.state = 'starting';\n        const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n        let updateElements = false;\n        if (changes.elementsOptions || changes.stripe || !this.elements) {\n            this.elements = await this.stripeElementsService\n                .elements(this.stripe, this.elementsOptions)\n                .toPromise();\n            updateElements = true;\n        }\n        if (changes.options ||\n            changes.containerClass ||\n            !this.element ||\n            updateElements) {\n            if (this.element && !updateElements) {\n                this.update(options);\n            }\n            else if (this.elements && updateElements) {\n                this.createElement(options);\n            }\n        }\n        this.state = 'ready';\n    }\n    async ngOnInit() {\n        if (this.state === 'notready') {\n            this.state = 'starting';\n            this.elements = await this.stripeElementsService\n                .elements(this.stripe)\n                .toPromise();\n            this.createElement();\n            this.state = 'ready';\n        }\n    }\n    ngOnDestroy() {\n        if (this.element) {\n            this.element.destroy();\n        }\n    }\n    update(options) {\n        this.element.update(options);\n    }\n    /**\n     * @deprecated\n     */\n    getIdealBank() {\n        return this.element;\n    }\n    createElement(options = {}) {\n        this.element = this.elements.create('idealBank', options);\n        this.element.on('change', (ev) => this.change.emit(ev));\n        this.element.on('blur', () => this.blur.emit());\n        this.element.on('focus', () => this.focus.emit());\n        this.element.on('ready', () => this.ready.emit());\n        this.element.on('escape', () => this.escape.emit());\n        this.element.mount(this.stripeElementRef.nativeElement);\n        this.load.emit(this.element);\n    }\n}\nStripeIdealBankComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: StripeIdealBankComponent, deps: [{ token: StripeElementsService }], target: i0.ɵɵFactoryTarget.Component });\nStripeIdealBankComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.0\", type: StripeIdealBankComponent, selector: \"ngx-stripe-ideal-bank\", inputs: { containerClass: \"containerClass\", options: \"options\", elementsOptions: \"elementsOptions\", stripe: \"stripe\" }, outputs: { load: \"load\", blur: \"blur\", change: \"change\", focus: \"focus\", ready: \"ready\", escape: \"escape\" }, queries: [{ propertyName: \"loadingTemplate\", first: true, predicate: NgxStripeElementLoadingTemplateDirective, descendants: true, read: TemplateRef }], viewQueries: [{ propertyName: \"stripeElementRef\", first: true, predicate: [\"stripeElementRef\"], descendants: true }], usesOnChanges: true, ngImport: i0, template: `\n    <div class=\"field\" #stripeElementRef>\n      <ng-container *ngIf=\"state !== 'ready' && loadingTemplate\" [ngTemplateOutlet]=\"loadingTemplate\"></ng-container>\n    </div>\n  `, isInline: true, directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: StripeIdealBankComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ngx-stripe-ideal-bank',\n                    template: `\n    <div class=\"field\" #stripeElementRef>\n      <ng-container *ngIf=\"state !== 'ready' && loadingTemplate\" [ngTemplateOutlet]=\"loadingTemplate\"></ng-container>\n    </div>\n  `\n                }]\n        }], ctorParameters: function () { return [{ type: StripeElementsService }]; }, propDecorators: { loadingTemplate: [{\n                type: ContentChild,\n                args: [NgxStripeElementLoadingTemplateDirective, { read: TemplateRef }]\n            }], stripeElementRef: [{\n                type: ViewChild,\n                args: ['stripeElementRef']\n            }], containerClass: [{\n                type: Input\n            }], options: [{\n                type: Input\n            }], elementsOptions: [{\n                type: Input\n            }], stripe: [{\n                type: Input\n            }], load: [{\n                type: Output\n            }], blur: [{\n                type: Output\n            }], change: [{\n                type: Output\n            }], focus: [{\n                type: Output\n            }], ready: [{\n                type: Output\n            }], escape: [{\n                type: Output\n            }] } });\n\nclass StripeIbanComponent {\n    constructor(stripeElementsService) {\n        this.stripeElementsService = stripeElementsService;\n        this.load = new EventEmitter();\n        this.blur = new EventEmitter();\n        this.change = new EventEmitter();\n        this.focus = new EventEmitter();\n        this.ready = new EventEmitter();\n        this.escape = new EventEmitter();\n        this.state = 'notready';\n    }\n    async ngOnChanges(changes) {\n        this.state = 'starting';\n        const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n        let updateElements = false;\n        if (changes.elementsOptions || changes.stripe || !this.elements) {\n            this.elements = await this.stripeElementsService\n                .elements(this.stripe, this.elementsOptions)\n                .toPromise();\n            updateElements = true;\n        }\n        if (changes.options ||\n            changes.containerClass ||\n            !this.element ||\n            updateElements) {\n            if (this.element && !updateElements) {\n                this.update(options);\n            }\n            else if (this.elements && updateElements) {\n                this.createElement(options);\n            }\n        }\n        this.state = 'ready';\n    }\n    async ngOnInit() {\n        if (this.state === 'notready') {\n            this.state = 'starting';\n            this.elements = await this.stripeElementsService\n                .elements(this.stripe)\n                .toPromise();\n            this.createElement();\n            this.state = 'ready';\n        }\n    }\n    ngOnDestroy() {\n        if (this.element) {\n            this.element.destroy();\n        }\n    }\n    update(options) {\n        this.element.update(options);\n    }\n    /**\n     * @deprecated\n     */\n    getIban() {\n        return this.element;\n    }\n    createElement(options = {}) {\n        this.element = this.elements.create('iban', options);\n        this.element.on('change', (ev) => this.change.emit(ev));\n        this.element.on('blur', () => this.blur.emit());\n        this.element.on('focus', () => this.focus.emit());\n        this.element.on('ready', () => this.ready.emit());\n        this.element.on('escape', () => this.escape.emit());\n        this.element.mount(this.stripeElementRef.nativeElement);\n        this.load.emit(this.element);\n    }\n}\nStripeIbanComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: StripeIbanComponent, deps: [{ token: StripeElementsService }], target: i0.ɵɵFactoryTarget.Component });\nStripeIbanComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.0\", type: StripeIbanComponent, selector: \"ngx-stripe-iban\", inputs: { containerClass: \"containerClass\", options: \"options\", elementsOptions: \"elementsOptions\", stripe: \"stripe\" }, outputs: { load: \"load\", blur: \"blur\", change: \"change\", focus: \"focus\", ready: \"ready\", escape: \"escape\" }, queries: [{ propertyName: \"loadingTemplate\", first: true, predicate: NgxStripeElementLoadingTemplateDirective, descendants: true, read: TemplateRef }], viewQueries: [{ propertyName: \"stripeElementRef\", first: true, predicate: [\"stripeElementRef\"], descendants: true }], usesOnChanges: true, ngImport: i0, template: `\n    <div class=\"field\" #stripeElementRef>\n      <ng-container *ngIf=\"state !== 'ready' && loadingTemplate\" [ngTemplateOutlet]=\"loadingTemplate\"></ng-container>\n    </div>\n  `, isInline: true, directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: StripeIbanComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ngx-stripe-iban',\n                    template: `\n    <div class=\"field\" #stripeElementRef>\n      <ng-container *ngIf=\"state !== 'ready' && loadingTemplate\" [ngTemplateOutlet]=\"loadingTemplate\"></ng-container>\n    </div>\n  `\n                }]\n        }], ctorParameters: function () { return [{ type: StripeElementsService }]; }, propDecorators: { loadingTemplate: [{\n                type: ContentChild,\n                args: [NgxStripeElementLoadingTemplateDirective, { read: TemplateRef }]\n            }], stripeElementRef: [{\n                type: ViewChild,\n                args: ['stripeElementRef']\n            }], containerClass: [{\n                type: Input\n            }], options: [{\n                type: Input\n            }], elementsOptions: [{\n                type: Input\n            }], stripe: [{\n                type: Input\n            }], load: [{\n                type: Output\n            }], blur: [{\n                type: Output\n            }], change: [{\n                type: Output\n            }], focus: [{\n                type: Output\n            }], ready: [{\n                type: Output\n            }], escape: [{\n                type: Output\n            }] } });\n\nclass StripeAuBankAccountComponent {\n    constructor(stripeElementsService) {\n        this.stripeElementsService = stripeElementsService;\n        this.load = new EventEmitter();\n        this.blur = new EventEmitter();\n        this.change = new EventEmitter();\n        this.focus = new EventEmitter();\n        this.ready = new EventEmitter();\n        this.escape = new EventEmitter();\n        this.state = 'notready';\n    }\n    async ngOnChanges(changes) {\n        this.state = 'starting';\n        const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n        let updateElements = false;\n        if (changes.elementsOptions || changes.stripe || !this.elements) {\n            this.elements = await this.stripeElementsService\n                .elements(this.stripe, this.elementsOptions)\n                .toPromise();\n            updateElements = true;\n        }\n        if (changes.options ||\n            changes.containerClass ||\n            !this.element ||\n            updateElements) {\n            if (this.element && !updateElements) {\n                this.update(options);\n            }\n            else if (this.elements && updateElements) {\n                this.createElement(options);\n            }\n        }\n        this.state = 'ready';\n    }\n    async ngOnInit() {\n        if (this.state === 'notready') {\n            this.state = 'starting';\n            this.elements = await this.stripeElementsService\n                .elements(this.stripe)\n                .toPromise();\n            this.createElement();\n            this.state = 'ready';\n        }\n    }\n    ngOnDestroy() {\n        if (this.element) {\n            this.element.destroy();\n        }\n    }\n    update(options) {\n        this.element.update(options);\n    }\n    /**\n     * @deprecated\n     */\n    getAuBankAccount() {\n        return this.element;\n    }\n    createElement(options = {}) {\n        this.element = this.elements.create('auBankAccount', options);\n        this.element.on('change', (ev) => this.change.emit(ev));\n        this.element.on('blur', () => this.blur.emit());\n        this.element.on('focus', () => this.focus.emit());\n        this.element.on('ready', () => this.ready.emit());\n        this.element.on('escape', () => this.escape.emit());\n        this.element.mount(this.stripeElementRef.nativeElement);\n        this.load.emit(this.element);\n    }\n}\nStripeAuBankAccountComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: StripeAuBankAccountComponent, deps: [{ token: StripeElementsService }], target: i0.ɵɵFactoryTarget.Component });\nStripeAuBankAccountComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.0\", type: StripeAuBankAccountComponent, selector: \"ngx-stripe-au-bank-account\", inputs: { containerClass: \"containerClass\", options: \"options\", elementsOptions: \"elementsOptions\", stripe: \"stripe\" }, outputs: { load: \"load\", blur: \"blur\", change: \"change\", focus: \"focus\", ready: \"ready\", escape: \"escape\" }, queries: [{ propertyName: \"loadingTemplate\", first: true, predicate: NgxStripeElementLoadingTemplateDirective, descendants: true, read: TemplateRef }], viewQueries: [{ propertyName: \"stripeElementRef\", first: true, predicate: [\"stripeElementRef\"], descendants: true }], usesOnChanges: true, ngImport: i0, template: `\n    <div class=\"field\" #stripeElementRef>\n      <ng-container *ngIf=\"state !== 'ready' && loadingTemplate\" [ngTemplateOutlet]=\"loadingTemplate\"></ng-container>\n    </div>\n  `, isInline: true, directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: StripeAuBankAccountComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ngx-stripe-au-bank-account',\n                    template: `\n    <div class=\"field\" #stripeElementRef>\n      <ng-container *ngIf=\"state !== 'ready' && loadingTemplate\" [ngTemplateOutlet]=\"loadingTemplate\"></ng-container>\n    </div>\n  `\n                }]\n        }], ctorParameters: function () { return [{ type: StripeElementsService }]; }, propDecorators: { loadingTemplate: [{\n                type: ContentChild,\n                args: [NgxStripeElementLoadingTemplateDirective, { read: TemplateRef }]\n            }], stripeElementRef: [{\n                type: ViewChild,\n                args: ['stripeElementRef']\n            }], containerClass: [{\n                type: Input\n            }], options: [{\n                type: Input\n            }], elementsOptions: [{\n                type: Input\n            }], stripe: [{\n                type: Input\n            }], load: [{\n                type: Output\n            }], blur: [{\n                type: Output\n            }], change: [{\n                type: Output\n            }], focus: [{\n                type: Output\n            }], ready: [{\n                type: Output\n            }], escape: [{\n                type: Output\n            }] } });\n\nclass StripePaymentElementComponent {\n    constructor(stripeElementsService) {\n        this.stripeElementsService = stripeElementsService;\n        this.doNotCreateUntilClientSecretIsSet = false;\n        this.load = new EventEmitter();\n        this.blur = new EventEmitter();\n        this.change = new EventEmitter();\n        this.focus = new EventEmitter();\n        this.ready = new EventEmitter();\n        this.escape = new EventEmitter();\n        this.state = 'notready';\n    }\n    async ngOnChanges(changes) {\n        this.state = 'starting';\n        const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n        let updateElements = false;\n        if (changes.elementsOptions || changes.stripe || changes.clientSecret || changes.appearance || !this.elements) {\n            this.elements = await this.stripeElementsService\n                .elements(this.stripe, {\n                ...(this.elementsOptions || {}),\n                ...(this.appearance ? { appearance: this.appearance } : {}),\n                ...(this.clientSecret ? { clientSecret: this.clientSecret } : {})\n            })\n                .toPromise();\n            updateElements = true;\n        }\n        if (changes.options ||\n            changes.containerClass ||\n            !this.element ||\n            updateElements) {\n            if (this.element && !updateElements) {\n                this.update(options);\n            }\n            else if (this.elements && updateElements) {\n                this.createElement(options);\n            }\n        }\n        this.state = 'ready';\n    }\n    ngOnDestroy() {\n        if (this.element) {\n            this.element.destroy();\n        }\n    }\n    update(options) {\n        return this.element.update(options);\n    }\n    collapse() {\n        return this.element.collapse();\n    }\n    createElement(options = {}) {\n        try {\n            this.element = this.elements.create('payment', options);\n        }\n        catch (err) {\n            this.elements = null;\n            throw err;\n        }\n        this.element.on('change', (ev) => this.change.emit(ev));\n        this.element.on('blur', () => this.blur.emit());\n        this.element.on('focus', () => this.focus.emit());\n        this.element.on('ready', () => this.ready.emit());\n        this.element.on('escape', () => this.escape.emit());\n        this.element.mount(this.stripeElementRef.nativeElement);\n        this.load.emit(this.element);\n    }\n}\nStripePaymentElementComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: StripePaymentElementComponent, deps: [{ token: StripeElementsService }], target: i0.ɵɵFactoryTarget.Component });\nStripePaymentElementComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.0\", type: StripePaymentElementComponent, selector: \"ngx-stripe-payment\", inputs: { containerClass: \"containerClass\", options: \"options\", elementsOptions: \"elementsOptions\", stripe: \"stripe\", appearance: \"appearance\", clientSecret: \"clientSecret\", doNotCreateUntilClientSecretIsSet: \"doNotCreateUntilClientSecretIsSet\" }, outputs: { load: \"load\", blur: \"blur\", change: \"change\", focus: \"focus\", ready: \"ready\", escape: \"escape\" }, viewQueries: [{ propertyName: \"stripeElementRef\", first: true, predicate: [\"stripeElementRef\"], descendants: true }], usesOnChanges: true, ngImport: i0, template: `<div class=\"field\" #stripeElementRef></div>`, isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: StripePaymentElementComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ngx-stripe-payment',\n                    template: `<div class=\"field\" #stripeElementRef></div>`\n                }]\n        }], ctorParameters: function () { return [{ type: StripeElementsService }]; }, propDecorators: { stripeElementRef: [{\n                type: ViewChild,\n                args: ['stripeElementRef']\n            }], containerClass: [{\n                type: Input\n            }], options: [{\n                type: Input\n            }], elementsOptions: [{\n                type: Input\n            }], stripe: [{\n                type: Input\n            }], appearance: [{\n                type: Input\n            }], clientSecret: [{\n                type: Input\n            }], doNotCreateUntilClientSecretIsSet: [{\n                type: Input\n            }], load: [{\n                type: Output\n            }], blur: [{\n                type: Output\n            }], change: [{\n                type: Output\n            }], focus: [{\n                type: Output\n            }], ready: [{\n                type: Output\n            }], escape: [{\n                type: Output\n            }] } });\n\nclass StripePaymentRequestButtonComponent {\n    constructor(stripeElementsService) {\n        this.stripeElementsService = stripeElementsService;\n        this.load = new EventEmitter();\n        this.change = new EventEmitter();\n        this.blur = new EventEmitter();\n        this.focus = new EventEmitter();\n        this.ready = new EventEmitter();\n        this.token = new EventEmitter();\n        this.paymentMethod = new EventEmitter();\n        this.source = new EventEmitter();\n        this.cancel = new EventEmitter();\n        this.shippingaddresschange = new EventEmitter();\n        this.shippingoptionchange = new EventEmitter();\n        this.notavailable = new EventEmitter();\n    }\n    async ngOnChanges(changes) {\n        const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n        const elementsOptions = this.elementsOptions;\n        const stripe = this.stripe;\n        let updateElements = false;\n        if (changes.elementsOptions || changes.stripe || !this.elements) {\n            const elements = await this.stripeElementsService\n                .elements(stripe, elementsOptions)\n                .toPromise();\n            this.elements = elements;\n            updateElements = true;\n        }\n        if (changes.paymentOptions && this.paymentRequest) {\n            this.updateRequest(this.paymentOptions);\n        }\n        if (changes.options ||\n            changes.containerClass ||\n            !this.element ||\n            updateElements) {\n            if (this.element && !updateElements) {\n                this.update(options);\n            }\n            else if (this.elements && updateElements) {\n                this.paymentRequest = this.stripeElementsService.paymentRequest(stripe, this.paymentOptions);\n                this.paymentRequest.on('token', (ev) => this.token.emit(ev));\n                this.paymentRequest.on('paymentmethod', (ev) => this.paymentMethod.emit(ev));\n                this.paymentRequest.on('source', (ev) => this.source.emit(ev));\n                this.paymentRequest.on('cancel', () => this.cancel.emit());\n                this.paymentRequest.on('shippingaddresschange', (ev) => this.shippingaddresschange.emit(ev));\n                this.paymentRequest.on('shippingoptionchange', (ev) => this.shippingoptionchange.emit(ev));\n                this.element = this.elements.create('paymentRequestButton', {\n                    paymentRequest: this.paymentRequest,\n                    ...options\n                });\n                this.canMakePayment().subscribe((result) => {\n                    if (result) {\n                        this.element.on('click', (ev) => this.change.emit(ev));\n                        this.element.on('blur', () => this.blur.emit());\n                        this.element.on('focus', () => this.focus.emit());\n                        this.element.on('ready', () => this.ready.emit());\n                        this.element.mount(this.stripeElementRef.nativeElement);\n                        this.load.emit({\n                            paymentRequestButton: this.element,\n                            paymentRequest: this.paymentRequest\n                        });\n                    }\n                    else {\n                        this.notavailable.emit();\n                    }\n                });\n            }\n        }\n    }\n    canMakePayment() {\n        return from(this.paymentRequest.canMakePayment());\n    }\n    update(options) {\n        this.element.update(options);\n    }\n    updateRequest(options) {\n        const { currency, total, displayItems, shippingOptions } = options;\n        this.paymentRequest.update({\n            currency,\n            total,\n            displayItems,\n            shippingOptions\n        });\n    }\n    show() {\n        this.paymentRequest.show();\n    }\n    /**\n     * @deprecated\n     */\n    getButton() {\n        return this.element;\n    }\n}\nStripePaymentRequestButtonComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: StripePaymentRequestButtonComponent, deps: [{ token: StripeElementsService }], target: i0.ɵɵFactoryTarget.Component });\nStripePaymentRequestButtonComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.0\", type: StripePaymentRequestButtonComponent, selector: \"ngx-stripe-payment-request-button\", inputs: { containerClass: \"containerClass\", paymentOptions: \"paymentOptions\", options: \"options\", elementsOptions: \"elementsOptions\", stripe: \"stripe\" }, outputs: { load: \"load\", change: \"change\", blur: \"blur\", focus: \"focus\", ready: \"ready\", token: \"token\", paymentMethod: \"paymentMethod\", source: \"source\", cancel: \"cancel\", shippingaddresschange: \"shippingaddresschange\", shippingoptionchange: \"shippingoptionchange\", notavailable: \"notavailable\" }, viewQueries: [{ propertyName: \"stripeElementRef\", first: true, predicate: [\"stripeElementRef\"], descendants: true }], usesOnChanges: true, ngImport: i0, template: `<div class=\"field\" #stripeElementRef></div>`, isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: StripePaymentRequestButtonComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ngx-stripe-payment-request-button',\n                    template: `<div class=\"field\" #stripeElementRef></div>`\n                }]\n        }], ctorParameters: function () { return [{ type: StripeElementsService }]; }, propDecorators: { stripeElementRef: [{\n                type: ViewChild,\n                args: ['stripeElementRef']\n            }], containerClass: [{\n                type: Input\n            }], paymentOptions: [{\n                type: Input\n            }], options: [{\n                type: Input\n            }], elementsOptions: [{\n                type: Input\n            }], stripe: [{\n                type: Input\n            }], load: [{\n                type: Output\n            }], change: [{\n                type: Output\n            }], blur: [{\n                type: Output\n            }], focus: [{\n                type: Output\n            }], ready: [{\n                type: Output\n            }], token: [{\n                type: Output\n            }], paymentMethod: [{\n                type: Output\n            }], source: [{\n                type: Output\n            }], cancel: [{\n                type: Output\n            }], shippingaddresschange: [{\n                type: Output\n            }], shippingoptionchange: [{\n                type: Output\n            }], notavailable: [{\n                type: Output\n            }] } });\n\nclass StripeFactoryService {\n    constructor(version, baseKey, baseOptions, loader, window) {\n        this.version = version;\n        this.baseKey = baseKey;\n        this.baseOptions = baseOptions;\n        this.loader = loader;\n        this.window = window;\n    }\n    create(key, options) {\n        if (!key && !this.baseKey) {\n            return null;\n        }\n        return new StripeInstance(this.version, this.loader, this.window, key || this.baseKey, options || this.baseOptions);\n    }\n}\nStripeFactoryService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: StripeFactoryService, deps: [{ token: NGX_STRIPE_VERSION }, { token: STRIPE_PUBLISHABLE_KEY }, { token: STRIPE_OPTIONS }, { token: LazyStripeAPILoader }, { token: WindowRef }], target: i0.ɵɵFactoryTarget.Injectable });\nStripeFactoryService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: StripeFactoryService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: StripeFactoryService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [NGX_STRIPE_VERSION]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [STRIPE_PUBLISHABLE_KEY]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [STRIPE_OPTIONS]\n                }] }, { type: LazyStripeAPILoader }, { type: WindowRef }]; } });\n\nconst components = [\n    StripeCardComponent,\n    StripeCardNumberComponent,\n    StripeCardExpiryComponent,\n    StripeCardCvcComponent,\n    StripeFpxBankComponent,\n    StripeIdealBankComponent,\n    StripeIbanComponent,\n    StripeAuBankAccountComponent,\n    StripePaymentElementComponent,\n    StripePaymentRequestButtonComponent\n];\nconst directives = [\n    StripeCardGroupDirective,\n    NgxStripeElementLoadingTemplateDirective\n];\nconst currentVersion = '13.0.0';\nclass NgxStripeModule {\n    static forRoot(publishableKey, options) {\n        return {\n            ngModule: NgxStripeModule,\n            providers: [\n                LazyStripeAPILoader,\n                StripeService,\n                StripeFactoryService,\n                StripeElementsService,\n                WindowRef,\n                DocumentRef,\n                {\n                    provide: STRIPE_PUBLISHABLE_KEY,\n                    useValue: publishableKey\n                },\n                {\n                    provide: STRIPE_OPTIONS,\n                    useValue: options\n                },\n                {\n                    provide: NGX_STRIPE_VERSION,\n                    useValue: currentVersion\n                }\n            ]\n        };\n    }\n    static forChild(publishableKey, options) {\n        return {\n            ngModule: NgxStripeModule,\n            providers: [\n                LazyStripeAPILoader,\n                StripeService,\n                StripeFactoryService,\n                StripeElementsService,\n                WindowRef,\n                DocumentRef,\n                {\n                    provide: STRIPE_PUBLISHABLE_KEY,\n                    useValue: publishableKey\n                },\n                {\n                    provide: STRIPE_OPTIONS,\n                    useValue: options\n                },\n                {\n                    provide: NGX_STRIPE_VERSION,\n                    useValue: currentVersion\n                }\n            ]\n        };\n    }\n}\nNgxStripeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: NgxStripeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nNgxStripeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: NgxStripeModule, declarations: [StripeCardComponent,\n        StripeCardNumberComponent,\n        StripeCardExpiryComponent,\n        StripeCardCvcComponent,\n        StripeFpxBankComponent,\n        StripeIdealBankComponent,\n        StripeIbanComponent,\n        StripeAuBankAccountComponent,\n        StripePaymentElementComponent,\n        StripePaymentRequestButtonComponent, StripeCardGroupDirective,\n        NgxStripeElementLoadingTemplateDirective], imports: [CommonModule], exports: [StripeCardComponent,\n        StripeCardNumberComponent,\n        StripeCardExpiryComponent,\n        StripeCardCvcComponent,\n        StripeFpxBankComponent,\n        StripeIdealBankComponent,\n        StripeIbanComponent,\n        StripeAuBankAccountComponent,\n        StripePaymentElementComponent,\n        StripePaymentRequestButtonComponent, StripeCardGroupDirective,\n        NgxStripeElementLoadingTemplateDirective] });\nNgxStripeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: NgxStripeModule, imports: [[CommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: NgxStripeModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [...components, ...directives],\n                    exports: [...components, ...directives],\n                    imports: [CommonModule]\n                }]\n        }] });\n\n/*\n * Public API Surface of ngx-stripe\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { DocumentRef, LazyStripeAPILoader, NgxStripeElementLoadingTemplateDirective, NgxStripeModule, STRIPE_OPTIONS, STRIPE_PUBLISHABLE_KEY, StripeAuBankAccountComponent, StripeCardComponent, StripeCardCvcComponent, StripeCardExpiryComponent, StripeCardGroupDirective, StripeCardNumberComponent, StripeElementsService, StripeFactoryService, StripeFpxBankComponent, StripeIbanComponent, StripeIdealBankComponent, StripeInstance, StripePaymentElementComponent, StripePaymentRequestButtonComponent, StripeService, WindowRef };\n//# sourceMappingURL=ngx-stripe.mjs.map\n"]},"metadata":{},"sourceType":"module"}