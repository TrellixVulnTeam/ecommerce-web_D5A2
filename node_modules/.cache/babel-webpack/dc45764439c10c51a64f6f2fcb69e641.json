{"ast":null,"code":"import * as i2 from '@angular/common';\nimport { isPlatformBrowser, isPlatformServer, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Directive, InjectionToken, PLATFORM_ID, Injectable, Inject, EventEmitter, TemplateRef, Component, ContentChild, ViewChild, Input, Output, Optional, NgModule } from '@angular/core';\nimport { __awaiter } from 'tslib';\nimport { filter, first, map, switchMap } from 'rxjs/operators';\nimport { BehaviorSubject, from } from 'rxjs';\nconst _c0 = [\"stripeElementRef\"];\n\nfunction StripeCardComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, 3);\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.loadingTemplate);\n  }\n}\n\nfunction StripeCardNumberComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, 3);\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.loadingTemplate);\n  }\n}\n\nfunction StripeCardExpiryComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, 3);\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.loadingTemplate);\n  }\n}\n\nfunction StripeCardCvcComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, 3);\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.loadingTemplate);\n  }\n}\n\nfunction StripeFpxBankComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, 3);\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.loadingTemplate);\n  }\n}\n\nfunction StripeIdealBankComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, 3);\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.loadingTemplate);\n  }\n}\n\nfunction StripeIbanComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, 3);\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.loadingTemplate);\n  }\n}\n\nfunction StripeAuBankAccountComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, 3);\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.loadingTemplate);\n  }\n}\n\nclass NgxStripeElementLoadingTemplateDirective {\n  constructor(templateRef) {\n    this.templateRef = templateRef;\n  }\n\n}\n\nNgxStripeElementLoadingTemplateDirective.ɵfac = function NgxStripeElementLoadingTemplateDirective_Factory(t) {\n  return new (t || NgxStripeElementLoadingTemplateDirective)(i0.ɵɵdirectiveInject(i0.TemplateRef));\n};\n\nNgxStripeElementLoadingTemplateDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: NgxStripeElementLoadingTemplateDirective,\n  selectors: [[\"\", \"ngxStripeLoadingTemplate\", \"\"]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxStripeElementLoadingTemplateDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[ngxStripeLoadingTemplate]'\n    }]\n  }], function () {\n    return [{\n      type: i0.TemplateRef\n    }];\n  }, null);\n})();\n\nconst STRIPE_PUBLISHABLE_KEY = new InjectionToken('Stripe Publishable Key');\nconst STRIPE_OPTIONS = new InjectionToken('Stripe Options');\nconst NGX_STRIPE_VERSION = new InjectionToken('NGX_STRIPE_VERSION');\n\nclass StripeInstance {\n  constructor(version, loader, window, key, options) {\n    this.version = version;\n    this.loader = loader;\n    this.window = window;\n    this.key = key;\n    this.options = options;\n    this.stripe$ = new BehaviorSubject(undefined);\n    this.stripe = this.stripe$.asObservable().pipe(filter(stripe => Boolean(stripe)));\n    this.loader.asStream().pipe(filter(status => status.loaded === true), first(), map(() => this.window.getNativeWindow().Stripe)).subscribe(stripeInstance => {\n      const stripe = this.options ? stripeInstance(this.key, this.options) : stripeInstance(this.key);\n      stripe.registerAppInfo(this.getNgxStripeAppInfo(this.version));\n      this.stripe$.next(stripe);\n    });\n  }\n\n  getInstance() {\n    return this.stripe$.getValue();\n  }\n\n  elements(options) {\n    return this.stripe$.asObservable().pipe(filter(stripe => Boolean(stripe)), map(stripe => stripe.elements(options)), first());\n  }\n\n  redirectToCheckout(options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.redirectToCheckout(options))), first());\n  }\n\n  confirmPayment(options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmPayment(options))), first());\n  }\n\n  confirmAcssDebitPayment(clientSecret, data, options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmAcssDebitPayment(clientSecret, data, options))), first());\n  }\n\n  confirmAlipayPayment(clientSecret, data, options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmAlipayPayment(clientSecret, data, options))), first());\n  }\n\n  confirmAuBecsDebitPayment(clientSecret, data) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmAuBecsDebitPayment(clientSecret, data))), first());\n  }\n\n  confirmBancontactPayment(clientSecret, data, options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmBancontactPayment(clientSecret, data, options))), first());\n  }\n\n  confirmBoletoPayment(clientSecret, data, options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmBoletoPayment(clientSecret, data, options))), first());\n  }\n\n  confirmCardPayment(clientSecret, data, options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmCardPayment(clientSecret, data, options))), first());\n  }\n\n  confirmCustomerBalancePayment(clientSecret, data, options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmCustomerBalancePayment(clientSecret, data, options))), first());\n  }\n\n  confirmEpsPayment(clientSecret, data, options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmEpsPayment(clientSecret, data, options))), first());\n  }\n\n  confirmFpxPayment(clientSecret, data, options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmFpxPayment(clientSecret, data, options))), first());\n  }\n\n  confirmGiropayPayment(clientSecret, data, options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmGiropayPayment(clientSecret, data, options))), first());\n  }\n\n  confirmGrabPayPayment(clientSecret, data, options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmGrabPayPayment(clientSecret, data, options))), first());\n  }\n\n  confirmIdealPayment(clientSecret, data, options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmIdealPayment(clientSecret, data, options))), first());\n  }\n\n  confirmKlarnaPayment(clientSecret, data, options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmKlarnaPayment(clientSecret, data, options))), first());\n  }\n\n  confirmOxxoPayment(clientSecret, data, options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmOxxoPayment(clientSecret, data, options))), first());\n  }\n\n  confirmP24Payment(clientSecret, data, options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmP24Payment(clientSecret, data, options))), first());\n  }\n\n  confirmPayNowPayment(clientSecret, data, options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmPayNowPayment(clientSecret, data, options))), first());\n  }\n\n  confirmPayPalPayment(clientSecret, data) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmPayPalPayment(clientSecret, data))), first());\n  }\n\n  confirmPromptPayPayment(clientSecret, data, options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmPromptPayPayment(clientSecret, data, options))), first());\n  }\n\n  confirmSepaDebitPayment(clientSecret, data) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmSepaDebitPayment(clientSecret, data))), first());\n  }\n\n  confirmSofortPayment(clientSecret, data) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmSofortPayment(clientSecret, data))), first());\n  }\n\n  confirmWechatPayPayment(clientSecret, data, options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmWechatPayPayment(clientSecret, data, options))), first());\n  }\n\n  handleCardAction(clientSecret) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.handleCardAction(clientSecret))), first());\n  }\n\n  verifyMicrodepositsForPayment(clientSecret, data) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.verifyMicrodepositsForPayment(clientSecret, data))), first());\n  }\n\n  createPaymentMethod(paymentMethodData) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.createPaymentMethod(paymentMethodData))), first());\n  }\n\n  retrievePaymentIntent(clientSecret) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.retrievePaymentIntent(clientSecret))), first());\n  }\n\n  confirmSetup(options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmSetup(options))), first());\n  }\n\n  confirmAcssDebitSetup(clientSecret, data, options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmAcssDebitSetup(clientSecret, data, options))), first());\n  }\n\n  confirmAuBecsDebitSetup(clientSecret, data) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmAuBecsDebitSetup(clientSecret, data))), first());\n  }\n\n  confirmBacsDebitSetup(clientSecret, data) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmBacsDebitSetup(clientSecret, data))), first());\n  }\n\n  confirmBancontactSetup(clientSecret, data) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmBancontactSetup(clientSecret, data))), first());\n  }\n\n  confirmCardSetup(clientSecret, data, options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmCardSetup(clientSecret, data, options))), first());\n  }\n\n  confirmIdealSetup(clientSecret, data) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmIdealSetup(clientSecret, data))), first());\n  }\n\n  confirmPayPalSetup(clientSecret, data) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmPayPalSetup(clientSecret, data))), first());\n  }\n\n  confirmSepaDebitSetup(clientSecret, data) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmSepaDebitSetup(clientSecret, data))), first());\n  }\n\n  confirmSofortSetup(clientSecret, data) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmSofortSetup(clientSecret, data))), first());\n  }\n\n  confirmAffirmPayment(clientSecret, data, options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmAffirmPayment(clientSecret, data, options))), first());\n  }\n\n  confirmAfterpayClearpayPayment(clientSecret, data, options) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmAfterpayClearpayPayment(clientSecret, data, options))), first());\n  }\n\n  verifyMicrodepositsForSetup(clientSecret, data) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.verifyMicrodepositsForSetup(clientSecret, data))), first());\n  }\n\n  retrieveSetupIntent(clientSecret) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.retrieveSetupIntent(clientSecret))), first());\n  }\n\n  paymentRequest(options) {\n    const stripe = this.getInstance();\n    return stripe ? stripe.paymentRequest(options) : undefined;\n  }\n\n  createToken(tokenType, data) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.createToken(tokenType, data))), first());\n  }\n\n  createSource(a, b) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.createSource(a, b))), first());\n  }\n\n  retrieveSource(source) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.retrieveSource(source))), first());\n  }\n\n  verifyIdentity(clientSecret) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.verifyIdentity(clientSecret))), first());\n  }\n  /**\n   * @deprecated\n   */\n\n\n  handleCardPayment(clientSecret, element, data) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.handleCardPayment(clientSecret, element, data))), first());\n  }\n  /**\n   * @deprecated\n   */\n\n\n  confirmPaymentIntent(clientSecret, element, data) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmPaymentIntent(clientSecret, element, data))), first());\n  }\n  /**\n   * @deprecated\n   */\n\n\n  handleCardSetup(clientSecret, element, data) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.handleCardSetup(clientSecret, element, data))), first());\n  }\n  /**\n   * @deprecated\n   */\n\n\n  confirmSetupIntent(clientSecret, element, data) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.confirmSetupIntent(clientSecret, element, data))), first());\n  }\n  /**\n   * @deprecated\n   */\n\n\n  handleFpxPayment(clientSecret, element, data) {\n    return this.stripe.pipe(switchMap(stripe => from(stripe.handleFpxPayment(clientSecret, element, data))), first());\n  }\n\n  getNgxStripeAppInfo(version) {\n    return {\n      name: 'ngx-stripe',\n      url: 'https://ngx-stripe.dev',\n      partner_id: 'pp_partner_JR4l1rmvUoPP4V',\n      version\n    };\n  }\n\n}\n\nclass WindowRef {\n  constructor(platformId) {\n    this.platformId = platformId;\n  }\n\n  getNativeWindow() {\n    if (isPlatformBrowser(this.platformId)) {\n      return window;\n    }\n\n    return {};\n  }\n\n}\n\nWindowRef.ɵfac = function WindowRef_Factory(t) {\n  return new (t || WindowRef)(i0.ɵɵinject(PLATFORM_ID));\n};\n\nWindowRef.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: WindowRef,\n  factory: WindowRef.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(WindowRef, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, null);\n})();\n\nclass DocumentRef {\n  constructor(platformId) {\n    this.platformId = platformId;\n  }\n\n  getNativeDocument() {\n    if (isPlatformBrowser(this.platformId)) {\n      return document;\n    }\n\n    return {};\n  }\n\n}\n\nDocumentRef.ɵfac = function DocumentRef_Factory(t) {\n  return new (t || DocumentRef)(i0.ɵɵinject(PLATFORM_ID));\n};\n\nDocumentRef.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: DocumentRef,\n  factory: DocumentRef.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DocumentRef, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, null);\n})();\n\nclass LazyStripeAPILoader {\n  constructor(platformId, window, document) {\n    this.platformId = platformId;\n    this.window = window;\n    this.document = document;\n    this.status = new BehaviorSubject({\n      error: false,\n      loaded: false,\n      loading: false\n    });\n  }\n\n  asStream() {\n    this.load();\n    return this.status.asObservable();\n  }\n\n  isReady() {\n    return this.status.getValue().loaded;\n  }\n\n  load() {\n    if (isPlatformServer(this.platformId)) {\n      return;\n    }\n\n    const status = this.status.getValue();\n\n    if (this.window.getNativeWindow().hasOwnProperty('Stripe')) {\n      this.status.next({\n        error: false,\n        loaded: true,\n        loading: false\n      });\n    } else if (!status.loaded && !status.loading) {\n      this.status.next(Object.assign(Object.assign({}, status), {\n        loading: true\n      }));\n      const script = this.document.getNativeDocument().createElement('script');\n      script.type = 'text/javascript';\n      script.async = true;\n      script.defer = true;\n      script.src = 'https://js.stripe.com/v3/';\n\n      script.onload = () => {\n        this.status.next({\n          error: false,\n          loaded: true,\n          loading: false\n        });\n      };\n\n      script.onerror = () => {\n        this.status.next({\n          error: true,\n          loaded: false,\n          loading: false\n        });\n      };\n\n      this.document.getNativeDocument().body.appendChild(script);\n    }\n  }\n\n}\n\nLazyStripeAPILoader.ɵfac = function LazyStripeAPILoader_Factory(t) {\n  return new (t || LazyStripeAPILoader)(i0.ɵɵinject(PLATFORM_ID), i0.ɵɵinject(WindowRef), i0.ɵɵinject(DocumentRef));\n};\n\nLazyStripeAPILoader.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: LazyStripeAPILoader,\n  factory: LazyStripeAPILoader.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LazyStripeAPILoader, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }, {\n      type: WindowRef\n    }, {\n      type: DocumentRef\n    }];\n  }, null);\n})();\n\nclass StripeService {\n  constructor(version, key, options, loader, window) {\n    this.version = version;\n    this.key = key;\n    this.options = options;\n    this.loader = loader;\n    this.window = window;\n\n    if (key) {\n      this.stripe = new StripeInstance(this.version, this.loader, this.window, key, options);\n    }\n  }\n\n  getStripeReference() {\n    return this.loader.asStream().pipe(filter(status => status.loaded === true), map(() => this.window.getNativeWindow().Stripe));\n  }\n\n  getInstance() {\n    return this.stripe.getInstance();\n  }\n\n  setKey(key, options) {\n    return this.changeKey(key, options);\n  }\n\n  changeKey(key, options) {\n    this.stripe = new StripeInstance(this.version, this.loader, this.window, key, options);\n    return this.stripe;\n  }\n\n  elements(options) {\n    return this.stripe.elements(options);\n  }\n\n  redirectToCheckout(options) {\n    return this.stripe.redirectToCheckout(options);\n  }\n\n  confirmPayment(options) {\n    return this.stripe.confirmPayment(options);\n  }\n\n  confirmAcssDebitPayment(clientSecret, data, options) {\n    return this.stripe.confirmAcssDebitPayment(clientSecret, data, options);\n  }\n\n  confirmAlipayPayment(clientSecret, data, options) {\n    return this.stripe.confirmAlipayPayment(clientSecret, data, options);\n  }\n\n  confirmAuBecsDebitPayment(clientSecret, data) {\n    return this.stripe.confirmAuBecsDebitPayment(clientSecret, data);\n  }\n\n  confirmBancontactPayment(clientSecret, data, options) {\n    return this.stripe.confirmBancontactPayment(clientSecret, data, options);\n  }\n\n  confirmBoletoPayment(clientSecret, data, options) {\n    return this.stripe.confirmBoletoPayment(clientSecret, data, options);\n  }\n\n  confirmCardPayment(clientSecret, data, options) {\n    return this.stripe.confirmCardPayment(clientSecret, data, options);\n  }\n\n  confirmCustomerBalancePayment(clientSecret, data, options) {\n    return this.stripe.confirmCustomerBalancePayment(clientSecret, data, options);\n  }\n\n  confirmEpsPayment(clientSecret, data, options) {\n    return this.stripe.confirmEpsPayment(clientSecret, data, options);\n  }\n\n  confirmFpxPayment(clientSecret, data, options) {\n    return this.stripe.confirmFpxPayment(clientSecret, data, options);\n  }\n\n  confirmGiropayPayment(clientSecret, data, options) {\n    return this.stripe.confirmGiropayPayment(clientSecret, data, options);\n  }\n\n  confirmGrabPayPayment(clientSecret, data, options) {\n    return this.stripe.confirmGrabPayPayment(clientSecret, data, options);\n  }\n\n  confirmIdealPayment(clientSecret, data, options) {\n    return this.stripe.confirmIdealPayment(clientSecret, data, options);\n  }\n\n  confirmKlarnaPayment(clientSecret, data, options) {\n    return this.stripe.confirmKlarnaPayment(clientSecret, data, options);\n  }\n\n  confirmOxxoPayment(clientSecret, data, options) {\n    return this.stripe.confirmOxxoPayment(clientSecret, data, options);\n  }\n\n  confirmP24Payment(clientSecret, data, options) {\n    return this.stripe.confirmP24Payment(clientSecret, data, options);\n  }\n\n  confirmPayNowPayment(clientSecret, data, options) {\n    return this.stripe.confirmPayNowPayment(clientSecret, data, options);\n  }\n\n  confirmPayPalPayment(clientSecret, data) {\n    return this.stripe.confirmPayPalPayment(clientSecret, data);\n  }\n\n  confirmPromptPayPayment(clientSecret, data, options) {\n    return this.stripe.confirmPromptPayPayment(clientSecret, data, options);\n  }\n\n  confirmSepaDebitPayment(clientSecret, data) {\n    return this.stripe.confirmSepaDebitPayment(clientSecret, data);\n  }\n\n  confirmSofortPayment(clientSecret, data) {\n    return this.stripe.confirmSofortPayment(clientSecret, data);\n  }\n\n  confirmWechatPayPayment(clientSecret, data, options) {\n    return this.stripe.confirmWechatPayPayment(clientSecret, data, options);\n  }\n\n  handleCardAction(clientSecret) {\n    return this.stripe.handleCardAction(clientSecret);\n  }\n\n  verifyMicrodepositsForPayment(clientSecret, data) {\n    return this.stripe.verifyMicrodepositsForPayment(clientSecret, data);\n  }\n\n  createPaymentMethod(paymentMethodData) {\n    return this.stripe.createPaymentMethod(paymentMethodData);\n  }\n\n  retrievePaymentIntent(clientSecret) {\n    return this.stripe.retrievePaymentIntent(clientSecret);\n  }\n\n  confirmSetup(options) {\n    return this.stripe.confirmSetup(options);\n  }\n\n  confirmAcssDebitSetup(clientSecret, data, options) {\n    return this.stripe.confirmAcssDebitSetup(clientSecret, data, options);\n  }\n\n  confirmAuBecsDebitSetup(clientSecret, data) {\n    return this.stripe.confirmAuBecsDebitSetup(clientSecret, data);\n  }\n\n  confirmBacsDebitSetup(clientSecret, data) {\n    return this.stripe.confirmBacsDebitSetup(clientSecret, data);\n  }\n\n  confirmBancontactSetup(clientSecret, data) {\n    return this.stripe.confirmBancontactSetup(clientSecret, data);\n  }\n\n  confirmCardSetup(clientSecret, data, options) {\n    return this.stripe.confirmCardSetup(clientSecret, data, options);\n  }\n\n  confirmIdealSetup(clientSecret, data) {\n    return this.stripe.confirmIdealSetup(clientSecret, data);\n  }\n\n  confirmPayPalSetup(clientSecret, data) {\n    return this.stripe.confirmPayPalSetup(clientSecret, data);\n  }\n\n  confirmSepaDebitSetup(clientSecret, data) {\n    return this.stripe.confirmSepaDebitSetup(clientSecret, data);\n  }\n\n  confirmSofortSetup(clientSecret, data) {\n    return this.stripe.confirmSofortSetup(clientSecret, data);\n  }\n\n  confirmAffirmPayment(clientSecret, data, options) {\n    return this.stripe.confirmAffirmPayment(clientSecret, data, options);\n  }\n\n  confirmAfterpayClearpayPayment(clientSecret, data, options) {\n    return this.stripe.confirmAfterpayClearpayPayment(clientSecret, data, options);\n  }\n\n  verifyMicrodepositsForSetup(clientSecret, data) {\n    return this.stripe.verifyMicrodepositsForSetup(clientSecret, data);\n  }\n\n  retrieveSetupIntent(clientSecret) {\n    return this.stripe.retrieveSetupIntent(clientSecret);\n  }\n\n  paymentRequest(options) {\n    return this.stripe.paymentRequest(options);\n  }\n\n  createToken(tokenType, data) {\n    return this.stripe.createToken(tokenType, data);\n  }\n\n  createSource(a, b) {\n    return this.stripe.createSource(a, b);\n  }\n\n  retrieveSource(source) {\n    return this.stripe.retrieveSource(source);\n  }\n\n  verifyIdentity(clientSecret) {\n    return this.stripe.verifyIdentity(clientSecret);\n  }\n  /**\n   * @deprecated\n   */\n\n\n  handleCardPayment(clientSecret, element, data) {\n    return this.stripe.handleCardPayment(clientSecret, element, data);\n  }\n  /**\n   * @deprecated\n   */\n\n\n  confirmPaymentIntent(clientSecret, element, data) {\n    return this.stripe.confirmPaymentIntent(clientSecret, element, data);\n  }\n  /**\n   * @deprecated\n   */\n\n\n  handleCardSetup(clientSecret, element, data) {\n    return this.stripe.handleCardSetup(clientSecret, element, data);\n  }\n  /**\n   * @deprecated\n   */\n\n\n  confirmSetupIntent(clientSecret, element, data) {\n    return this.stripe.confirmSetupIntent(clientSecret, element, data);\n  }\n  /**\n   * @deprecated\n   */\n\n\n  handleFpxPayment(clientSecret, element, data) {\n    return this.stripe.handleFpxPayment(clientSecret, element, data);\n  }\n\n}\n\nStripeService.ɵfac = function StripeService_Factory(t) {\n  return new (t || StripeService)(i0.ɵɵinject(NGX_STRIPE_VERSION), i0.ɵɵinject(STRIPE_PUBLISHABLE_KEY), i0.ɵɵinject(STRIPE_OPTIONS), i0.ɵɵinject(LazyStripeAPILoader), i0.ɵɵinject(WindowRef));\n};\n\nStripeService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: StripeService,\n  factory: StripeService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StripeService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [NGX_STRIPE_VERSION]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [STRIPE_PUBLISHABLE_KEY]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [STRIPE_OPTIONS]\n      }]\n    }, {\n      type: LazyStripeAPILoader\n    }, {\n      type: WindowRef\n    }];\n  }, null);\n})();\n\nclass StripeElementsService {\n  constructor(stripeService) {\n    this.stripeService = stripeService;\n  }\n\n  elements(stripe, options = {}) {\n    if (stripe) {\n      if (Object.keys(options).length > 0) {\n        return stripe.elements(options);\n      }\n\n      return stripe.elements();\n    } else {\n      if (Object.keys(options).length > 0) {\n        return this.stripeService.elements(options);\n      }\n\n      return this.stripeService.elements();\n    }\n  }\n\n  paymentRequest(stripe, options) {\n    return stripe ? stripe.paymentRequest(options) : this.stripeService.paymentRequest(options);\n  }\n\n  mergeOptions(options, containerClass) {\n    if (!containerClass || options && options.classes) {\n      return options || {};\n    }\n\n    if (!options || !options.classes) {\n      return Object.assign(Object.assign({}, options || {}), {\n        classes: {\n          base: containerClass,\n          complete: `${containerClass}--complete`,\n          empty: `${containerClass}--empty`,\n          focus: `${containerClass}--focus`,\n          invalid: `${containerClass}--invalid`,\n          webkitAutoFill: `${containerClass}--webkit-autoFill`\n        }\n      });\n    }\n\n    return options || {};\n  }\n\n}\n\nStripeElementsService.ɵfac = function StripeElementsService_Factory(t) {\n  return new (t || StripeElementsService)(i0.ɵɵinject(StripeService));\n};\n\nStripeElementsService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: StripeElementsService,\n  factory: StripeElementsService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StripeElementsService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: StripeService\n    }];\n  }, null);\n})();\n\nclass StripeCardComponent {\n  constructor(stripeElementsService) {\n    this.stripeElementsService = stripeElementsService;\n    this.load = new EventEmitter();\n    this.blur = new EventEmitter();\n    this.change = new EventEmitter();\n    this.focus = new EventEmitter();\n    this.ready = new EventEmitter();\n    this.escape = new EventEmitter();\n    this.state = 'notready';\n  }\n\n  ngOnChanges(changes) {\n    return __awaiter(this, void 0, void 0, function* () {\n      this.state = 'starting';\n      const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n      let updateElements = false;\n\n      if (changes.elementsOptions || changes.stripe || !this.elements) {\n        this.elements = yield this.stripeElementsService.elements(this.stripe, this.elementsOptions).toPromise();\n        updateElements = true;\n      }\n\n      if (changes.options || changes.containerClass || !this.element || updateElements) {\n        if (this.element && !updateElements) {\n          this.update(options);\n        } else if (this.elements && updateElements) {\n          this.createElement(options);\n        }\n      }\n\n      this.state = 'ready';\n    });\n  }\n\n  ngOnInit() {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (this.state === 'notready') {\n        this.state = 'starting';\n        this.elements = yield this.stripeElementsService.elements(this.stripe).toPromise();\n        this.createElement();\n        this.state = 'ready';\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.element) {\n      this.element.destroy();\n    }\n  }\n\n  update(options) {\n    this.element.update(options);\n  }\n  /**\n   * @deprecated\n   */\n\n\n  getCard() {\n    return this.element;\n  }\n\n  createElement(options = {}) {\n    this.element = this.elements.create('card', options);\n    this.element.on('change', ev => this.change.emit(ev));\n    this.element.on('blur', () => this.blur.emit());\n    this.element.on('focus', () => this.focus.emit());\n    this.element.on('ready', () => this.ready.emit());\n    this.element.on('escape', () => this.escape.emit());\n    this.element.mount(this.stripeElementRef.nativeElement);\n    this.load.emit(this.element);\n  }\n\n}\n\nStripeCardComponent.ɵfac = function StripeCardComponent_Factory(t) {\n  return new (t || StripeCardComponent)(i0.ɵɵdirectiveInject(StripeElementsService));\n};\n\nStripeCardComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: StripeCardComponent,\n  selectors: [[\"ngx-stripe-card\"]],\n  contentQueries: function StripeCardComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, NgxStripeElementLoadingTemplateDirective, 5, TemplateRef);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.loadingTemplate = _t.first);\n    }\n  },\n  viewQuery: function StripeCardComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.stripeElementRef = _t.first);\n    }\n  },\n  inputs: {\n    containerClass: \"containerClass\",\n    options: \"options\",\n    elementsOptions: \"elementsOptions\",\n    stripe: \"stripe\"\n  },\n  outputs: {\n    load: \"load\",\n    blur: \"blur\",\n    change: \"change\",\n    focus: \"focus\",\n    ready: \"ready\",\n    escape: \"escape\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 3,\n  vars: 1,\n  consts: [[1, \"field\"], [\"stripeElementRef\", \"\"], [3, \"ngTemplateOutlet\", 4, \"ngIf\"], [3, \"ngTemplateOutlet\"]],\n  template: function StripeCardComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0, 1);\n      i0.ɵɵtemplate(2, StripeCardComponent_ng_container_2_Template, 1, 1, \"ng-container\", 2);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.state !== \"ready\" && ctx.loadingTemplate);\n    }\n  },\n  directives: [i2.NgIf, i2.NgTemplateOutlet],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StripeCardComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-stripe-card',\n      template: `\n    <div class=\"field\" #stripeElementRef>\n      <ng-container *ngIf=\"state !== 'ready' && loadingTemplate\" [ngTemplateOutlet]=\"loadingTemplate\"></ng-container>\n    </div>\n  `\n    }]\n  }], function () {\n    return [{\n      type: StripeElementsService\n    }];\n  }, {\n    loadingTemplate: [{\n      type: ContentChild,\n      args: [NgxStripeElementLoadingTemplateDirective, {\n        read: TemplateRef\n      }]\n    }],\n    stripeElementRef: [{\n      type: ViewChild,\n      args: ['stripeElementRef']\n    }],\n    containerClass: [{\n      type: Input\n    }],\n    options: [{\n      type: Input\n    }],\n    elementsOptions: [{\n      type: Input\n    }],\n    stripe: [{\n      type: Input\n    }],\n    load: [{\n      type: Output\n    }],\n    blur: [{\n      type: Output\n    }],\n    change: [{\n      type: Output\n    }],\n    focus: [{\n      type: Output\n    }],\n    ready: [{\n      type: Output\n    }],\n    escape: [{\n      type: Output\n    }]\n  });\n})();\n\nclass StripeCardGroupDirective {\n  constructor(stripeElementsService) {\n    this.stripeElementsService = stripeElementsService;\n    this.elements = new EventEmitter();\n    this.state = 'notready';\n  }\n\n  ngOnChanges(changes) {\n    return __awaiter(this, void 0, void 0, function* () {\n      this.state = 'starting';\n      const elementsOptions = this.elementsOptions;\n      const stripe = this.stripe;\n\n      if (changes.elementsOptions || changes.stripe || !this._elements) {\n        this._elements = yield this.stripeElementsService.elements(stripe, elementsOptions).toPromise();\n        this.elements.emit(this._elements);\n      }\n\n      this.state = 'ready';\n    });\n  }\n\n  ngOnInit() {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (this.state === 'notready') {\n        this.state = 'starting';\n        this._elements = yield this.stripeElementsService.elements(this.stripe).toPromise();\n        this.elements.emit(this._elements);\n        this.state = 'ready';\n      }\n    });\n  }\n\n}\n\nStripeCardGroupDirective.ɵfac = function StripeCardGroupDirective_Factory(t) {\n  return new (t || StripeCardGroupDirective)(i0.ɵɵdirectiveInject(StripeElementsService));\n};\n\nStripeCardGroupDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: StripeCardGroupDirective,\n  selectors: [[\"ngx-stripe-card-group\"], [\"\", \"ngxStripeCardGroup\", \"\"]],\n  inputs: {\n    elementsOptions: \"elementsOptions\",\n    stripe: \"stripe\"\n  },\n  outputs: {\n    elements: \"elements\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StripeCardGroupDirective, [{\n    type: Directive,\n    args: [{\n      selector: 'ngx-stripe-card-group,[ngxStripeCardGroup]'\n    }]\n  }], function () {\n    return [{\n      type: StripeElementsService\n    }];\n  }, {\n    elementsOptions: [{\n      type: Input\n    }],\n    stripe: [{\n      type: Input\n    }],\n    elements: [{\n      type: Output\n    }]\n  });\n})();\n\nclass StripeCardNumberComponent {\n  constructor(stripeElementsService, cardGroup) {\n    this.stripeElementsService = stripeElementsService;\n    this.cardGroup = cardGroup;\n    this.load = new EventEmitter();\n    this.blur = new EventEmitter();\n    this.change = new EventEmitter();\n    this.focus = new EventEmitter();\n    this.ready = new EventEmitter();\n    this.escape = new EventEmitter();\n  }\n\n  ngOnChanges(changes) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (changes.options || changes.containerClass) {\n        this.setupElement('options');\n      }\n    });\n  }\n\n  ngOnInit() {\n    if (this.cardGroup) {\n      this.cardGroupSubscription = this.cardGroup.elements.subscribe(elements => {\n        this.elements = elements;\n        this.setupElement('elements');\n      });\n    } else {\n      throw new Error('StripeCardNumberComponent must have StripeCardGroupDirective parent');\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.element) {\n      this.element.destroy();\n    }\n\n    if (this.cardGroupSubscription) {\n      this.cardGroupSubscription.unsubscribe();\n    }\n  }\n\n  update(options) {\n    this.element.update(options);\n  }\n  /**\n   * @deprecated\n   */\n\n\n  getCardNumber() {\n    return this.element;\n  }\n\n  setupElement(source) {\n    const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n\n    if (this.element && source === 'options') {\n      this.update(options);\n    } else if (this.elements && source === 'elements') {\n      this.element = this.elements.create('cardNumber', options);\n      this.element.on('change', ev => this.change.emit(ev));\n      this.element.on('blur', () => this.blur.emit());\n      this.element.on('focus', () => this.focus.emit());\n      this.element.on('ready', () => this.ready.emit());\n      this.element.on('escape', () => this.escape.emit());\n      this.element.mount(this.stripeElementRef.nativeElement);\n      this.load.emit(this.element);\n    }\n  }\n\n}\n\nStripeCardNumberComponent.ɵfac = function StripeCardNumberComponent_Factory(t) {\n  return new (t || StripeCardNumberComponent)(i0.ɵɵdirectiveInject(StripeElementsService), i0.ɵɵdirectiveInject(StripeCardGroupDirective, 8));\n};\n\nStripeCardNumberComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: StripeCardNumberComponent,\n  selectors: [[\"ngx-stripe-card-number\"]],\n  contentQueries: function StripeCardNumberComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, NgxStripeElementLoadingTemplateDirective, 5, TemplateRef);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.loadingTemplate = _t.first);\n    }\n  },\n  viewQuery: function StripeCardNumberComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.stripeElementRef = _t.first);\n    }\n  },\n  inputs: {\n    containerClass: \"containerClass\",\n    options: \"options\"\n  },\n  outputs: {\n    load: \"load\",\n    blur: \"blur\",\n    change: \"change\",\n    focus: \"focus\",\n    ready: \"ready\",\n    escape: \"escape\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 3,\n  vars: 1,\n  consts: [[1, \"field\"], [\"stripeElementRef\", \"\"], [3, \"ngTemplateOutlet\", 4, \"ngIf\"], [3, \"ngTemplateOutlet\"]],\n  template: function StripeCardNumberComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0, 1);\n      i0.ɵɵtemplate(2, StripeCardNumberComponent_ng_container_2_Template, 1, 1, \"ng-container\", 2);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.cardGroup && ctx.cardGroup.state !== \"ready\" && ctx.loadingTemplate);\n    }\n  },\n  directives: [i2.NgIf, i2.NgTemplateOutlet],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StripeCardNumberComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-stripe-card-number',\n      template: `\n    <div class=\"field\" #stripeElementRef>\n      <ng-container *ngIf=\"cardGroup && cardGroup.state !== 'ready' && loadingTemplate\" [ngTemplateOutlet]=\"loadingTemplate\"></ng-container>\n    </div>\n  `\n    }]\n  }], function () {\n    return [{\n      type: StripeElementsService\n    }, {\n      type: StripeCardGroupDirective,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, {\n    loadingTemplate: [{\n      type: ContentChild,\n      args: [NgxStripeElementLoadingTemplateDirective, {\n        read: TemplateRef\n      }]\n    }],\n    stripeElementRef: [{\n      type: ViewChild,\n      args: ['stripeElementRef']\n    }],\n    containerClass: [{\n      type: Input\n    }],\n    options: [{\n      type: Input\n    }],\n    load: [{\n      type: Output\n    }],\n    blur: [{\n      type: Output\n    }],\n    change: [{\n      type: Output\n    }],\n    focus: [{\n      type: Output\n    }],\n    ready: [{\n      type: Output\n    }],\n    escape: [{\n      type: Output\n    }]\n  });\n})();\n\nclass StripeCardExpiryComponent {\n  constructor(stripeElementsService, cardGroup) {\n    this.stripeElementsService = stripeElementsService;\n    this.cardGroup = cardGroup;\n    this.load = new EventEmitter();\n    this.blur = new EventEmitter();\n    this.change = new EventEmitter();\n    this.focus = new EventEmitter();\n    this.ready = new EventEmitter();\n    this.escape = new EventEmitter();\n  }\n\n  ngOnChanges(changes) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (changes.options || changes.containerClass) {\n        this.setupElement('options');\n      }\n    });\n  }\n\n  ngOnInit() {\n    if (this.cardGroup) {\n      this.cardGroupSubscription = this.cardGroup.elements.subscribe(elements => {\n        this.elements = elements;\n        this.setupElement('elements');\n      });\n    } else {\n      throw new Error('StripeCardExpiryComponent must have StripeCardGroupDirective parent');\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.element) {\n      this.element.destroy();\n    }\n\n    if (this.cardGroupSubscription) {\n      this.cardGroupSubscription.unsubscribe();\n    }\n  }\n\n  update(options) {\n    this.element.update(options);\n  }\n  /**\n   * @deprecated\n   */\n\n\n  getCardExpiry() {\n    return this.element;\n  }\n\n  setupElement(source) {\n    const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n\n    if (this.element && source === 'options') {\n      this.update(options);\n    } else if (this.elements && source === 'elements') {\n      this.element = this.elements.create('cardExpiry', options);\n      this.element.on('change', ev => this.change.emit(ev));\n      this.element.on('blur', () => this.blur.emit());\n      this.element.on('focus', () => this.focus.emit());\n      this.element.on('ready', () => this.ready.emit());\n      this.element.on('escape', () => this.escape.emit());\n      this.element.mount(this.stripeElementRef.nativeElement);\n      this.load.emit(this.element);\n    }\n  }\n\n}\n\nStripeCardExpiryComponent.ɵfac = function StripeCardExpiryComponent_Factory(t) {\n  return new (t || StripeCardExpiryComponent)(i0.ɵɵdirectiveInject(StripeElementsService), i0.ɵɵdirectiveInject(StripeCardGroupDirective, 8));\n};\n\nStripeCardExpiryComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: StripeCardExpiryComponent,\n  selectors: [[\"ngx-stripe-card-expiry\"]],\n  contentQueries: function StripeCardExpiryComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, NgxStripeElementLoadingTemplateDirective, 5, TemplateRef);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.loadingTemplate = _t.first);\n    }\n  },\n  viewQuery: function StripeCardExpiryComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.stripeElementRef = _t.first);\n    }\n  },\n  inputs: {\n    containerClass: \"containerClass\",\n    options: \"options\"\n  },\n  outputs: {\n    load: \"load\",\n    blur: \"blur\",\n    change: \"change\",\n    focus: \"focus\",\n    ready: \"ready\",\n    escape: \"escape\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 3,\n  vars: 1,\n  consts: [[1, \"field\"], [\"stripeElementRef\", \"\"], [3, \"ngTemplateOutlet\", 4, \"ngIf\"], [3, \"ngTemplateOutlet\"]],\n  template: function StripeCardExpiryComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0, 1);\n      i0.ɵɵtemplate(2, StripeCardExpiryComponent_ng_container_2_Template, 1, 1, \"ng-container\", 2);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.cardGroup && ctx.cardGroup.state !== \"ready\" && ctx.loadingTemplate);\n    }\n  },\n  directives: [i2.NgIf, i2.NgTemplateOutlet],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StripeCardExpiryComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-stripe-card-expiry',\n      template: `\n    <div class=\"field\" #stripeElementRef>\n      <ng-container *ngIf=\"cardGroup && cardGroup.state !== 'ready' && loadingTemplate\" [ngTemplateOutlet]=\"loadingTemplate\"></ng-container>\n    </div>\n  `\n    }]\n  }], function () {\n    return [{\n      type: StripeElementsService\n    }, {\n      type: StripeCardGroupDirective,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, {\n    loadingTemplate: [{\n      type: ContentChild,\n      args: [NgxStripeElementLoadingTemplateDirective, {\n        read: TemplateRef\n      }]\n    }],\n    stripeElementRef: [{\n      type: ViewChild,\n      args: ['stripeElementRef']\n    }],\n    containerClass: [{\n      type: Input\n    }],\n    options: [{\n      type: Input\n    }],\n    load: [{\n      type: Output\n    }],\n    blur: [{\n      type: Output\n    }],\n    change: [{\n      type: Output\n    }],\n    focus: [{\n      type: Output\n    }],\n    ready: [{\n      type: Output\n    }],\n    escape: [{\n      type: Output\n    }]\n  });\n})();\n\nclass StripeCardCvcComponent {\n  constructor(stripeElementsService, cardGroup) {\n    this.stripeElementsService = stripeElementsService;\n    this.cardGroup = cardGroup;\n    this.load = new EventEmitter();\n    this.blur = new EventEmitter();\n    this.change = new EventEmitter();\n    this.focus = new EventEmitter();\n    this.ready = new EventEmitter();\n    this.escape = new EventEmitter();\n  }\n\n  ngOnChanges(changes) {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (changes.options || changes.containerClass) {\n        this.setupElement('options');\n      }\n    });\n  }\n\n  ngOnInit() {\n    if (this.cardGroup) {\n      this.cardGroupSubscription = this.cardGroup.elements.subscribe(elements => {\n        this.elements = elements;\n        this.setupElement('elements');\n      });\n    } else {\n      throw new Error('StripeCardCvcComponent must have StripeCardGroupDirective parent');\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.element) {\n      this.element.destroy();\n    }\n\n    if (this.cardGroupSubscription) {\n      this.cardGroupSubscription.unsubscribe();\n    }\n  }\n\n  update(options) {\n    this.element.update(options);\n  }\n  /**\n   * @deprecated\n   */\n\n\n  getCardCvc() {\n    return this.element;\n  }\n\n  setupElement(source) {\n    const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n\n    if (this.element && source === 'options') {\n      this.update(options);\n    } else if (this.elements && source === 'elements') {\n      this.element = this.elements.create('cardCvc', options);\n      this.element.on('change', ev => this.change.emit(ev));\n      this.element.on('blur', () => this.blur.emit());\n      this.element.on('focus', () => this.focus.emit());\n      this.element.on('ready', () => this.ready.emit());\n      this.element.on('escape', () => this.escape.emit());\n      this.element.mount(this.stripeElementRef.nativeElement);\n      this.load.emit(this.element);\n    }\n  }\n\n}\n\nStripeCardCvcComponent.ɵfac = function StripeCardCvcComponent_Factory(t) {\n  return new (t || StripeCardCvcComponent)(i0.ɵɵdirectiveInject(StripeElementsService), i0.ɵɵdirectiveInject(StripeCardGroupDirective, 8));\n};\n\nStripeCardCvcComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: StripeCardCvcComponent,\n  selectors: [[\"ngx-stripe-card-cvc\"]],\n  contentQueries: function StripeCardCvcComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, NgxStripeElementLoadingTemplateDirective, 5, TemplateRef);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.loadingTemplate = _t.first);\n    }\n  },\n  viewQuery: function StripeCardCvcComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.stripeElementRef = _t.first);\n    }\n  },\n  inputs: {\n    containerClass: \"containerClass\",\n    options: \"options\"\n  },\n  outputs: {\n    load: \"load\",\n    blur: \"blur\",\n    change: \"change\",\n    focus: \"focus\",\n    ready: \"ready\",\n    escape: \"escape\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 3,\n  vars: 1,\n  consts: [[1, \"field\"], [\"stripeElementRef\", \"\"], [3, \"ngTemplateOutlet\", 4, \"ngIf\"], [3, \"ngTemplateOutlet\"]],\n  template: function StripeCardCvcComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0, 1);\n      i0.ɵɵtemplate(2, StripeCardCvcComponent_ng_container_2_Template, 1, 1, \"ng-container\", 2);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.cardGroup && ctx.cardGroup.state !== \"ready\" && ctx.loadingTemplate);\n    }\n  },\n  directives: [i2.NgIf, i2.NgTemplateOutlet],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StripeCardCvcComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-stripe-card-cvc',\n      template: `\n    <div class=\"field\" #stripeElementRef>\n      <ng-container *ngIf=\"cardGroup && cardGroup.state !== 'ready' && loadingTemplate\" [ngTemplateOutlet]=\"loadingTemplate\"></ng-container>\n    </div>\n  `\n    }]\n  }], function () {\n    return [{\n      type: StripeElementsService\n    }, {\n      type: StripeCardGroupDirective,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, {\n    loadingTemplate: [{\n      type: ContentChild,\n      args: [NgxStripeElementLoadingTemplateDirective, {\n        read: TemplateRef\n      }]\n    }],\n    stripeElementRef: [{\n      type: ViewChild,\n      args: ['stripeElementRef']\n    }],\n    containerClass: [{\n      type: Input\n    }],\n    options: [{\n      type: Input\n    }],\n    load: [{\n      type: Output\n    }],\n    blur: [{\n      type: Output\n    }],\n    change: [{\n      type: Output\n    }],\n    focus: [{\n      type: Output\n    }],\n    ready: [{\n      type: Output\n    }],\n    escape: [{\n      type: Output\n    }]\n  });\n})();\n\nclass StripeFpxBankComponent {\n  constructor(stripeElementsService) {\n    this.stripeElementsService = stripeElementsService;\n    this.load = new EventEmitter();\n    this.blur = new EventEmitter();\n    this.change = new EventEmitter();\n    this.focus = new EventEmitter();\n    this.ready = new EventEmitter();\n    this.escape = new EventEmitter();\n    this.state = 'notready';\n  }\n\n  ngOnChanges(changes) {\n    return __awaiter(this, void 0, void 0, function* () {\n      this.state = 'starting';\n      const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n      let updateElements = false;\n\n      if (changes.elementsOptions || changes.stripe || !this.elements) {\n        this.elements = yield this.stripeElementsService.elements(this.stripe, this.elementsOptions).toPromise();\n        updateElements = true;\n      }\n\n      if (changes.options || changes.containerClass || !this.element || updateElements) {\n        if (this.element && !updateElements) {\n          this.update(options);\n        } else if (this.elements && updateElements) {\n          this.createElement(options);\n        }\n      }\n\n      this.state = 'ready';\n    });\n  }\n\n  ngOnInit() {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (this.state === 'notready') {\n        this.state = 'starting';\n        this.elements = yield this.stripeElementsService.elements(this.stripe).toPromise();\n        this.createElement();\n        this.state = 'ready';\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.element) {\n      this.element.destroy();\n    }\n  }\n\n  update(options) {\n    this.element.update(options);\n  }\n  /**\n   * @deprecated\n   */\n\n\n  getFpxBank() {\n    return this.element;\n  }\n\n  createElement(options = {\n    accountHolderType: 'individual'\n  }) {\n    this.element = this.elements.create('fpxBank', options);\n    this.element.on('change', ev => this.change.emit(ev));\n    this.element.on('blur', () => this.blur.emit());\n    this.element.on('focus', () => this.focus.emit());\n    this.element.on('ready', () => this.ready.emit());\n    this.element.on('escape', () => this.escape.emit());\n    this.element.mount(this.stripeElementRef.nativeElement);\n    this.load.emit(this.element);\n  }\n\n}\n\nStripeFpxBankComponent.ɵfac = function StripeFpxBankComponent_Factory(t) {\n  return new (t || StripeFpxBankComponent)(i0.ɵɵdirectiveInject(StripeElementsService));\n};\n\nStripeFpxBankComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: StripeFpxBankComponent,\n  selectors: [[\"ngx-stripe-fpx-bank\"]],\n  contentQueries: function StripeFpxBankComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, NgxStripeElementLoadingTemplateDirective, 5, TemplateRef);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.loadingTemplate = _t.first);\n    }\n  },\n  viewQuery: function StripeFpxBankComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.stripeElementRef = _t.first);\n    }\n  },\n  inputs: {\n    containerClass: \"containerClass\",\n    options: \"options\",\n    elementsOptions: \"elementsOptions\",\n    stripe: \"stripe\"\n  },\n  outputs: {\n    load: \"load\",\n    blur: \"blur\",\n    change: \"change\",\n    focus: \"focus\",\n    ready: \"ready\",\n    escape: \"escape\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 3,\n  vars: 1,\n  consts: [[1, \"field\"], [\"stripeElementRef\", \"\"], [3, \"ngTemplateOutlet\", 4, \"ngIf\"], [3, \"ngTemplateOutlet\"]],\n  template: function StripeFpxBankComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0, 1);\n      i0.ɵɵtemplate(2, StripeFpxBankComponent_ng_container_2_Template, 1, 1, \"ng-container\", 2);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.state !== \"ready\" && ctx.loadingTemplate);\n    }\n  },\n  directives: [i2.NgIf, i2.NgTemplateOutlet],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StripeFpxBankComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-stripe-fpx-bank',\n      template: `\n    <div class=\"field\" #stripeElementRef>\n      <ng-container *ngIf=\"state !== 'ready' && loadingTemplate\" [ngTemplateOutlet]=\"loadingTemplate\"></ng-container>\n    </div>\n  `\n    }]\n  }], function () {\n    return [{\n      type: StripeElementsService\n    }];\n  }, {\n    loadingTemplate: [{\n      type: ContentChild,\n      args: [NgxStripeElementLoadingTemplateDirective, {\n        read: TemplateRef\n      }]\n    }],\n    stripeElementRef: [{\n      type: ViewChild,\n      args: ['stripeElementRef']\n    }],\n    containerClass: [{\n      type: Input\n    }],\n    options: [{\n      type: Input\n    }],\n    elementsOptions: [{\n      type: Input\n    }],\n    stripe: [{\n      type: Input\n    }],\n    load: [{\n      type: Output\n    }],\n    blur: [{\n      type: Output\n    }],\n    change: [{\n      type: Output\n    }],\n    focus: [{\n      type: Output\n    }],\n    ready: [{\n      type: Output\n    }],\n    escape: [{\n      type: Output\n    }]\n  });\n})();\n\nclass StripeIdealBankComponent {\n  constructor(stripeElementsService) {\n    this.stripeElementsService = stripeElementsService;\n    this.load = new EventEmitter();\n    this.blur = new EventEmitter();\n    this.change = new EventEmitter();\n    this.focus = new EventEmitter();\n    this.ready = new EventEmitter();\n    this.escape = new EventEmitter();\n    this.state = 'notready';\n  }\n\n  ngOnChanges(changes) {\n    return __awaiter(this, void 0, void 0, function* () {\n      this.state = 'starting';\n      const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n      let updateElements = false;\n\n      if (changes.elementsOptions || changes.stripe || !this.elements) {\n        this.elements = yield this.stripeElementsService.elements(this.stripe, this.elementsOptions).toPromise();\n        updateElements = true;\n      }\n\n      if (changes.options || changes.containerClass || !this.element || updateElements) {\n        if (this.element && !updateElements) {\n          this.update(options);\n        } else if (this.elements && updateElements) {\n          this.createElement(options);\n        }\n      }\n\n      this.state = 'ready';\n    });\n  }\n\n  ngOnInit() {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (this.state === 'notready') {\n        this.state = 'starting';\n        this.elements = yield this.stripeElementsService.elements(this.stripe).toPromise();\n        this.createElement();\n        this.state = 'ready';\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.element) {\n      this.element.destroy();\n    }\n  }\n\n  update(options) {\n    this.element.update(options);\n  }\n  /**\n   * @deprecated\n   */\n\n\n  getIdealBank() {\n    return this.element;\n  }\n\n  createElement(options = {}) {\n    this.element = this.elements.create('idealBank', options);\n    this.element.on('change', ev => this.change.emit(ev));\n    this.element.on('blur', () => this.blur.emit());\n    this.element.on('focus', () => this.focus.emit());\n    this.element.on('ready', () => this.ready.emit());\n    this.element.on('escape', () => this.escape.emit());\n    this.element.mount(this.stripeElementRef.nativeElement);\n    this.load.emit(this.element);\n  }\n\n}\n\nStripeIdealBankComponent.ɵfac = function StripeIdealBankComponent_Factory(t) {\n  return new (t || StripeIdealBankComponent)(i0.ɵɵdirectiveInject(StripeElementsService));\n};\n\nStripeIdealBankComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: StripeIdealBankComponent,\n  selectors: [[\"ngx-stripe-ideal-bank\"]],\n  contentQueries: function StripeIdealBankComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, NgxStripeElementLoadingTemplateDirective, 5, TemplateRef);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.loadingTemplate = _t.first);\n    }\n  },\n  viewQuery: function StripeIdealBankComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.stripeElementRef = _t.first);\n    }\n  },\n  inputs: {\n    containerClass: \"containerClass\",\n    options: \"options\",\n    elementsOptions: \"elementsOptions\",\n    stripe: \"stripe\"\n  },\n  outputs: {\n    load: \"load\",\n    blur: \"blur\",\n    change: \"change\",\n    focus: \"focus\",\n    ready: \"ready\",\n    escape: \"escape\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 3,\n  vars: 1,\n  consts: [[1, \"field\"], [\"stripeElementRef\", \"\"], [3, \"ngTemplateOutlet\", 4, \"ngIf\"], [3, \"ngTemplateOutlet\"]],\n  template: function StripeIdealBankComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0, 1);\n      i0.ɵɵtemplate(2, StripeIdealBankComponent_ng_container_2_Template, 1, 1, \"ng-container\", 2);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.state !== \"ready\" && ctx.loadingTemplate);\n    }\n  },\n  directives: [i2.NgIf, i2.NgTemplateOutlet],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StripeIdealBankComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-stripe-ideal-bank',\n      template: `\n    <div class=\"field\" #stripeElementRef>\n      <ng-container *ngIf=\"state !== 'ready' && loadingTemplate\" [ngTemplateOutlet]=\"loadingTemplate\"></ng-container>\n    </div>\n  `\n    }]\n  }], function () {\n    return [{\n      type: StripeElementsService\n    }];\n  }, {\n    loadingTemplate: [{\n      type: ContentChild,\n      args: [NgxStripeElementLoadingTemplateDirective, {\n        read: TemplateRef\n      }]\n    }],\n    stripeElementRef: [{\n      type: ViewChild,\n      args: ['stripeElementRef']\n    }],\n    containerClass: [{\n      type: Input\n    }],\n    options: [{\n      type: Input\n    }],\n    elementsOptions: [{\n      type: Input\n    }],\n    stripe: [{\n      type: Input\n    }],\n    load: [{\n      type: Output\n    }],\n    blur: [{\n      type: Output\n    }],\n    change: [{\n      type: Output\n    }],\n    focus: [{\n      type: Output\n    }],\n    ready: [{\n      type: Output\n    }],\n    escape: [{\n      type: Output\n    }]\n  });\n})();\n\nclass StripeIbanComponent {\n  constructor(stripeElementsService) {\n    this.stripeElementsService = stripeElementsService;\n    this.load = new EventEmitter();\n    this.blur = new EventEmitter();\n    this.change = new EventEmitter();\n    this.focus = new EventEmitter();\n    this.ready = new EventEmitter();\n    this.escape = new EventEmitter();\n    this.state = 'notready';\n  }\n\n  ngOnChanges(changes) {\n    return __awaiter(this, void 0, void 0, function* () {\n      this.state = 'starting';\n      const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n      let updateElements = false;\n\n      if (changes.elementsOptions || changes.stripe || !this.elements) {\n        this.elements = yield this.stripeElementsService.elements(this.stripe, this.elementsOptions).toPromise();\n        updateElements = true;\n      }\n\n      if (changes.options || changes.containerClass || !this.element || updateElements) {\n        if (this.element && !updateElements) {\n          this.update(options);\n        } else if (this.elements && updateElements) {\n          this.createElement(options);\n        }\n      }\n\n      this.state = 'ready';\n    });\n  }\n\n  ngOnInit() {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (this.state === 'notready') {\n        this.state = 'starting';\n        this.elements = yield this.stripeElementsService.elements(this.stripe).toPromise();\n        this.createElement();\n        this.state = 'ready';\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.element) {\n      this.element.destroy();\n    }\n  }\n\n  update(options) {\n    this.element.update(options);\n  }\n  /**\n   * @deprecated\n   */\n\n\n  getIban() {\n    return this.element;\n  }\n\n  createElement(options = {}) {\n    this.element = this.elements.create('iban', options);\n    this.element.on('change', ev => this.change.emit(ev));\n    this.element.on('blur', () => this.blur.emit());\n    this.element.on('focus', () => this.focus.emit());\n    this.element.on('ready', () => this.ready.emit());\n    this.element.on('escape', () => this.escape.emit());\n    this.element.mount(this.stripeElementRef.nativeElement);\n    this.load.emit(this.element);\n  }\n\n}\n\nStripeIbanComponent.ɵfac = function StripeIbanComponent_Factory(t) {\n  return new (t || StripeIbanComponent)(i0.ɵɵdirectiveInject(StripeElementsService));\n};\n\nStripeIbanComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: StripeIbanComponent,\n  selectors: [[\"ngx-stripe-iban\"]],\n  contentQueries: function StripeIbanComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, NgxStripeElementLoadingTemplateDirective, 5, TemplateRef);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.loadingTemplate = _t.first);\n    }\n  },\n  viewQuery: function StripeIbanComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.stripeElementRef = _t.first);\n    }\n  },\n  inputs: {\n    containerClass: \"containerClass\",\n    options: \"options\",\n    elementsOptions: \"elementsOptions\",\n    stripe: \"stripe\"\n  },\n  outputs: {\n    load: \"load\",\n    blur: \"blur\",\n    change: \"change\",\n    focus: \"focus\",\n    ready: \"ready\",\n    escape: \"escape\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 3,\n  vars: 1,\n  consts: [[1, \"field\"], [\"stripeElementRef\", \"\"], [3, \"ngTemplateOutlet\", 4, \"ngIf\"], [3, \"ngTemplateOutlet\"]],\n  template: function StripeIbanComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0, 1);\n      i0.ɵɵtemplate(2, StripeIbanComponent_ng_container_2_Template, 1, 1, \"ng-container\", 2);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.state !== \"ready\" && ctx.loadingTemplate);\n    }\n  },\n  directives: [i2.NgIf, i2.NgTemplateOutlet],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StripeIbanComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-stripe-iban',\n      template: `\n    <div class=\"field\" #stripeElementRef>\n      <ng-container *ngIf=\"state !== 'ready' && loadingTemplate\" [ngTemplateOutlet]=\"loadingTemplate\"></ng-container>\n    </div>\n  `\n    }]\n  }], function () {\n    return [{\n      type: StripeElementsService\n    }];\n  }, {\n    loadingTemplate: [{\n      type: ContentChild,\n      args: [NgxStripeElementLoadingTemplateDirective, {\n        read: TemplateRef\n      }]\n    }],\n    stripeElementRef: [{\n      type: ViewChild,\n      args: ['stripeElementRef']\n    }],\n    containerClass: [{\n      type: Input\n    }],\n    options: [{\n      type: Input\n    }],\n    elementsOptions: [{\n      type: Input\n    }],\n    stripe: [{\n      type: Input\n    }],\n    load: [{\n      type: Output\n    }],\n    blur: [{\n      type: Output\n    }],\n    change: [{\n      type: Output\n    }],\n    focus: [{\n      type: Output\n    }],\n    ready: [{\n      type: Output\n    }],\n    escape: [{\n      type: Output\n    }]\n  });\n})();\n\nclass StripeAuBankAccountComponent {\n  constructor(stripeElementsService) {\n    this.stripeElementsService = stripeElementsService;\n    this.load = new EventEmitter();\n    this.blur = new EventEmitter();\n    this.change = new EventEmitter();\n    this.focus = new EventEmitter();\n    this.ready = new EventEmitter();\n    this.escape = new EventEmitter();\n    this.state = 'notready';\n  }\n\n  ngOnChanges(changes) {\n    return __awaiter(this, void 0, void 0, function* () {\n      this.state = 'starting';\n      const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n      let updateElements = false;\n\n      if (changes.elementsOptions || changes.stripe || !this.elements) {\n        this.elements = yield this.stripeElementsService.elements(this.stripe, this.elementsOptions).toPromise();\n        updateElements = true;\n      }\n\n      if (changes.options || changes.containerClass || !this.element || updateElements) {\n        if (this.element && !updateElements) {\n          this.update(options);\n        } else if (this.elements && updateElements) {\n          this.createElement(options);\n        }\n      }\n\n      this.state = 'ready';\n    });\n  }\n\n  ngOnInit() {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (this.state === 'notready') {\n        this.state = 'starting';\n        this.elements = yield this.stripeElementsService.elements(this.stripe).toPromise();\n        this.createElement();\n        this.state = 'ready';\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.element) {\n      this.element.destroy();\n    }\n  }\n\n  update(options) {\n    this.element.update(options);\n  }\n  /**\n   * @deprecated\n   */\n\n\n  getAuBankAccount() {\n    return this.element;\n  }\n\n  createElement(options = {}) {\n    this.element = this.elements.create('auBankAccount', options);\n    this.element.on('change', ev => this.change.emit(ev));\n    this.element.on('blur', () => this.blur.emit());\n    this.element.on('focus', () => this.focus.emit());\n    this.element.on('ready', () => this.ready.emit());\n    this.element.on('escape', () => this.escape.emit());\n    this.element.mount(this.stripeElementRef.nativeElement);\n    this.load.emit(this.element);\n  }\n\n}\n\nStripeAuBankAccountComponent.ɵfac = function StripeAuBankAccountComponent_Factory(t) {\n  return new (t || StripeAuBankAccountComponent)(i0.ɵɵdirectiveInject(StripeElementsService));\n};\n\nStripeAuBankAccountComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: StripeAuBankAccountComponent,\n  selectors: [[\"ngx-stripe-au-bank-account\"]],\n  contentQueries: function StripeAuBankAccountComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, NgxStripeElementLoadingTemplateDirective, 5, TemplateRef);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.loadingTemplate = _t.first);\n    }\n  },\n  viewQuery: function StripeAuBankAccountComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.stripeElementRef = _t.first);\n    }\n  },\n  inputs: {\n    containerClass: \"containerClass\",\n    options: \"options\",\n    elementsOptions: \"elementsOptions\",\n    stripe: \"stripe\"\n  },\n  outputs: {\n    load: \"load\",\n    blur: \"blur\",\n    change: \"change\",\n    focus: \"focus\",\n    ready: \"ready\",\n    escape: \"escape\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 3,\n  vars: 1,\n  consts: [[1, \"field\"], [\"stripeElementRef\", \"\"], [3, \"ngTemplateOutlet\", 4, \"ngIf\"], [3, \"ngTemplateOutlet\"]],\n  template: function StripeAuBankAccountComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0, 1);\n      i0.ɵɵtemplate(2, StripeAuBankAccountComponent_ng_container_2_Template, 1, 1, \"ng-container\", 2);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.state !== \"ready\" && ctx.loadingTemplate);\n    }\n  },\n  directives: [i2.NgIf, i2.NgTemplateOutlet],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StripeAuBankAccountComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-stripe-au-bank-account',\n      template: `\n    <div class=\"field\" #stripeElementRef>\n      <ng-container *ngIf=\"state !== 'ready' && loadingTemplate\" [ngTemplateOutlet]=\"loadingTemplate\"></ng-container>\n    </div>\n  `\n    }]\n  }], function () {\n    return [{\n      type: StripeElementsService\n    }];\n  }, {\n    loadingTemplate: [{\n      type: ContentChild,\n      args: [NgxStripeElementLoadingTemplateDirective, {\n        read: TemplateRef\n      }]\n    }],\n    stripeElementRef: [{\n      type: ViewChild,\n      args: ['stripeElementRef']\n    }],\n    containerClass: [{\n      type: Input\n    }],\n    options: [{\n      type: Input\n    }],\n    elementsOptions: [{\n      type: Input\n    }],\n    stripe: [{\n      type: Input\n    }],\n    load: [{\n      type: Output\n    }],\n    blur: [{\n      type: Output\n    }],\n    change: [{\n      type: Output\n    }],\n    focus: [{\n      type: Output\n    }],\n    ready: [{\n      type: Output\n    }],\n    escape: [{\n      type: Output\n    }]\n  });\n})();\n\nclass StripePaymentElementComponent {\n  constructor(stripeElementsService) {\n    this.stripeElementsService = stripeElementsService;\n    this.doNotCreateUntilClientSecretIsSet = false;\n    this.load = new EventEmitter();\n    this.blur = new EventEmitter();\n    this.change = new EventEmitter();\n    this.focus = new EventEmitter();\n    this.ready = new EventEmitter();\n    this.escape = new EventEmitter();\n    this.state = 'notready';\n  }\n\n  ngOnChanges(changes) {\n    return __awaiter(this, void 0, void 0, function* () {\n      this.state = 'starting';\n      const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n      let updateElements = false;\n\n      if (changes.elementsOptions || changes.stripe || changes.clientSecret || changes.appearance || !this.elements) {\n        this.elements = yield this.stripeElementsService.elements(this.stripe, Object.assign(Object.assign(Object.assign({}, this.elementsOptions || {}), this.appearance ? {\n          appearance: this.appearance\n        } : {}), this.clientSecret ? {\n          clientSecret: this.clientSecret\n        } : {})).toPromise();\n        updateElements = true;\n      }\n\n      if (changes.options || changes.containerClass || !this.element || updateElements) {\n        if (this.element && !updateElements) {\n          this.update(options);\n        } else if (this.elements && updateElements) {\n          this.createElement(options);\n        }\n      }\n\n      this.state = 'ready';\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.element) {\n      this.element.destroy();\n    }\n  }\n\n  update(options) {\n    return this.element.update(options);\n  }\n\n  collapse() {\n    return this.element.collapse();\n  }\n\n  createElement(options = {}) {\n    try {\n      this.element = this.elements.create('payment', options);\n    } catch (err) {\n      this.elements = null;\n      throw err;\n    }\n\n    this.element.on('change', ev => this.change.emit(ev));\n    this.element.on('blur', () => this.blur.emit());\n    this.element.on('focus', () => this.focus.emit());\n    this.element.on('ready', () => this.ready.emit());\n    this.element.on('escape', () => this.escape.emit());\n    this.element.mount(this.stripeElementRef.nativeElement);\n    this.load.emit(this.element);\n  }\n\n}\n\nStripePaymentElementComponent.ɵfac = function StripePaymentElementComponent_Factory(t) {\n  return new (t || StripePaymentElementComponent)(i0.ɵɵdirectiveInject(StripeElementsService));\n};\n\nStripePaymentElementComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: StripePaymentElementComponent,\n  selectors: [[\"ngx-stripe-payment\"]],\n  viewQuery: function StripePaymentElementComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.stripeElementRef = _t.first);\n    }\n  },\n  inputs: {\n    containerClass: \"containerClass\",\n    options: \"options\",\n    elementsOptions: \"elementsOptions\",\n    stripe: \"stripe\",\n    appearance: \"appearance\",\n    clientSecret: \"clientSecret\",\n    doNotCreateUntilClientSecretIsSet: \"doNotCreateUntilClientSecretIsSet\"\n  },\n  outputs: {\n    load: \"load\",\n    blur: \"blur\",\n    change: \"change\",\n    focus: \"focus\",\n    ready: \"ready\",\n    escape: \"escape\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 2,\n  vars: 0,\n  consts: [[1, \"field\"], [\"stripeElementRef\", \"\"]],\n  template: function StripePaymentElementComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"div\", 0, 1);\n    }\n  },\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StripePaymentElementComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-stripe-payment',\n      template: `<div class=\"field\" #stripeElementRef></div>`\n    }]\n  }], function () {\n    return [{\n      type: StripeElementsService\n    }];\n  }, {\n    stripeElementRef: [{\n      type: ViewChild,\n      args: ['stripeElementRef']\n    }],\n    containerClass: [{\n      type: Input\n    }],\n    options: [{\n      type: Input\n    }],\n    elementsOptions: [{\n      type: Input\n    }],\n    stripe: [{\n      type: Input\n    }],\n    appearance: [{\n      type: Input\n    }],\n    clientSecret: [{\n      type: Input\n    }],\n    doNotCreateUntilClientSecretIsSet: [{\n      type: Input\n    }],\n    load: [{\n      type: Output\n    }],\n    blur: [{\n      type: Output\n    }],\n    change: [{\n      type: Output\n    }],\n    focus: [{\n      type: Output\n    }],\n    ready: [{\n      type: Output\n    }],\n    escape: [{\n      type: Output\n    }]\n  });\n})();\n\nclass StripePaymentRequestButtonComponent {\n  constructor(stripeElementsService) {\n    this.stripeElementsService = stripeElementsService;\n    this.load = new EventEmitter();\n    this.change = new EventEmitter();\n    this.blur = new EventEmitter();\n    this.focus = new EventEmitter();\n    this.ready = new EventEmitter();\n    this.token = new EventEmitter();\n    this.paymentMethod = new EventEmitter();\n    this.source = new EventEmitter();\n    this.cancel = new EventEmitter();\n    this.shippingaddresschange = new EventEmitter();\n    this.shippingoptionchange = new EventEmitter();\n    this.notavailable = new EventEmitter();\n  }\n\n  ngOnChanges(changes) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n      const elementsOptions = this.elementsOptions;\n      const stripe = this.stripe;\n      let updateElements = false;\n\n      if (changes.elementsOptions || changes.stripe || !this.elements) {\n        const elements = yield this.stripeElementsService.elements(stripe, elementsOptions).toPromise();\n        this.elements = elements;\n        updateElements = true;\n      }\n\n      if (changes.paymentOptions && this.paymentRequest) {\n        this.updateRequest(this.paymentOptions);\n      }\n\n      if (changes.options || changes.containerClass || !this.element || updateElements) {\n        if (this.element && !updateElements) {\n          this.update(options);\n        } else if (this.elements && updateElements) {\n          this.paymentRequest = this.stripeElementsService.paymentRequest(stripe, this.paymentOptions);\n          this.paymentRequest.on('token', ev => this.token.emit(ev));\n          this.paymentRequest.on('paymentmethod', ev => this.paymentMethod.emit(ev));\n          this.paymentRequest.on('source', ev => this.source.emit(ev));\n          this.paymentRequest.on('cancel', () => this.cancel.emit());\n          this.paymentRequest.on('shippingaddresschange', ev => this.shippingaddresschange.emit(ev));\n          this.paymentRequest.on('shippingoptionchange', ev => this.shippingoptionchange.emit(ev));\n          this.element = this.elements.create('paymentRequestButton', Object.assign({\n            paymentRequest: this.paymentRequest\n          }, options));\n          this.canMakePayment().subscribe(result => {\n            if (result) {\n              this.element.on('click', ev => this.change.emit(ev));\n              this.element.on('blur', () => this.blur.emit());\n              this.element.on('focus', () => this.focus.emit());\n              this.element.on('ready', () => this.ready.emit());\n              this.element.mount(this.stripeElementRef.nativeElement);\n              this.load.emit({\n                paymentRequestButton: this.element,\n                paymentRequest: this.paymentRequest\n              });\n            } else {\n              this.notavailable.emit();\n            }\n          });\n        }\n      }\n    });\n  }\n\n  canMakePayment() {\n    return from(this.paymentRequest.canMakePayment());\n  }\n\n  update(options) {\n    this.element.update(options);\n  }\n\n  updateRequest(options) {\n    const {\n      currency,\n      total,\n      displayItems,\n      shippingOptions\n    } = options;\n    this.paymentRequest.update({\n      currency,\n      total,\n      displayItems,\n      shippingOptions\n    });\n  }\n\n  show() {\n    this.paymentRequest.show();\n  }\n  /**\n   * @deprecated\n   */\n\n\n  getButton() {\n    return this.element;\n  }\n\n}\n\nStripePaymentRequestButtonComponent.ɵfac = function StripePaymentRequestButtonComponent_Factory(t) {\n  return new (t || StripePaymentRequestButtonComponent)(i0.ɵɵdirectiveInject(StripeElementsService));\n};\n\nStripePaymentRequestButtonComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: StripePaymentRequestButtonComponent,\n  selectors: [[\"ngx-stripe-payment-request-button\"]],\n  viewQuery: function StripePaymentRequestButtonComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.stripeElementRef = _t.first);\n    }\n  },\n  inputs: {\n    containerClass: \"containerClass\",\n    paymentOptions: \"paymentOptions\",\n    options: \"options\",\n    elementsOptions: \"elementsOptions\",\n    stripe: \"stripe\"\n  },\n  outputs: {\n    load: \"load\",\n    change: \"change\",\n    blur: \"blur\",\n    focus: \"focus\",\n    ready: \"ready\",\n    token: \"token\",\n    paymentMethod: \"paymentMethod\",\n    source: \"source\",\n    cancel: \"cancel\",\n    shippingaddresschange: \"shippingaddresschange\",\n    shippingoptionchange: \"shippingoptionchange\",\n    notavailable: \"notavailable\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 2,\n  vars: 0,\n  consts: [[1, \"field\"], [\"stripeElementRef\", \"\"]],\n  template: function StripePaymentRequestButtonComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"div\", 0, 1);\n    }\n  },\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StripePaymentRequestButtonComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-stripe-payment-request-button',\n      template: `<div class=\"field\" #stripeElementRef></div>`\n    }]\n  }], function () {\n    return [{\n      type: StripeElementsService\n    }];\n  }, {\n    stripeElementRef: [{\n      type: ViewChild,\n      args: ['stripeElementRef']\n    }],\n    containerClass: [{\n      type: Input\n    }],\n    paymentOptions: [{\n      type: Input\n    }],\n    options: [{\n      type: Input\n    }],\n    elementsOptions: [{\n      type: Input\n    }],\n    stripe: [{\n      type: Input\n    }],\n    load: [{\n      type: Output\n    }],\n    change: [{\n      type: Output\n    }],\n    blur: [{\n      type: Output\n    }],\n    focus: [{\n      type: Output\n    }],\n    ready: [{\n      type: Output\n    }],\n    token: [{\n      type: Output\n    }],\n    paymentMethod: [{\n      type: Output\n    }],\n    source: [{\n      type: Output\n    }],\n    cancel: [{\n      type: Output\n    }],\n    shippingaddresschange: [{\n      type: Output\n    }],\n    shippingoptionchange: [{\n      type: Output\n    }],\n    notavailable: [{\n      type: Output\n    }]\n  });\n})();\n\nclass StripeFactoryService {\n  constructor(version, baseKey, baseOptions, loader, window) {\n    this.version = version;\n    this.baseKey = baseKey;\n    this.baseOptions = baseOptions;\n    this.loader = loader;\n    this.window = window;\n  }\n\n  create(key, options) {\n    if (!key && !this.baseKey) {\n      return null;\n    }\n\n    return new StripeInstance(this.version, this.loader, this.window, key || this.baseKey, options || this.baseOptions);\n  }\n\n}\n\nStripeFactoryService.ɵfac = function StripeFactoryService_Factory(t) {\n  return new (t || StripeFactoryService)(i0.ɵɵinject(NGX_STRIPE_VERSION), i0.ɵɵinject(STRIPE_PUBLISHABLE_KEY), i0.ɵɵinject(STRIPE_OPTIONS), i0.ɵɵinject(LazyStripeAPILoader), i0.ɵɵinject(WindowRef));\n};\n\nStripeFactoryService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: StripeFactoryService,\n  factory: StripeFactoryService.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StripeFactoryService, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [NGX_STRIPE_VERSION]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [STRIPE_PUBLISHABLE_KEY]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [STRIPE_OPTIONS]\n      }]\n    }, {\n      type: LazyStripeAPILoader\n    }, {\n      type: WindowRef\n    }];\n  }, null);\n})();\n\nconst components = [StripeCardComponent, StripeCardNumberComponent, StripeCardExpiryComponent, StripeCardCvcComponent, StripeFpxBankComponent, StripeIdealBankComponent, StripeIbanComponent, StripeAuBankAccountComponent, StripePaymentElementComponent, StripePaymentRequestButtonComponent];\nconst directives = [StripeCardGroupDirective, NgxStripeElementLoadingTemplateDirective];\nconst currentVersion = '13.0.0';\n\nclass NgxStripeModule {\n  static forRoot(publishableKey, options) {\n    return {\n      ngModule: NgxStripeModule,\n      providers: [LazyStripeAPILoader, StripeService, StripeFactoryService, StripeElementsService, WindowRef, DocumentRef, {\n        provide: STRIPE_PUBLISHABLE_KEY,\n        useValue: publishableKey\n      }, {\n        provide: STRIPE_OPTIONS,\n        useValue: options\n      }, {\n        provide: NGX_STRIPE_VERSION,\n        useValue: currentVersion\n      }]\n    };\n  }\n\n  static forChild(publishableKey, options) {\n    return {\n      ngModule: NgxStripeModule,\n      providers: [LazyStripeAPILoader, StripeService, StripeFactoryService, StripeElementsService, WindowRef, DocumentRef, {\n        provide: STRIPE_PUBLISHABLE_KEY,\n        useValue: publishableKey\n      }, {\n        provide: STRIPE_OPTIONS,\n        useValue: options\n      }, {\n        provide: NGX_STRIPE_VERSION,\n        useValue: currentVersion\n      }]\n    };\n  }\n\n}\n\nNgxStripeModule.ɵfac = function NgxStripeModule_Factory(t) {\n  return new (t || NgxStripeModule)();\n};\n\nNgxStripeModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: NgxStripeModule\n});\nNgxStripeModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxStripeModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [...components, ...directives],\n      exports: [...components, ...directives],\n      imports: [CommonModule]\n    }]\n  }], null, null);\n})();\n/*\n * Public API Surface of ngx-stripe\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { DocumentRef, LazyStripeAPILoader, NgxStripeElementLoadingTemplateDirective, NgxStripeModule, STRIPE_OPTIONS, STRIPE_PUBLISHABLE_KEY, StripeAuBankAccountComponent, StripeCardComponent, StripeCardCvcComponent, StripeCardExpiryComponent, StripeCardGroupDirective, StripeCardNumberComponent, StripeElementsService, StripeFactoryService, StripeFpxBankComponent, StripeIbanComponent, StripeIdealBankComponent, StripeInstance, StripePaymentElementComponent, StripePaymentRequestButtonComponent, StripeService, WindowRef };","map":{"version":3,"sources":["C:/Users/shivaniku/Documents/SHIVANI/node collection/EcommerceProject/mypage/node_modules/ngx-stripe/fesm2015/ngx-stripe.mjs"],"names":["i2","isPlatformBrowser","isPlatformServer","CommonModule","i0","Directive","InjectionToken","PLATFORM_ID","Injectable","Inject","EventEmitter","TemplateRef","Component","ContentChild","ViewChild","Input","Output","Optional","NgModule","__awaiter","filter","first","map","switchMap","BehaviorSubject","from","NgxStripeElementLoadingTemplateDirective","constructor","templateRef","ɵfac","ɵdir","type","args","selector","STRIPE_PUBLISHABLE_KEY","STRIPE_OPTIONS","NGX_STRIPE_VERSION","StripeInstance","version","loader","window","key","options","stripe$","undefined","stripe","asObservable","pipe","Boolean","asStream","status","loaded","getNativeWindow","Stripe","subscribe","stripeInstance","registerAppInfo","getNgxStripeAppInfo","next","getInstance","getValue","elements","redirectToCheckout","confirmPayment","confirmAcssDebitPayment","clientSecret","data","confirmAlipayPayment","confirmAuBecsDebitPayment","confirmBancontactPayment","confirmBoletoPayment","confirmCardPayment","confirmCustomerBalancePayment","confirmEpsPayment","confirmFpxPayment","confirmGiropayPayment","confirmGrabPayPayment","confirmIdealPayment","confirmKlarnaPayment","confirmOxxoPayment","confirmP24Payment","confirmPayNowPayment","confirmPayPalPayment","confirmPromptPayPayment","confirmSepaDebitPayment","confirmSofortPayment","confirmWechatPayPayment","handleCardAction","verifyMicrodepositsForPayment","createPaymentMethod","paymentMethodData","retrievePaymentIntent","confirmSetup","confirmAcssDebitSetup","confirmAuBecsDebitSetup","confirmBacsDebitSetup","confirmBancontactSetup","confirmCardSetup","confirmIdealSetup","confirmPayPalSetup","confirmSepaDebitSetup","confirmSofortSetup","confirmAffirmPayment","confirmAfterpayClearpayPayment","verifyMicrodepositsForSetup","retrieveSetupIntent","paymentRequest","createToken","tokenType","createSource","a","b","retrieveSource","source","verifyIdentity","handleCardPayment","element","confirmPaymentIntent","handleCardSetup","confirmSetupIntent","handleFpxPayment","name","url","partner_id","WindowRef","platformId","ɵprov","decorators","DocumentRef","getNativeDocument","document","LazyStripeAPILoader","error","loading","load","isReady","hasOwnProperty","Object","assign","script","createElement","async","defer","src","onload","onerror","body","appendChild","StripeService","getStripeReference","setKey","changeKey","StripeElementsService","stripeService","keys","length","mergeOptions","containerClass","classes","base","complete","empty","focus","invalid","webkitAutoFill","StripeCardComponent","stripeElementsService","blur","change","ready","escape","state","ngOnChanges","changes","updateElements","elementsOptions","toPromise","update","ngOnInit","ngOnDestroy","destroy","getCard","create","on","ev","emit","mount","stripeElementRef","nativeElement","ɵcmp","NgIf","NgTemplateOutlet","template","loadingTemplate","read","StripeCardGroupDirective","_elements","StripeCardNumberComponent","cardGroup","setupElement","cardGroupSubscription","Error","unsubscribe","getCardNumber","StripeCardExpiryComponent","getCardExpiry","StripeCardCvcComponent","getCardCvc","StripeFpxBankComponent","getFpxBank","accountHolderType","StripeIdealBankComponent","getIdealBank","StripeIbanComponent","getIban","StripeAuBankAccountComponent","getAuBankAccount","StripePaymentElementComponent","doNotCreateUntilClientSecretIsSet","appearance","collapse","err","StripePaymentRequestButtonComponent","token","paymentMethod","cancel","shippingaddresschange","shippingoptionchange","notavailable","paymentOptions","updateRequest","canMakePayment","result","paymentRequestButton","currency","total","displayItems","shippingOptions","show","getButton","StripeFactoryService","baseKey","baseOptions","components","directives","currentVersion","NgxStripeModule","forRoot","publishableKey","ngModule","providers","provide","useValue","forChild","ɵmod","ɵinj","declarations","exports","imports"],"mappings":"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","sourcesContent":["import * as i2 from '@angular/common';\nimport { isPlatformBrowser, isPlatformServer, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Directive, InjectionToken, PLATFORM_ID, Injectable, Inject, EventEmitter, TemplateRef, Component, ContentChild, ViewChild, Input, Output, Optional, NgModule } from '@angular/core';\nimport { __awaiter } from 'tslib';\nimport { filter, first, map, switchMap } from 'rxjs/operators';\nimport { BehaviorSubject, from } from 'rxjs';\n\nclass NgxStripeElementLoadingTemplateDirective {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nNgxStripeElementLoadingTemplateDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: NgxStripeElementLoadingTemplateDirective, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nNgxStripeElementLoadingTemplateDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.0\", type: NgxStripeElementLoadingTemplateDirective, selector: \"[ngxStripeLoadingTemplate]\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: NgxStripeElementLoadingTemplateDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[ngxStripeLoadingTemplate]'\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; } });\n\nconst STRIPE_PUBLISHABLE_KEY = new InjectionToken('Stripe Publishable Key');\nconst STRIPE_OPTIONS = new InjectionToken('Stripe Options');\nconst NGX_STRIPE_VERSION = new InjectionToken('NGX_STRIPE_VERSION');\n\nclass StripeInstance {\n    constructor(version, loader, window, key, options) {\n        this.version = version;\n        this.loader = loader;\n        this.window = window;\n        this.key = key;\n        this.options = options;\n        this.stripe$ = new BehaviorSubject(undefined);\n        this.stripe = this.stripe$\n            .asObservable()\n            .pipe(filter((stripe) => Boolean(stripe)));\n        this.loader\n            .asStream()\n            .pipe(filter((status) => status.loaded === true), first(), map(() => this.window.getNativeWindow().Stripe))\n            .subscribe((stripeInstance) => {\n            const stripe = this.options\n                ? stripeInstance(this.key, this.options)\n                : stripeInstance(this.key);\n            stripe.registerAppInfo(this.getNgxStripeAppInfo(this.version));\n            this.stripe$.next(stripe);\n        });\n    }\n    getInstance() {\n        return this.stripe$.getValue();\n    }\n    elements(options) {\n        return this.stripe$.asObservable().pipe(filter((stripe) => Boolean(stripe)), map((stripe) => stripe.elements(options)), first());\n    }\n    redirectToCheckout(options) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.redirectToCheckout(options))), first());\n    }\n    confirmPayment(options) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmPayment(options))), first());\n    }\n    confirmAcssDebitPayment(clientSecret, data, options) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmAcssDebitPayment(clientSecret, data, options))), first());\n    }\n    confirmAlipayPayment(clientSecret, data, options) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmAlipayPayment(clientSecret, data, options))), first());\n    }\n    confirmAuBecsDebitPayment(clientSecret, data) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmAuBecsDebitPayment(clientSecret, data))), first());\n    }\n    confirmBancontactPayment(clientSecret, data, options) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmBancontactPayment(clientSecret, data, options))), first());\n    }\n    confirmBoletoPayment(clientSecret, data, options) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmBoletoPayment(clientSecret, data, options))), first());\n    }\n    confirmCardPayment(clientSecret, data, options) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmCardPayment(clientSecret, data, options))), first());\n    }\n    confirmCustomerBalancePayment(clientSecret, data, options) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmCustomerBalancePayment(clientSecret, data, options))), first());\n    }\n    confirmEpsPayment(clientSecret, data, options) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmEpsPayment(clientSecret, data, options))), first());\n    }\n    confirmFpxPayment(clientSecret, data, options) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmFpxPayment(clientSecret, data, options))), first());\n    }\n    confirmGiropayPayment(clientSecret, data, options) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmGiropayPayment(clientSecret, data, options))), first());\n    }\n    confirmGrabPayPayment(clientSecret, data, options) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmGrabPayPayment(clientSecret, data, options))), first());\n    }\n    confirmIdealPayment(clientSecret, data, options) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmIdealPayment(clientSecret, data, options))), first());\n    }\n    confirmKlarnaPayment(clientSecret, data, options) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmKlarnaPayment(clientSecret, data, options))), first());\n    }\n    confirmOxxoPayment(clientSecret, data, options) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmOxxoPayment(clientSecret, data, options))), first());\n    }\n    confirmP24Payment(clientSecret, data, options) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmP24Payment(clientSecret, data, options))), first());\n    }\n    confirmPayNowPayment(clientSecret, data, options) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmPayNowPayment(clientSecret, data, options))), first());\n    }\n    confirmPayPalPayment(clientSecret, data) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmPayPalPayment(clientSecret, data))), first());\n    }\n    confirmPromptPayPayment(clientSecret, data, options) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmPromptPayPayment(clientSecret, data, options))), first());\n    }\n    confirmSepaDebitPayment(clientSecret, data) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmSepaDebitPayment(clientSecret, data))), first());\n    }\n    confirmSofortPayment(clientSecret, data) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmSofortPayment(clientSecret, data))), first());\n    }\n    confirmWechatPayPayment(clientSecret, data, options) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmWechatPayPayment(clientSecret, data, options))), first());\n    }\n    handleCardAction(clientSecret) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.handleCardAction(clientSecret))), first());\n    }\n    verifyMicrodepositsForPayment(clientSecret, data) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.verifyMicrodepositsForPayment(clientSecret, data))), first());\n    }\n    createPaymentMethod(paymentMethodData) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.createPaymentMethod(paymentMethodData))), first());\n    }\n    retrievePaymentIntent(clientSecret) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.retrievePaymentIntent(clientSecret))), first());\n    }\n    confirmSetup(options) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmSetup(options))), first());\n    }\n    confirmAcssDebitSetup(clientSecret, data, options) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmAcssDebitSetup(clientSecret, data, options))), first());\n    }\n    confirmAuBecsDebitSetup(clientSecret, data) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmAuBecsDebitSetup(clientSecret, data))), first());\n    }\n    confirmBacsDebitSetup(clientSecret, data) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmBacsDebitSetup(clientSecret, data))), first());\n    }\n    confirmBancontactSetup(clientSecret, data) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmBancontactSetup(clientSecret, data))), first());\n    }\n    confirmCardSetup(clientSecret, data, options) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmCardSetup(clientSecret, data, options))), first());\n    }\n    confirmIdealSetup(clientSecret, data) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmIdealSetup(clientSecret, data))), first());\n    }\n    confirmPayPalSetup(clientSecret, data) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmPayPalSetup(clientSecret, data))), first());\n    }\n    confirmSepaDebitSetup(clientSecret, data) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmSepaDebitSetup(clientSecret, data))), first());\n    }\n    confirmSofortSetup(clientSecret, data) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmSofortSetup(clientSecret, data))), first());\n    }\n    confirmAffirmPayment(clientSecret, data, options) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmAffirmPayment(clientSecret, data, options))), first());\n    }\n    confirmAfterpayClearpayPayment(clientSecret, data, options) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmAfterpayClearpayPayment(clientSecret, data, options))), first());\n    }\n    verifyMicrodepositsForSetup(clientSecret, data) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.verifyMicrodepositsForSetup(clientSecret, data))), first());\n    }\n    retrieveSetupIntent(clientSecret) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.retrieveSetupIntent(clientSecret))), first());\n    }\n    paymentRequest(options) {\n        const stripe = this.getInstance();\n        return stripe ? stripe.paymentRequest(options) : undefined;\n    }\n    createToken(tokenType, data) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.createToken(tokenType, data))), first());\n    }\n    createSource(a, b) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.createSource(a, b))), first());\n    }\n    retrieveSource(source) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.retrieveSource(source))), first());\n    }\n    verifyIdentity(clientSecret) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.verifyIdentity(clientSecret))), first());\n    }\n    /**\n     * @deprecated\n     */\n    handleCardPayment(clientSecret, element, data) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.handleCardPayment(clientSecret, element, data))), first());\n    }\n    /**\n     * @deprecated\n     */\n    confirmPaymentIntent(clientSecret, element, data) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmPaymentIntent(clientSecret, element, data))), first());\n    }\n    /**\n     * @deprecated\n     */\n    handleCardSetup(clientSecret, element, data) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.handleCardSetup(clientSecret, element, data))), first());\n    }\n    /**\n     * @deprecated\n     */\n    confirmSetupIntent(clientSecret, element, data) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.confirmSetupIntent(clientSecret, element, data))), first());\n    }\n    /**\n     * @deprecated\n     */\n    handleFpxPayment(clientSecret, element, data) {\n        return this.stripe.pipe(switchMap((stripe) => from(stripe.handleFpxPayment(clientSecret, element, data))), first());\n    }\n    getNgxStripeAppInfo(version) {\n        return {\n            name: 'ngx-stripe',\n            url: 'https://ngx-stripe.dev',\n            partner_id: 'pp_partner_JR4l1rmvUoPP4V',\n            version\n        };\n    }\n}\n\nclass WindowRef {\n    constructor(platformId) {\n        this.platformId = platformId;\n    }\n    getNativeWindow() {\n        if (isPlatformBrowser(this.platformId)) {\n            return window;\n        }\n        return {};\n    }\n}\nWindowRef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: WindowRef, deps: [{ token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Injectable });\nWindowRef.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: WindowRef });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: WindowRef, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Inject,\n                        args: [PLATFORM_ID]\n                    }] }];\n    } });\n\nclass DocumentRef {\n    constructor(platformId) {\n        this.platformId = platformId;\n    }\n    getNativeDocument() {\n        if (isPlatformBrowser(this.platformId)) {\n            return document;\n        }\n        return {};\n    }\n}\nDocumentRef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: DocumentRef, deps: [{ token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Injectable });\nDocumentRef.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: DocumentRef });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: DocumentRef, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Inject,\n                        args: [PLATFORM_ID]\n                    }] }];\n    } });\n\nclass LazyStripeAPILoader {\n    constructor(platformId, window, document) {\n        this.platformId = platformId;\n        this.window = window;\n        this.document = document;\n        this.status = new BehaviorSubject({\n            error: false,\n            loaded: false,\n            loading: false\n        });\n    }\n    asStream() {\n        this.load();\n        return this.status.asObservable();\n    }\n    isReady() {\n        return this.status.getValue().loaded;\n    }\n    load() {\n        if (isPlatformServer(this.platformId)) {\n            return;\n        }\n        const status = this.status.getValue();\n        if (this.window.getNativeWindow().hasOwnProperty('Stripe')) {\n            this.status.next({\n                error: false,\n                loaded: true,\n                loading: false\n            });\n        }\n        else if (!status.loaded && !status.loading) {\n            this.status.next(Object.assign(Object.assign({}, status), { loading: true }));\n            const script = this.document.getNativeDocument().createElement('script');\n            script.type = 'text/javascript';\n            script.async = true;\n            script.defer = true;\n            script.src = 'https://js.stripe.com/v3/';\n            script.onload = () => {\n                this.status.next({\n                    error: false,\n                    loaded: true,\n                    loading: false\n                });\n            };\n            script.onerror = () => {\n                this.status.next({\n                    error: true,\n                    loaded: false,\n                    loading: false\n                });\n            };\n            this.document.getNativeDocument().body.appendChild(script);\n        }\n    }\n}\nLazyStripeAPILoader.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: LazyStripeAPILoader, deps: [{ token: PLATFORM_ID }, { token: WindowRef }, { token: DocumentRef }], target: i0.ɵɵFactoryTarget.Injectable });\nLazyStripeAPILoader.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: LazyStripeAPILoader });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: LazyStripeAPILoader, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Inject,\n                        args: [PLATFORM_ID]\n                    }] }, { type: WindowRef }, { type: DocumentRef }];\n    } });\n\nclass StripeService {\n    constructor(version, key, options, loader, window) {\n        this.version = version;\n        this.key = key;\n        this.options = options;\n        this.loader = loader;\n        this.window = window;\n        if (key) {\n            this.stripe = new StripeInstance(this.version, this.loader, this.window, key, options);\n        }\n    }\n    getStripeReference() {\n        return this.loader.asStream().pipe(filter((status) => status.loaded === true), map(() => this.window.getNativeWindow().Stripe));\n    }\n    getInstance() {\n        return this.stripe.getInstance();\n    }\n    setKey(key, options) {\n        return this.changeKey(key, options);\n    }\n    changeKey(key, options) {\n        this.stripe = new StripeInstance(this.version, this.loader, this.window, key, options);\n        return this.stripe;\n    }\n    elements(options) {\n        return this.stripe.elements(options);\n    }\n    redirectToCheckout(options) {\n        return this.stripe.redirectToCheckout(options);\n    }\n    confirmPayment(options) {\n        return this.stripe.confirmPayment(options);\n    }\n    confirmAcssDebitPayment(clientSecret, data, options) {\n        return this.stripe.confirmAcssDebitPayment(clientSecret, data, options);\n    }\n    confirmAlipayPayment(clientSecret, data, options) {\n        return this.stripe.confirmAlipayPayment(clientSecret, data, options);\n    }\n    confirmAuBecsDebitPayment(clientSecret, data) {\n        return this.stripe.confirmAuBecsDebitPayment(clientSecret, data);\n    }\n    confirmBancontactPayment(clientSecret, data, options) {\n        return this.stripe.confirmBancontactPayment(clientSecret, data, options);\n    }\n    confirmBoletoPayment(clientSecret, data, options) {\n        return this.stripe.confirmBoletoPayment(clientSecret, data, options);\n    }\n    confirmCardPayment(clientSecret, data, options) {\n        return this.stripe.confirmCardPayment(clientSecret, data, options);\n    }\n    confirmCustomerBalancePayment(clientSecret, data, options) {\n        return this.stripe.confirmCustomerBalancePayment(clientSecret, data, options);\n    }\n    confirmEpsPayment(clientSecret, data, options) {\n        return this.stripe.confirmEpsPayment(clientSecret, data, options);\n    }\n    confirmFpxPayment(clientSecret, data, options) {\n        return this.stripe.confirmFpxPayment(clientSecret, data, options);\n    }\n    confirmGiropayPayment(clientSecret, data, options) {\n        return this.stripe.confirmGiropayPayment(clientSecret, data, options);\n    }\n    confirmGrabPayPayment(clientSecret, data, options) {\n        return this.stripe.confirmGrabPayPayment(clientSecret, data, options);\n    }\n    confirmIdealPayment(clientSecret, data, options) {\n        return this.stripe.confirmIdealPayment(clientSecret, data, options);\n    }\n    confirmKlarnaPayment(clientSecret, data, options) {\n        return this.stripe.confirmKlarnaPayment(clientSecret, data, options);\n    }\n    confirmOxxoPayment(clientSecret, data, options) {\n        return this.stripe.confirmOxxoPayment(clientSecret, data, options);\n    }\n    confirmP24Payment(clientSecret, data, options) {\n        return this.stripe.confirmP24Payment(clientSecret, data, options);\n    }\n    confirmPayNowPayment(clientSecret, data, options) {\n        return this.stripe.confirmPayNowPayment(clientSecret, data, options);\n    }\n    confirmPayPalPayment(clientSecret, data) {\n        return this.stripe.confirmPayPalPayment(clientSecret, data);\n    }\n    confirmPromptPayPayment(clientSecret, data, options) {\n        return this.stripe.confirmPromptPayPayment(clientSecret, data, options);\n    }\n    confirmSepaDebitPayment(clientSecret, data) {\n        return this.stripe.confirmSepaDebitPayment(clientSecret, data);\n    }\n    confirmSofortPayment(clientSecret, data) {\n        return this.stripe.confirmSofortPayment(clientSecret, data);\n    }\n    confirmWechatPayPayment(clientSecret, data, options) {\n        return this.stripe.confirmWechatPayPayment(clientSecret, data, options);\n    }\n    handleCardAction(clientSecret) {\n        return this.stripe.handleCardAction(clientSecret);\n    }\n    verifyMicrodepositsForPayment(clientSecret, data) {\n        return this.stripe.verifyMicrodepositsForPayment(clientSecret, data);\n    }\n    createPaymentMethod(paymentMethodData) {\n        return this.stripe.createPaymentMethod(paymentMethodData);\n    }\n    retrievePaymentIntent(clientSecret) {\n        return this.stripe.retrievePaymentIntent(clientSecret);\n    }\n    confirmSetup(options) {\n        return this.stripe.confirmSetup(options);\n    }\n    confirmAcssDebitSetup(clientSecret, data, options) {\n        return this.stripe.confirmAcssDebitSetup(clientSecret, data, options);\n    }\n    confirmAuBecsDebitSetup(clientSecret, data) {\n        return this.stripe.confirmAuBecsDebitSetup(clientSecret, data);\n    }\n    confirmBacsDebitSetup(clientSecret, data) {\n        return this.stripe.confirmBacsDebitSetup(clientSecret, data);\n    }\n    confirmBancontactSetup(clientSecret, data) {\n        return this.stripe.confirmBancontactSetup(clientSecret, data);\n    }\n    confirmCardSetup(clientSecret, data, options) {\n        return this.stripe.confirmCardSetup(clientSecret, data, options);\n    }\n    confirmIdealSetup(clientSecret, data) {\n        return this.stripe.confirmIdealSetup(clientSecret, data);\n    }\n    confirmPayPalSetup(clientSecret, data) {\n        return this.stripe.confirmPayPalSetup(clientSecret, data);\n    }\n    confirmSepaDebitSetup(clientSecret, data) {\n        return this.stripe.confirmSepaDebitSetup(clientSecret, data);\n    }\n    confirmSofortSetup(clientSecret, data) {\n        return this.stripe.confirmSofortSetup(clientSecret, data);\n    }\n    confirmAffirmPayment(clientSecret, data, options) {\n        return this.stripe.confirmAffirmPayment(clientSecret, data, options);\n    }\n    confirmAfterpayClearpayPayment(clientSecret, data, options) {\n        return this.stripe.confirmAfterpayClearpayPayment(clientSecret, data, options);\n    }\n    verifyMicrodepositsForSetup(clientSecret, data) {\n        return this.stripe.verifyMicrodepositsForSetup(clientSecret, data);\n    }\n    retrieveSetupIntent(clientSecret) {\n        return this.stripe.retrieveSetupIntent(clientSecret);\n    }\n    paymentRequest(options) {\n        return this.stripe.paymentRequest(options);\n    }\n    createToken(tokenType, data) {\n        return this.stripe.createToken(tokenType, data);\n    }\n    createSource(a, b) {\n        return this.stripe.createSource(a, b);\n    }\n    retrieveSource(source) {\n        return this.stripe.retrieveSource(source);\n    }\n    verifyIdentity(clientSecret) {\n        return this.stripe.verifyIdentity(clientSecret);\n    }\n    /**\n     * @deprecated\n     */\n    handleCardPayment(clientSecret, element, data) {\n        return this.stripe.handleCardPayment(clientSecret, element, data);\n    }\n    /**\n     * @deprecated\n     */\n    confirmPaymentIntent(clientSecret, element, data) {\n        return this.stripe.confirmPaymentIntent(clientSecret, element, data);\n    }\n    /**\n     * @deprecated\n     */\n    handleCardSetup(clientSecret, element, data) {\n        return this.stripe.handleCardSetup(clientSecret, element, data);\n    }\n    /**\n     * @deprecated\n     */\n    confirmSetupIntent(clientSecret, element, data) {\n        return this.stripe.confirmSetupIntent(clientSecret, element, data);\n    }\n    /**\n     * @deprecated\n     */\n    handleFpxPayment(clientSecret, element, data) {\n        return this.stripe.handleFpxPayment(clientSecret, element, data);\n    }\n}\nStripeService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: StripeService, deps: [{ token: NGX_STRIPE_VERSION }, { token: STRIPE_PUBLISHABLE_KEY }, { token: STRIPE_OPTIONS }, { token: LazyStripeAPILoader }, { token: WindowRef }], target: i0.ɵɵFactoryTarget.Injectable });\nStripeService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: StripeService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: StripeService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Inject,\n                        args: [NGX_STRIPE_VERSION]\n                    }] }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [STRIPE_PUBLISHABLE_KEY]\n                    }] }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [STRIPE_OPTIONS]\n                    }] }, { type: LazyStripeAPILoader }, { type: WindowRef }];\n    } });\n\nclass StripeElementsService {\n    constructor(stripeService) {\n        this.stripeService = stripeService;\n    }\n    elements(stripe, options = {}) {\n        if (stripe) {\n            if (Object.keys(options).length > 0) {\n                return stripe.elements(options);\n            }\n            return stripe.elements();\n        }\n        else {\n            if (Object.keys(options).length > 0) {\n                return this.stripeService.elements(options);\n            }\n            return this.stripeService.elements();\n        }\n    }\n    paymentRequest(stripe, options) {\n        return stripe\n            ? stripe.paymentRequest(options)\n            : this.stripeService.paymentRequest(options);\n    }\n    mergeOptions(options, containerClass) {\n        if (!containerClass || (options && options.classes)) {\n            return options || {};\n        }\n        if (!options || !options.classes) {\n            return Object.assign(Object.assign({}, (options || {})), { classes: {\n                    base: containerClass,\n                    complete: `${containerClass}--complete`,\n                    empty: `${containerClass}--empty`,\n                    focus: `${containerClass}--focus`,\n                    invalid: `${containerClass}--invalid`,\n                    webkitAutoFill: `${containerClass}--webkit-autoFill`\n                } });\n        }\n        return options || {};\n    }\n}\nStripeElementsService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: StripeElementsService, deps: [{ token: StripeService }], target: i0.ɵɵFactoryTarget.Injectable });\nStripeElementsService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: StripeElementsService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: StripeElementsService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: StripeService }]; } });\n\nclass StripeCardComponent {\n    constructor(stripeElementsService) {\n        this.stripeElementsService = stripeElementsService;\n        this.load = new EventEmitter();\n        this.blur = new EventEmitter();\n        this.change = new EventEmitter();\n        this.focus = new EventEmitter();\n        this.ready = new EventEmitter();\n        this.escape = new EventEmitter();\n        this.state = 'notready';\n    }\n    ngOnChanges(changes) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.state = 'starting';\n            const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n            let updateElements = false;\n            if (changes.elementsOptions || changes.stripe || !this.elements) {\n                this.elements = yield this.stripeElementsService\n                    .elements(this.stripe, this.elementsOptions)\n                    .toPromise();\n                updateElements = true;\n            }\n            if (changes.options ||\n                changes.containerClass ||\n                !this.element ||\n                updateElements) {\n                if (this.element && !updateElements) {\n                    this.update(options);\n                }\n                else if (this.elements && updateElements) {\n                    this.createElement(options);\n                }\n            }\n            this.state = 'ready';\n        });\n    }\n    ngOnInit() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.state === 'notready') {\n                this.state = 'starting';\n                this.elements = yield this.stripeElementsService\n                    .elements(this.stripe)\n                    .toPromise();\n                this.createElement();\n                this.state = 'ready';\n            }\n        });\n    }\n    ngOnDestroy() {\n        if (this.element) {\n            this.element.destroy();\n        }\n    }\n    update(options) {\n        this.element.update(options);\n    }\n    /**\n     * @deprecated\n     */\n    getCard() {\n        return this.element;\n    }\n    createElement(options = {}) {\n        this.element = this.elements.create('card', options);\n        this.element.on('change', (ev) => this.change.emit(ev));\n        this.element.on('blur', () => this.blur.emit());\n        this.element.on('focus', () => this.focus.emit());\n        this.element.on('ready', () => this.ready.emit());\n        this.element.on('escape', () => this.escape.emit());\n        this.element.mount(this.stripeElementRef.nativeElement);\n        this.load.emit(this.element);\n    }\n}\nStripeCardComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: StripeCardComponent, deps: [{ token: StripeElementsService }], target: i0.ɵɵFactoryTarget.Component });\nStripeCardComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.0\", type: StripeCardComponent, selector: \"ngx-stripe-card\", inputs: { containerClass: \"containerClass\", options: \"options\", elementsOptions: \"elementsOptions\", stripe: \"stripe\" }, outputs: { load: \"load\", blur: \"blur\", change: \"change\", focus: \"focus\", ready: \"ready\", escape: \"escape\" }, queries: [{ propertyName: \"loadingTemplate\", first: true, predicate: NgxStripeElementLoadingTemplateDirective, descendants: true, read: TemplateRef }], viewQueries: [{ propertyName: \"stripeElementRef\", first: true, predicate: [\"stripeElementRef\"], descendants: true }], usesOnChanges: true, ngImport: i0, template: `\n    <div class=\"field\" #stripeElementRef>\n      <ng-container *ngIf=\"state !== 'ready' && loadingTemplate\" [ngTemplateOutlet]=\"loadingTemplate\"></ng-container>\n    </div>\n  `, isInline: true, directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: StripeCardComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ngx-stripe-card',\n                    template: `\n    <div class=\"field\" #stripeElementRef>\n      <ng-container *ngIf=\"state !== 'ready' && loadingTemplate\" [ngTemplateOutlet]=\"loadingTemplate\"></ng-container>\n    </div>\n  `\n                }]\n        }], ctorParameters: function () { return [{ type: StripeElementsService }]; }, propDecorators: { loadingTemplate: [{\n                type: ContentChild,\n                args: [NgxStripeElementLoadingTemplateDirective, { read: TemplateRef }]\n            }], stripeElementRef: [{\n                type: ViewChild,\n                args: ['stripeElementRef']\n            }], containerClass: [{\n                type: Input\n            }], options: [{\n                type: Input\n            }], elementsOptions: [{\n                type: Input\n            }], stripe: [{\n                type: Input\n            }], load: [{\n                type: Output\n            }], blur: [{\n                type: Output\n            }], change: [{\n                type: Output\n            }], focus: [{\n                type: Output\n            }], ready: [{\n                type: Output\n            }], escape: [{\n                type: Output\n            }] } });\n\nclass StripeCardGroupDirective {\n    constructor(stripeElementsService) {\n        this.stripeElementsService = stripeElementsService;\n        this.elements = new EventEmitter();\n        this.state = 'notready';\n    }\n    ngOnChanges(changes) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.state = 'starting';\n            const elementsOptions = this.elementsOptions;\n            const stripe = this.stripe;\n            if (changes.elementsOptions || changes.stripe || !this._elements) {\n                this._elements = yield this.stripeElementsService\n                    .elements(stripe, elementsOptions)\n                    .toPromise();\n                this.elements.emit(this._elements);\n            }\n            this.state = 'ready';\n        });\n    }\n    ngOnInit() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.state === 'notready') {\n                this.state = 'starting';\n                this._elements = yield this.stripeElementsService\n                    .elements(this.stripe)\n                    .toPromise();\n                this.elements.emit(this._elements);\n                this.state = 'ready';\n            }\n        });\n    }\n}\nStripeCardGroupDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: StripeCardGroupDirective, deps: [{ token: StripeElementsService }], target: i0.ɵɵFactoryTarget.Directive });\nStripeCardGroupDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.0\", type: StripeCardGroupDirective, selector: \"ngx-stripe-card-group,[ngxStripeCardGroup]\", inputs: { elementsOptions: \"elementsOptions\", stripe: \"stripe\" }, outputs: { elements: \"elements\" }, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: StripeCardGroupDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'ngx-stripe-card-group,[ngxStripeCardGroup]'\n                }]\n        }], ctorParameters: function () { return [{ type: StripeElementsService }]; }, propDecorators: { elementsOptions: [{\n                type: Input\n            }], stripe: [{\n                type: Input\n            }], elements: [{\n                type: Output\n            }] } });\n\nclass StripeCardNumberComponent {\n    constructor(stripeElementsService, cardGroup) {\n        this.stripeElementsService = stripeElementsService;\n        this.cardGroup = cardGroup;\n        this.load = new EventEmitter();\n        this.blur = new EventEmitter();\n        this.change = new EventEmitter();\n        this.focus = new EventEmitter();\n        this.ready = new EventEmitter();\n        this.escape = new EventEmitter();\n    }\n    ngOnChanges(changes) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (changes.options || changes.containerClass) {\n                this.setupElement('options');\n            }\n        });\n    }\n    ngOnInit() {\n        if (this.cardGroup) {\n            this.cardGroupSubscription = this.cardGroup.elements.subscribe((elements) => {\n                this.elements = elements;\n                this.setupElement('elements');\n            });\n        }\n        else {\n            throw new Error('StripeCardNumberComponent must have StripeCardGroupDirective parent');\n        }\n    }\n    ngOnDestroy() {\n        if (this.element) {\n            this.element.destroy();\n        }\n        if (this.cardGroupSubscription) {\n            this.cardGroupSubscription.unsubscribe();\n        }\n    }\n    update(options) {\n        this.element.update(options);\n    }\n    /**\n     * @deprecated\n     */\n    getCardNumber() {\n        return this.element;\n    }\n    setupElement(source) {\n        const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n        if (this.element && source === 'options') {\n            this.update(options);\n        }\n        else if (this.elements && source === 'elements') {\n            this.element = this.elements.create('cardNumber', options);\n            this.element.on('change', (ev) => this.change.emit(ev));\n            this.element.on('blur', () => this.blur.emit());\n            this.element.on('focus', () => this.focus.emit());\n            this.element.on('ready', () => this.ready.emit());\n            this.element.on('escape', () => this.escape.emit());\n            this.element.mount(this.stripeElementRef.nativeElement);\n            this.load.emit(this.element);\n        }\n    }\n}\nStripeCardNumberComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: StripeCardNumberComponent, deps: [{ token: StripeElementsService }, { token: StripeCardGroupDirective, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nStripeCardNumberComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.0\", type: StripeCardNumberComponent, selector: \"ngx-stripe-card-number\", inputs: { containerClass: \"containerClass\", options: \"options\" }, outputs: { load: \"load\", blur: \"blur\", change: \"change\", focus: \"focus\", ready: \"ready\", escape: \"escape\" }, queries: [{ propertyName: \"loadingTemplate\", first: true, predicate: NgxStripeElementLoadingTemplateDirective, descendants: true, read: TemplateRef }], viewQueries: [{ propertyName: \"stripeElementRef\", first: true, predicate: [\"stripeElementRef\"], descendants: true }], usesOnChanges: true, ngImport: i0, template: `\n    <div class=\"field\" #stripeElementRef>\n      <ng-container *ngIf=\"cardGroup && cardGroup.state !== 'ready' && loadingTemplate\" [ngTemplateOutlet]=\"loadingTemplate\"></ng-container>\n    </div>\n  `, isInline: true, directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: StripeCardNumberComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ngx-stripe-card-number',\n                    template: `\n    <div class=\"field\" #stripeElementRef>\n      <ng-container *ngIf=\"cardGroup && cardGroup.state !== 'ready' && loadingTemplate\" [ngTemplateOutlet]=\"loadingTemplate\"></ng-container>\n    </div>\n  `\n                }]\n        }], ctorParameters: function () {\n        return [{ type: StripeElementsService }, { type: StripeCardGroupDirective, decorators: [{\n                        type: Optional\n                    }] }];\n    }, propDecorators: { loadingTemplate: [{\n                type: ContentChild,\n                args: [NgxStripeElementLoadingTemplateDirective, { read: TemplateRef }]\n            }], stripeElementRef: [{\n                type: ViewChild,\n                args: ['stripeElementRef']\n            }], containerClass: [{\n                type: Input\n            }], options: [{\n                type: Input\n            }], load: [{\n                type: Output\n            }], blur: [{\n                type: Output\n            }], change: [{\n                type: Output\n            }], focus: [{\n                type: Output\n            }], ready: [{\n                type: Output\n            }], escape: [{\n                type: Output\n            }] } });\n\nclass StripeCardExpiryComponent {\n    constructor(stripeElementsService, cardGroup) {\n        this.stripeElementsService = stripeElementsService;\n        this.cardGroup = cardGroup;\n        this.load = new EventEmitter();\n        this.blur = new EventEmitter();\n        this.change = new EventEmitter();\n        this.focus = new EventEmitter();\n        this.ready = new EventEmitter();\n        this.escape = new EventEmitter();\n    }\n    ngOnChanges(changes) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (changes.options || changes.containerClass) {\n                this.setupElement('options');\n            }\n        });\n    }\n    ngOnInit() {\n        if (this.cardGroup) {\n            this.cardGroupSubscription = this.cardGroup.elements.subscribe((elements) => {\n                this.elements = elements;\n                this.setupElement('elements');\n            });\n        }\n        else {\n            throw new Error('StripeCardExpiryComponent must have StripeCardGroupDirective parent');\n        }\n    }\n    ngOnDestroy() {\n        if (this.element) {\n            this.element.destroy();\n        }\n        if (this.cardGroupSubscription) {\n            this.cardGroupSubscription.unsubscribe();\n        }\n    }\n    update(options) {\n        this.element.update(options);\n    }\n    /**\n     * @deprecated\n     */\n    getCardExpiry() {\n        return this.element;\n    }\n    setupElement(source) {\n        const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n        if (this.element && source === 'options') {\n            this.update(options);\n        }\n        else if (this.elements && source === 'elements') {\n            this.element = this.elements.create('cardExpiry', options);\n            this.element.on('change', (ev) => this.change.emit(ev));\n            this.element.on('blur', () => this.blur.emit());\n            this.element.on('focus', () => this.focus.emit());\n            this.element.on('ready', () => this.ready.emit());\n            this.element.on('escape', () => this.escape.emit());\n            this.element.mount(this.stripeElementRef.nativeElement);\n            this.load.emit(this.element);\n        }\n    }\n}\nStripeCardExpiryComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: StripeCardExpiryComponent, deps: [{ token: StripeElementsService }, { token: StripeCardGroupDirective, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nStripeCardExpiryComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.0\", type: StripeCardExpiryComponent, selector: \"ngx-stripe-card-expiry\", inputs: { containerClass: \"containerClass\", options: \"options\" }, outputs: { load: \"load\", blur: \"blur\", change: \"change\", focus: \"focus\", ready: \"ready\", escape: \"escape\" }, queries: [{ propertyName: \"loadingTemplate\", first: true, predicate: NgxStripeElementLoadingTemplateDirective, descendants: true, read: TemplateRef }], viewQueries: [{ propertyName: \"stripeElementRef\", first: true, predicate: [\"stripeElementRef\"], descendants: true }], usesOnChanges: true, ngImport: i0, template: `\n    <div class=\"field\" #stripeElementRef>\n      <ng-container *ngIf=\"cardGroup && cardGroup.state !== 'ready' && loadingTemplate\" [ngTemplateOutlet]=\"loadingTemplate\"></ng-container>\n    </div>\n  `, isInline: true, directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: StripeCardExpiryComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ngx-stripe-card-expiry',\n                    template: `\n    <div class=\"field\" #stripeElementRef>\n      <ng-container *ngIf=\"cardGroup && cardGroup.state !== 'ready' && loadingTemplate\" [ngTemplateOutlet]=\"loadingTemplate\"></ng-container>\n    </div>\n  `\n                }]\n        }], ctorParameters: function () {\n        return [{ type: StripeElementsService }, { type: StripeCardGroupDirective, decorators: [{\n                        type: Optional\n                    }] }];\n    }, propDecorators: { loadingTemplate: [{\n                type: ContentChild,\n                args: [NgxStripeElementLoadingTemplateDirective, { read: TemplateRef }]\n            }], stripeElementRef: [{\n                type: ViewChild,\n                args: ['stripeElementRef']\n            }], containerClass: [{\n                type: Input\n            }], options: [{\n                type: Input\n            }], load: [{\n                type: Output\n            }], blur: [{\n                type: Output\n            }], change: [{\n                type: Output\n            }], focus: [{\n                type: Output\n            }], ready: [{\n                type: Output\n            }], escape: [{\n                type: Output\n            }] } });\n\nclass StripeCardCvcComponent {\n    constructor(stripeElementsService, cardGroup) {\n        this.stripeElementsService = stripeElementsService;\n        this.cardGroup = cardGroup;\n        this.load = new EventEmitter();\n        this.blur = new EventEmitter();\n        this.change = new EventEmitter();\n        this.focus = new EventEmitter();\n        this.ready = new EventEmitter();\n        this.escape = new EventEmitter();\n    }\n    ngOnChanges(changes) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (changes.options || changes.containerClass) {\n                this.setupElement('options');\n            }\n        });\n    }\n    ngOnInit() {\n        if (this.cardGroup) {\n            this.cardGroupSubscription = this.cardGroup.elements.subscribe((elements) => {\n                this.elements = elements;\n                this.setupElement('elements');\n            });\n        }\n        else {\n            throw new Error('StripeCardCvcComponent must have StripeCardGroupDirective parent');\n        }\n    }\n    ngOnDestroy() {\n        if (this.element) {\n            this.element.destroy();\n        }\n        if (this.cardGroupSubscription) {\n            this.cardGroupSubscription.unsubscribe();\n        }\n    }\n    update(options) {\n        this.element.update(options);\n    }\n    /**\n     * @deprecated\n     */\n    getCardCvc() {\n        return this.element;\n    }\n    setupElement(source) {\n        const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n        if (this.element && source === 'options') {\n            this.update(options);\n        }\n        else if (this.elements && source === 'elements') {\n            this.element = this.elements.create('cardCvc', options);\n            this.element.on('change', (ev) => this.change.emit(ev));\n            this.element.on('blur', () => this.blur.emit());\n            this.element.on('focus', () => this.focus.emit());\n            this.element.on('ready', () => this.ready.emit());\n            this.element.on('escape', () => this.escape.emit());\n            this.element.mount(this.stripeElementRef.nativeElement);\n            this.load.emit(this.element);\n        }\n    }\n}\nStripeCardCvcComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: StripeCardCvcComponent, deps: [{ token: StripeElementsService }, { token: StripeCardGroupDirective, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nStripeCardCvcComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.0\", type: StripeCardCvcComponent, selector: \"ngx-stripe-card-cvc\", inputs: { containerClass: \"containerClass\", options: \"options\" }, outputs: { load: \"load\", blur: \"blur\", change: \"change\", focus: \"focus\", ready: \"ready\", escape: \"escape\" }, queries: [{ propertyName: \"loadingTemplate\", first: true, predicate: NgxStripeElementLoadingTemplateDirective, descendants: true, read: TemplateRef }], viewQueries: [{ propertyName: \"stripeElementRef\", first: true, predicate: [\"stripeElementRef\"], descendants: true }], usesOnChanges: true, ngImport: i0, template: `\n    <div class=\"field\" #stripeElementRef>\n      <ng-container *ngIf=\"cardGroup && cardGroup.state !== 'ready' && loadingTemplate\" [ngTemplateOutlet]=\"loadingTemplate\"></ng-container>\n    </div>\n  `, isInline: true, directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: StripeCardCvcComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ngx-stripe-card-cvc',\n                    template: `\n    <div class=\"field\" #stripeElementRef>\n      <ng-container *ngIf=\"cardGroup && cardGroup.state !== 'ready' && loadingTemplate\" [ngTemplateOutlet]=\"loadingTemplate\"></ng-container>\n    </div>\n  `\n                }]\n        }], ctorParameters: function () {\n        return [{ type: StripeElementsService }, { type: StripeCardGroupDirective, decorators: [{\n                        type: Optional\n                    }] }];\n    }, propDecorators: { loadingTemplate: [{\n                type: ContentChild,\n                args: [NgxStripeElementLoadingTemplateDirective, { read: TemplateRef }]\n            }], stripeElementRef: [{\n                type: ViewChild,\n                args: ['stripeElementRef']\n            }], containerClass: [{\n                type: Input\n            }], options: [{\n                type: Input\n            }], load: [{\n                type: Output\n            }], blur: [{\n                type: Output\n            }], change: [{\n                type: Output\n            }], focus: [{\n                type: Output\n            }], ready: [{\n                type: Output\n            }], escape: [{\n                type: Output\n            }] } });\n\nclass StripeFpxBankComponent {\n    constructor(stripeElementsService) {\n        this.stripeElementsService = stripeElementsService;\n        this.load = new EventEmitter();\n        this.blur = new EventEmitter();\n        this.change = new EventEmitter();\n        this.focus = new EventEmitter();\n        this.ready = new EventEmitter();\n        this.escape = new EventEmitter();\n        this.state = 'notready';\n    }\n    ngOnChanges(changes) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.state = 'starting';\n            const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n            let updateElements = false;\n            if (changes.elementsOptions || changes.stripe || !this.elements) {\n                this.elements = yield this.stripeElementsService\n                    .elements(this.stripe, this.elementsOptions)\n                    .toPromise();\n                updateElements = true;\n            }\n            if (changes.options ||\n                changes.containerClass ||\n                !this.element ||\n                updateElements) {\n                if (this.element && !updateElements) {\n                    this.update(options);\n                }\n                else if (this.elements && updateElements) {\n                    this.createElement(options);\n                }\n            }\n            this.state = 'ready';\n        });\n    }\n    ngOnInit() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.state === 'notready') {\n                this.state = 'starting';\n                this.elements = yield this.stripeElementsService\n                    .elements(this.stripe)\n                    .toPromise();\n                this.createElement();\n                this.state = 'ready';\n            }\n        });\n    }\n    ngOnDestroy() {\n        if (this.element) {\n            this.element.destroy();\n        }\n    }\n    update(options) {\n        this.element.update(options);\n    }\n    /**\n     * @deprecated\n     */\n    getFpxBank() {\n        return this.element;\n    }\n    createElement(options = { accountHolderType: 'individual' }) {\n        this.element = this.elements.create('fpxBank', options);\n        this.element.on('change', (ev) => this.change.emit(ev));\n        this.element.on('blur', () => this.blur.emit());\n        this.element.on('focus', () => this.focus.emit());\n        this.element.on('ready', () => this.ready.emit());\n        this.element.on('escape', () => this.escape.emit());\n        this.element.mount(this.stripeElementRef.nativeElement);\n        this.load.emit(this.element);\n    }\n}\nStripeFpxBankComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: StripeFpxBankComponent, deps: [{ token: StripeElementsService }], target: i0.ɵɵFactoryTarget.Component });\nStripeFpxBankComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.0\", type: StripeFpxBankComponent, selector: \"ngx-stripe-fpx-bank\", inputs: { containerClass: \"containerClass\", options: \"options\", elementsOptions: \"elementsOptions\", stripe: \"stripe\" }, outputs: { load: \"load\", blur: \"blur\", change: \"change\", focus: \"focus\", ready: \"ready\", escape: \"escape\" }, queries: [{ propertyName: \"loadingTemplate\", first: true, predicate: NgxStripeElementLoadingTemplateDirective, descendants: true, read: TemplateRef }], viewQueries: [{ propertyName: \"stripeElementRef\", first: true, predicate: [\"stripeElementRef\"], descendants: true }], usesOnChanges: true, ngImport: i0, template: `\n    <div class=\"field\" #stripeElementRef>\n      <ng-container *ngIf=\"state !== 'ready' && loadingTemplate\" [ngTemplateOutlet]=\"loadingTemplate\"></ng-container>\n    </div>\n  `, isInline: true, directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: StripeFpxBankComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ngx-stripe-fpx-bank',\n                    template: `\n    <div class=\"field\" #stripeElementRef>\n      <ng-container *ngIf=\"state !== 'ready' && loadingTemplate\" [ngTemplateOutlet]=\"loadingTemplate\"></ng-container>\n    </div>\n  `\n                }]\n        }], ctorParameters: function () { return [{ type: StripeElementsService }]; }, propDecorators: { loadingTemplate: [{\n                type: ContentChild,\n                args: [NgxStripeElementLoadingTemplateDirective, { read: TemplateRef }]\n            }], stripeElementRef: [{\n                type: ViewChild,\n                args: ['stripeElementRef']\n            }], containerClass: [{\n                type: Input\n            }], options: [{\n                type: Input\n            }], elementsOptions: [{\n                type: Input\n            }], stripe: [{\n                type: Input\n            }], load: [{\n                type: Output\n            }], blur: [{\n                type: Output\n            }], change: [{\n                type: Output\n            }], focus: [{\n                type: Output\n            }], ready: [{\n                type: Output\n            }], escape: [{\n                type: Output\n            }] } });\n\nclass StripeIdealBankComponent {\n    constructor(stripeElementsService) {\n        this.stripeElementsService = stripeElementsService;\n        this.load = new EventEmitter();\n        this.blur = new EventEmitter();\n        this.change = new EventEmitter();\n        this.focus = new EventEmitter();\n        this.ready = new EventEmitter();\n        this.escape = new EventEmitter();\n        this.state = 'notready';\n    }\n    ngOnChanges(changes) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.state = 'starting';\n            const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n            let updateElements = false;\n            if (changes.elementsOptions || changes.stripe || !this.elements) {\n                this.elements = yield this.stripeElementsService\n                    .elements(this.stripe, this.elementsOptions)\n                    .toPromise();\n                updateElements = true;\n            }\n            if (changes.options ||\n                changes.containerClass ||\n                !this.element ||\n                updateElements) {\n                if (this.element && !updateElements) {\n                    this.update(options);\n                }\n                else if (this.elements && updateElements) {\n                    this.createElement(options);\n                }\n            }\n            this.state = 'ready';\n        });\n    }\n    ngOnInit() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.state === 'notready') {\n                this.state = 'starting';\n                this.elements = yield this.stripeElementsService\n                    .elements(this.stripe)\n                    .toPromise();\n                this.createElement();\n                this.state = 'ready';\n            }\n        });\n    }\n    ngOnDestroy() {\n        if (this.element) {\n            this.element.destroy();\n        }\n    }\n    update(options) {\n        this.element.update(options);\n    }\n    /**\n     * @deprecated\n     */\n    getIdealBank() {\n        return this.element;\n    }\n    createElement(options = {}) {\n        this.element = this.elements.create('idealBank', options);\n        this.element.on('change', (ev) => this.change.emit(ev));\n        this.element.on('blur', () => this.blur.emit());\n        this.element.on('focus', () => this.focus.emit());\n        this.element.on('ready', () => this.ready.emit());\n        this.element.on('escape', () => this.escape.emit());\n        this.element.mount(this.stripeElementRef.nativeElement);\n        this.load.emit(this.element);\n    }\n}\nStripeIdealBankComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: StripeIdealBankComponent, deps: [{ token: StripeElementsService }], target: i0.ɵɵFactoryTarget.Component });\nStripeIdealBankComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.0\", type: StripeIdealBankComponent, selector: \"ngx-stripe-ideal-bank\", inputs: { containerClass: \"containerClass\", options: \"options\", elementsOptions: \"elementsOptions\", stripe: \"stripe\" }, outputs: { load: \"load\", blur: \"blur\", change: \"change\", focus: \"focus\", ready: \"ready\", escape: \"escape\" }, queries: [{ propertyName: \"loadingTemplate\", first: true, predicate: NgxStripeElementLoadingTemplateDirective, descendants: true, read: TemplateRef }], viewQueries: [{ propertyName: \"stripeElementRef\", first: true, predicate: [\"stripeElementRef\"], descendants: true }], usesOnChanges: true, ngImport: i0, template: `\n    <div class=\"field\" #stripeElementRef>\n      <ng-container *ngIf=\"state !== 'ready' && loadingTemplate\" [ngTemplateOutlet]=\"loadingTemplate\"></ng-container>\n    </div>\n  `, isInline: true, directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: StripeIdealBankComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ngx-stripe-ideal-bank',\n                    template: `\n    <div class=\"field\" #stripeElementRef>\n      <ng-container *ngIf=\"state !== 'ready' && loadingTemplate\" [ngTemplateOutlet]=\"loadingTemplate\"></ng-container>\n    </div>\n  `\n                }]\n        }], ctorParameters: function () { return [{ type: StripeElementsService }]; }, propDecorators: { loadingTemplate: [{\n                type: ContentChild,\n                args: [NgxStripeElementLoadingTemplateDirective, { read: TemplateRef }]\n            }], stripeElementRef: [{\n                type: ViewChild,\n                args: ['stripeElementRef']\n            }], containerClass: [{\n                type: Input\n            }], options: [{\n                type: Input\n            }], elementsOptions: [{\n                type: Input\n            }], stripe: [{\n                type: Input\n            }], load: [{\n                type: Output\n            }], blur: [{\n                type: Output\n            }], change: [{\n                type: Output\n            }], focus: [{\n                type: Output\n            }], ready: [{\n                type: Output\n            }], escape: [{\n                type: Output\n            }] } });\n\nclass StripeIbanComponent {\n    constructor(stripeElementsService) {\n        this.stripeElementsService = stripeElementsService;\n        this.load = new EventEmitter();\n        this.blur = new EventEmitter();\n        this.change = new EventEmitter();\n        this.focus = new EventEmitter();\n        this.ready = new EventEmitter();\n        this.escape = new EventEmitter();\n        this.state = 'notready';\n    }\n    ngOnChanges(changes) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.state = 'starting';\n            const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n            let updateElements = false;\n            if (changes.elementsOptions || changes.stripe || !this.elements) {\n                this.elements = yield this.stripeElementsService\n                    .elements(this.stripe, this.elementsOptions)\n                    .toPromise();\n                updateElements = true;\n            }\n            if (changes.options ||\n                changes.containerClass ||\n                !this.element ||\n                updateElements) {\n                if (this.element && !updateElements) {\n                    this.update(options);\n                }\n                else if (this.elements && updateElements) {\n                    this.createElement(options);\n                }\n            }\n            this.state = 'ready';\n        });\n    }\n    ngOnInit() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.state === 'notready') {\n                this.state = 'starting';\n                this.elements = yield this.stripeElementsService\n                    .elements(this.stripe)\n                    .toPromise();\n                this.createElement();\n                this.state = 'ready';\n            }\n        });\n    }\n    ngOnDestroy() {\n        if (this.element) {\n            this.element.destroy();\n        }\n    }\n    update(options) {\n        this.element.update(options);\n    }\n    /**\n     * @deprecated\n     */\n    getIban() {\n        return this.element;\n    }\n    createElement(options = {}) {\n        this.element = this.elements.create('iban', options);\n        this.element.on('change', (ev) => this.change.emit(ev));\n        this.element.on('blur', () => this.blur.emit());\n        this.element.on('focus', () => this.focus.emit());\n        this.element.on('ready', () => this.ready.emit());\n        this.element.on('escape', () => this.escape.emit());\n        this.element.mount(this.stripeElementRef.nativeElement);\n        this.load.emit(this.element);\n    }\n}\nStripeIbanComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: StripeIbanComponent, deps: [{ token: StripeElementsService }], target: i0.ɵɵFactoryTarget.Component });\nStripeIbanComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.0\", type: StripeIbanComponent, selector: \"ngx-stripe-iban\", inputs: { containerClass: \"containerClass\", options: \"options\", elementsOptions: \"elementsOptions\", stripe: \"stripe\" }, outputs: { load: \"load\", blur: \"blur\", change: \"change\", focus: \"focus\", ready: \"ready\", escape: \"escape\" }, queries: [{ propertyName: \"loadingTemplate\", first: true, predicate: NgxStripeElementLoadingTemplateDirective, descendants: true, read: TemplateRef }], viewQueries: [{ propertyName: \"stripeElementRef\", first: true, predicate: [\"stripeElementRef\"], descendants: true }], usesOnChanges: true, ngImport: i0, template: `\n    <div class=\"field\" #stripeElementRef>\n      <ng-container *ngIf=\"state !== 'ready' && loadingTemplate\" [ngTemplateOutlet]=\"loadingTemplate\"></ng-container>\n    </div>\n  `, isInline: true, directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: StripeIbanComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ngx-stripe-iban',\n                    template: `\n    <div class=\"field\" #stripeElementRef>\n      <ng-container *ngIf=\"state !== 'ready' && loadingTemplate\" [ngTemplateOutlet]=\"loadingTemplate\"></ng-container>\n    </div>\n  `\n                }]\n        }], ctorParameters: function () { return [{ type: StripeElementsService }]; }, propDecorators: { loadingTemplate: [{\n                type: ContentChild,\n                args: [NgxStripeElementLoadingTemplateDirective, { read: TemplateRef }]\n            }], stripeElementRef: [{\n                type: ViewChild,\n                args: ['stripeElementRef']\n            }], containerClass: [{\n                type: Input\n            }], options: [{\n                type: Input\n            }], elementsOptions: [{\n                type: Input\n            }], stripe: [{\n                type: Input\n            }], load: [{\n                type: Output\n            }], blur: [{\n                type: Output\n            }], change: [{\n                type: Output\n            }], focus: [{\n                type: Output\n            }], ready: [{\n                type: Output\n            }], escape: [{\n                type: Output\n            }] } });\n\nclass StripeAuBankAccountComponent {\n    constructor(stripeElementsService) {\n        this.stripeElementsService = stripeElementsService;\n        this.load = new EventEmitter();\n        this.blur = new EventEmitter();\n        this.change = new EventEmitter();\n        this.focus = new EventEmitter();\n        this.ready = new EventEmitter();\n        this.escape = new EventEmitter();\n        this.state = 'notready';\n    }\n    ngOnChanges(changes) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.state = 'starting';\n            const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n            let updateElements = false;\n            if (changes.elementsOptions || changes.stripe || !this.elements) {\n                this.elements = yield this.stripeElementsService\n                    .elements(this.stripe, this.elementsOptions)\n                    .toPromise();\n                updateElements = true;\n            }\n            if (changes.options ||\n                changes.containerClass ||\n                !this.element ||\n                updateElements) {\n                if (this.element && !updateElements) {\n                    this.update(options);\n                }\n                else if (this.elements && updateElements) {\n                    this.createElement(options);\n                }\n            }\n            this.state = 'ready';\n        });\n    }\n    ngOnInit() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.state === 'notready') {\n                this.state = 'starting';\n                this.elements = yield this.stripeElementsService\n                    .elements(this.stripe)\n                    .toPromise();\n                this.createElement();\n                this.state = 'ready';\n            }\n        });\n    }\n    ngOnDestroy() {\n        if (this.element) {\n            this.element.destroy();\n        }\n    }\n    update(options) {\n        this.element.update(options);\n    }\n    /**\n     * @deprecated\n     */\n    getAuBankAccount() {\n        return this.element;\n    }\n    createElement(options = {}) {\n        this.element = this.elements.create('auBankAccount', options);\n        this.element.on('change', (ev) => this.change.emit(ev));\n        this.element.on('blur', () => this.blur.emit());\n        this.element.on('focus', () => this.focus.emit());\n        this.element.on('ready', () => this.ready.emit());\n        this.element.on('escape', () => this.escape.emit());\n        this.element.mount(this.stripeElementRef.nativeElement);\n        this.load.emit(this.element);\n    }\n}\nStripeAuBankAccountComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: StripeAuBankAccountComponent, deps: [{ token: StripeElementsService }], target: i0.ɵɵFactoryTarget.Component });\nStripeAuBankAccountComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.0\", type: StripeAuBankAccountComponent, selector: \"ngx-stripe-au-bank-account\", inputs: { containerClass: \"containerClass\", options: \"options\", elementsOptions: \"elementsOptions\", stripe: \"stripe\" }, outputs: { load: \"load\", blur: \"blur\", change: \"change\", focus: \"focus\", ready: \"ready\", escape: \"escape\" }, queries: [{ propertyName: \"loadingTemplate\", first: true, predicate: NgxStripeElementLoadingTemplateDirective, descendants: true, read: TemplateRef }], viewQueries: [{ propertyName: \"stripeElementRef\", first: true, predicate: [\"stripeElementRef\"], descendants: true }], usesOnChanges: true, ngImport: i0, template: `\n    <div class=\"field\" #stripeElementRef>\n      <ng-container *ngIf=\"state !== 'ready' && loadingTemplate\" [ngTemplateOutlet]=\"loadingTemplate\"></ng-container>\n    </div>\n  `, isInline: true, directives: [{ type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i2.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: StripeAuBankAccountComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ngx-stripe-au-bank-account',\n                    template: `\n    <div class=\"field\" #stripeElementRef>\n      <ng-container *ngIf=\"state !== 'ready' && loadingTemplate\" [ngTemplateOutlet]=\"loadingTemplate\"></ng-container>\n    </div>\n  `\n                }]\n        }], ctorParameters: function () { return [{ type: StripeElementsService }]; }, propDecorators: { loadingTemplate: [{\n                type: ContentChild,\n                args: [NgxStripeElementLoadingTemplateDirective, { read: TemplateRef }]\n            }], stripeElementRef: [{\n                type: ViewChild,\n                args: ['stripeElementRef']\n            }], containerClass: [{\n                type: Input\n            }], options: [{\n                type: Input\n            }], elementsOptions: [{\n                type: Input\n            }], stripe: [{\n                type: Input\n            }], load: [{\n                type: Output\n            }], blur: [{\n                type: Output\n            }], change: [{\n                type: Output\n            }], focus: [{\n                type: Output\n            }], ready: [{\n                type: Output\n            }], escape: [{\n                type: Output\n            }] } });\n\nclass StripePaymentElementComponent {\n    constructor(stripeElementsService) {\n        this.stripeElementsService = stripeElementsService;\n        this.doNotCreateUntilClientSecretIsSet = false;\n        this.load = new EventEmitter();\n        this.blur = new EventEmitter();\n        this.change = new EventEmitter();\n        this.focus = new EventEmitter();\n        this.ready = new EventEmitter();\n        this.escape = new EventEmitter();\n        this.state = 'notready';\n    }\n    ngOnChanges(changes) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.state = 'starting';\n            const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n            let updateElements = false;\n            if (changes.elementsOptions || changes.stripe || changes.clientSecret || changes.appearance || !this.elements) {\n                this.elements = yield this.stripeElementsService\n                    .elements(this.stripe, Object.assign(Object.assign(Object.assign({}, (this.elementsOptions || {})), (this.appearance ? { appearance: this.appearance } : {})), (this.clientSecret ? { clientSecret: this.clientSecret } : {})))\n                    .toPromise();\n                updateElements = true;\n            }\n            if (changes.options ||\n                changes.containerClass ||\n                !this.element ||\n                updateElements) {\n                if (this.element && !updateElements) {\n                    this.update(options);\n                }\n                else if (this.elements && updateElements) {\n                    this.createElement(options);\n                }\n            }\n            this.state = 'ready';\n        });\n    }\n    ngOnDestroy() {\n        if (this.element) {\n            this.element.destroy();\n        }\n    }\n    update(options) {\n        return this.element.update(options);\n    }\n    collapse() {\n        return this.element.collapse();\n    }\n    createElement(options = {}) {\n        try {\n            this.element = this.elements.create('payment', options);\n        }\n        catch (err) {\n            this.elements = null;\n            throw err;\n        }\n        this.element.on('change', (ev) => this.change.emit(ev));\n        this.element.on('blur', () => this.blur.emit());\n        this.element.on('focus', () => this.focus.emit());\n        this.element.on('ready', () => this.ready.emit());\n        this.element.on('escape', () => this.escape.emit());\n        this.element.mount(this.stripeElementRef.nativeElement);\n        this.load.emit(this.element);\n    }\n}\nStripePaymentElementComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: StripePaymentElementComponent, deps: [{ token: StripeElementsService }], target: i0.ɵɵFactoryTarget.Component });\nStripePaymentElementComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.0\", type: StripePaymentElementComponent, selector: \"ngx-stripe-payment\", inputs: { containerClass: \"containerClass\", options: \"options\", elementsOptions: \"elementsOptions\", stripe: \"stripe\", appearance: \"appearance\", clientSecret: \"clientSecret\", doNotCreateUntilClientSecretIsSet: \"doNotCreateUntilClientSecretIsSet\" }, outputs: { load: \"load\", blur: \"blur\", change: \"change\", focus: \"focus\", ready: \"ready\", escape: \"escape\" }, viewQueries: [{ propertyName: \"stripeElementRef\", first: true, predicate: [\"stripeElementRef\"], descendants: true }], usesOnChanges: true, ngImport: i0, template: `<div class=\"field\" #stripeElementRef></div>`, isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: StripePaymentElementComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ngx-stripe-payment',\n                    template: `<div class=\"field\" #stripeElementRef></div>`\n                }]\n        }], ctorParameters: function () { return [{ type: StripeElementsService }]; }, propDecorators: { stripeElementRef: [{\n                type: ViewChild,\n                args: ['stripeElementRef']\n            }], containerClass: [{\n                type: Input\n            }], options: [{\n                type: Input\n            }], elementsOptions: [{\n                type: Input\n            }], stripe: [{\n                type: Input\n            }], appearance: [{\n                type: Input\n            }], clientSecret: [{\n                type: Input\n            }], doNotCreateUntilClientSecretIsSet: [{\n                type: Input\n            }], load: [{\n                type: Output\n            }], blur: [{\n                type: Output\n            }], change: [{\n                type: Output\n            }], focus: [{\n                type: Output\n            }], ready: [{\n                type: Output\n            }], escape: [{\n                type: Output\n            }] } });\n\nclass StripePaymentRequestButtonComponent {\n    constructor(stripeElementsService) {\n        this.stripeElementsService = stripeElementsService;\n        this.load = new EventEmitter();\n        this.change = new EventEmitter();\n        this.blur = new EventEmitter();\n        this.focus = new EventEmitter();\n        this.ready = new EventEmitter();\n        this.token = new EventEmitter();\n        this.paymentMethod = new EventEmitter();\n        this.source = new EventEmitter();\n        this.cancel = new EventEmitter();\n        this.shippingaddresschange = new EventEmitter();\n        this.shippingoptionchange = new EventEmitter();\n        this.notavailable = new EventEmitter();\n    }\n    ngOnChanges(changes) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const options = this.stripeElementsService.mergeOptions(this.options, this.containerClass);\n            const elementsOptions = this.elementsOptions;\n            const stripe = this.stripe;\n            let updateElements = false;\n            if (changes.elementsOptions || changes.stripe || !this.elements) {\n                const elements = yield this.stripeElementsService\n                    .elements(stripe, elementsOptions)\n                    .toPromise();\n                this.elements = elements;\n                updateElements = true;\n            }\n            if (changes.paymentOptions && this.paymentRequest) {\n                this.updateRequest(this.paymentOptions);\n            }\n            if (changes.options ||\n                changes.containerClass ||\n                !this.element ||\n                updateElements) {\n                if (this.element && !updateElements) {\n                    this.update(options);\n                }\n                else if (this.elements && updateElements) {\n                    this.paymentRequest = this.stripeElementsService.paymentRequest(stripe, this.paymentOptions);\n                    this.paymentRequest.on('token', (ev) => this.token.emit(ev));\n                    this.paymentRequest.on('paymentmethod', (ev) => this.paymentMethod.emit(ev));\n                    this.paymentRequest.on('source', (ev) => this.source.emit(ev));\n                    this.paymentRequest.on('cancel', () => this.cancel.emit());\n                    this.paymentRequest.on('shippingaddresschange', (ev) => this.shippingaddresschange.emit(ev));\n                    this.paymentRequest.on('shippingoptionchange', (ev) => this.shippingoptionchange.emit(ev));\n                    this.element = this.elements.create('paymentRequestButton', Object.assign({ paymentRequest: this.paymentRequest }, options));\n                    this.canMakePayment().subscribe((result) => {\n                        if (result) {\n                            this.element.on('click', (ev) => this.change.emit(ev));\n                            this.element.on('blur', () => this.blur.emit());\n                            this.element.on('focus', () => this.focus.emit());\n                            this.element.on('ready', () => this.ready.emit());\n                            this.element.mount(this.stripeElementRef.nativeElement);\n                            this.load.emit({\n                                paymentRequestButton: this.element,\n                                paymentRequest: this.paymentRequest\n                            });\n                        }\n                        else {\n                            this.notavailable.emit();\n                        }\n                    });\n                }\n            }\n        });\n    }\n    canMakePayment() {\n        return from(this.paymentRequest.canMakePayment());\n    }\n    update(options) {\n        this.element.update(options);\n    }\n    updateRequest(options) {\n        const { currency, total, displayItems, shippingOptions } = options;\n        this.paymentRequest.update({\n            currency,\n            total,\n            displayItems,\n            shippingOptions\n        });\n    }\n    show() {\n        this.paymentRequest.show();\n    }\n    /**\n     * @deprecated\n     */\n    getButton() {\n        return this.element;\n    }\n}\nStripePaymentRequestButtonComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: StripePaymentRequestButtonComponent, deps: [{ token: StripeElementsService }], target: i0.ɵɵFactoryTarget.Component });\nStripePaymentRequestButtonComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.0\", type: StripePaymentRequestButtonComponent, selector: \"ngx-stripe-payment-request-button\", inputs: { containerClass: \"containerClass\", paymentOptions: \"paymentOptions\", options: \"options\", elementsOptions: \"elementsOptions\", stripe: \"stripe\" }, outputs: { load: \"load\", change: \"change\", blur: \"blur\", focus: \"focus\", ready: \"ready\", token: \"token\", paymentMethod: \"paymentMethod\", source: \"source\", cancel: \"cancel\", shippingaddresschange: \"shippingaddresschange\", shippingoptionchange: \"shippingoptionchange\", notavailable: \"notavailable\" }, viewQueries: [{ propertyName: \"stripeElementRef\", first: true, predicate: [\"stripeElementRef\"], descendants: true }], usesOnChanges: true, ngImport: i0, template: `<div class=\"field\" #stripeElementRef></div>`, isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: StripePaymentRequestButtonComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'ngx-stripe-payment-request-button',\n                    template: `<div class=\"field\" #stripeElementRef></div>`\n                }]\n        }], ctorParameters: function () { return [{ type: StripeElementsService }]; }, propDecorators: { stripeElementRef: [{\n                type: ViewChild,\n                args: ['stripeElementRef']\n            }], containerClass: [{\n                type: Input\n            }], paymentOptions: [{\n                type: Input\n            }], options: [{\n                type: Input\n            }], elementsOptions: [{\n                type: Input\n            }], stripe: [{\n                type: Input\n            }], load: [{\n                type: Output\n            }], change: [{\n                type: Output\n            }], blur: [{\n                type: Output\n            }], focus: [{\n                type: Output\n            }], ready: [{\n                type: Output\n            }], token: [{\n                type: Output\n            }], paymentMethod: [{\n                type: Output\n            }], source: [{\n                type: Output\n            }], cancel: [{\n                type: Output\n            }], shippingaddresschange: [{\n                type: Output\n            }], shippingoptionchange: [{\n                type: Output\n            }], notavailable: [{\n                type: Output\n            }] } });\n\nclass StripeFactoryService {\n    constructor(version, baseKey, baseOptions, loader, window) {\n        this.version = version;\n        this.baseKey = baseKey;\n        this.baseOptions = baseOptions;\n        this.loader = loader;\n        this.window = window;\n    }\n    create(key, options) {\n        if (!key && !this.baseKey) {\n            return null;\n        }\n        return new StripeInstance(this.version, this.loader, this.window, key || this.baseKey, options || this.baseOptions);\n    }\n}\nStripeFactoryService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: StripeFactoryService, deps: [{ token: NGX_STRIPE_VERSION }, { token: STRIPE_PUBLISHABLE_KEY }, { token: STRIPE_OPTIONS }, { token: LazyStripeAPILoader }, { token: WindowRef }], target: i0.ɵɵFactoryTarget.Injectable });\nStripeFactoryService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: StripeFactoryService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: StripeFactoryService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Inject,\n                        args: [NGX_STRIPE_VERSION]\n                    }] }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [STRIPE_PUBLISHABLE_KEY]\n                    }] }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [STRIPE_OPTIONS]\n                    }] }, { type: LazyStripeAPILoader }, { type: WindowRef }];\n    } });\n\nconst components = [\n    StripeCardComponent,\n    StripeCardNumberComponent,\n    StripeCardExpiryComponent,\n    StripeCardCvcComponent,\n    StripeFpxBankComponent,\n    StripeIdealBankComponent,\n    StripeIbanComponent,\n    StripeAuBankAccountComponent,\n    StripePaymentElementComponent,\n    StripePaymentRequestButtonComponent\n];\nconst directives = [\n    StripeCardGroupDirective,\n    NgxStripeElementLoadingTemplateDirective\n];\nconst currentVersion = '13.0.0';\nclass NgxStripeModule {\n    static forRoot(publishableKey, options) {\n        return {\n            ngModule: NgxStripeModule,\n            providers: [\n                LazyStripeAPILoader,\n                StripeService,\n                StripeFactoryService,\n                StripeElementsService,\n                WindowRef,\n                DocumentRef,\n                {\n                    provide: STRIPE_PUBLISHABLE_KEY,\n                    useValue: publishableKey\n                },\n                {\n                    provide: STRIPE_OPTIONS,\n                    useValue: options\n                },\n                {\n                    provide: NGX_STRIPE_VERSION,\n                    useValue: currentVersion\n                }\n            ]\n        };\n    }\n    static forChild(publishableKey, options) {\n        return {\n            ngModule: NgxStripeModule,\n            providers: [\n                LazyStripeAPILoader,\n                StripeService,\n                StripeFactoryService,\n                StripeElementsService,\n                WindowRef,\n                DocumentRef,\n                {\n                    provide: STRIPE_PUBLISHABLE_KEY,\n                    useValue: publishableKey\n                },\n                {\n                    provide: STRIPE_OPTIONS,\n                    useValue: options\n                },\n                {\n                    provide: NGX_STRIPE_VERSION,\n                    useValue: currentVersion\n                }\n            ]\n        };\n    }\n}\nNgxStripeModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: NgxStripeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nNgxStripeModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: NgxStripeModule, declarations: [StripeCardComponent,\n        StripeCardNumberComponent,\n        StripeCardExpiryComponent,\n        StripeCardCvcComponent,\n        StripeFpxBankComponent,\n        StripeIdealBankComponent,\n        StripeIbanComponent,\n        StripeAuBankAccountComponent,\n        StripePaymentElementComponent,\n        StripePaymentRequestButtonComponent, StripeCardGroupDirective,\n        NgxStripeElementLoadingTemplateDirective], imports: [CommonModule], exports: [StripeCardComponent,\n        StripeCardNumberComponent,\n        StripeCardExpiryComponent,\n        StripeCardCvcComponent,\n        StripeFpxBankComponent,\n        StripeIdealBankComponent,\n        StripeIbanComponent,\n        StripeAuBankAccountComponent,\n        StripePaymentElementComponent,\n        StripePaymentRequestButtonComponent, StripeCardGroupDirective,\n        NgxStripeElementLoadingTemplateDirective] });\nNgxStripeModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: NgxStripeModule, imports: [[CommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: NgxStripeModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [...components, ...directives],\n                    exports: [...components, ...directives],\n                    imports: [CommonModule]\n                }]\n        }] });\n\n/*\n * Public API Surface of ngx-stripe\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { DocumentRef, LazyStripeAPILoader, NgxStripeElementLoadingTemplateDirective, NgxStripeModule, STRIPE_OPTIONS, STRIPE_PUBLISHABLE_KEY, StripeAuBankAccountComponent, StripeCardComponent, StripeCardCvcComponent, StripeCardExpiryComponent, StripeCardGroupDirective, StripeCardNumberComponent, StripeElementsService, StripeFactoryService, StripeFpxBankComponent, StripeIbanComponent, StripeIdealBankComponent, StripeInstance, StripePaymentElementComponent, StripePaymentRequestButtonComponent, StripeService, WindowRef };\n"]},"metadata":{},"sourceType":"module"}